public class org.joda.time.format.ISODateTimeFormat extends java.lang.Object
{

    protected void <init>()
    {
        org.joda.time.format.ISODateTimeFormat r0;

        r0 := @this: org.joda.time.format.ISODateTimeFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.joda.time.format.DateTimeFormatter forFields(java.util.Collection, boolean, boolean)
    {
        java.util.Collection r0;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z12, $z13;
        int i0, $i1, $i2;
        java.lang.IllegalArgumentException $r4, $r15;
        java.util.HashSet $r5;
        org.joda.time.format.DateTimeFormatterBuilder $r6;
        org.joda.time.DateTimeFieldType $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        org.joda.time.format.DateTimeFormatter $r14, $r20, $r22;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.String $r19;
        java.lang.UnsupportedOperationException $r24;

        r0 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if r0 == null goto label01;

        $i1 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i1 != 0 goto label02;

     label01:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The fields must not be null or empty");

        throw $r4;

     label02:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r0);

        i0 = interfaceinvoke $r5.<java.util.Set: int size()>();

        z12 = 0;

        $r6 = new org.joda.time.format.DateTimeFormatterBuilder;

        specialinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: void <init>()>();

        $r7 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $z3 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z3 == 0 goto label03;

        z12 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r6, $r5, z0, z1);

        goto label09;

     label03:
        $r8 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $z4 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z4 == 0 goto label04;

        z12 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r6, $r5, z0, z1);

        goto label09;

     label04:
        $r9 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $z5 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r9);

        if $z5 == 0 goto label05;

        z12 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r6, $r5, z0, z1);

        goto label09;

     label05:
        $r10 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z6 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r10);

        if $z6 == 0 goto label06;

        z12 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r6, $r5, z0, z1);

        goto label09;

     label06:
        $r11 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z7 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>($r11);

        if $z7 == 0 goto label07;

        z12 = staticinvoke <org.joda.time.format.ISODateTimeFormat: boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean)>($r6, $r5, z0, z1);

        goto label09;

     label07:
        $r12 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $z8 = interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>($r12);

        if $z8 == 0 goto label08;

        $r22 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$000()>();

        virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r22);

        z12 = 1;

        goto label09;

     label08:
        $r13 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        $z9 = interfaceinvoke $r5.<java.util.Set: boolean remove(java.lang.Object)>($r13);

        if $z9 == 0 goto label09;

        $r20 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$100()>();

        virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r20);

        z12 = 1;

     label09:
        $i2 = interfaceinvoke $r5.<java.util.Set: int size()>();

        if $i2 >= i0 goto label10;

        $z13 = 1;

        goto label11;

     label10:
        $z13 = 0;

     label11:
        staticinvoke <org.joda.time.format.ISODateTimeFormat: void time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)>($r6, $r5, z0, z1, z12, $z13);

        $z10 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: boolean canBuildFormatter()>();

        if $z10 != 0 goto label12;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid format for fields: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label12:
        interfaceinvoke r0.<java.util.Collection: boolean retainAll(java.util.Collection)>($r5);

     label13:
        goto label15;

     label14:
        $r24 := @caughtexception;

     label15:
        $r14 = virtualinvoke $r6.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatter toFormatter()>();

        return $r14;

        catch java.lang.UnsupportedOperationException from label12 to label13 with label14;
    }

    private static boolean dateByMonth(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r0;
        java.util.Collection r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        org.joda.time.DateTimeFieldType $r2, $r3, $r4, $r12, $r16, $r17, $r21;
        org.joda.time.format.DateTimeFormatter $r14;

        r0 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r1 := @parameter1: java.util.Collection;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z9 = 0;

        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        if $z2 == 0 goto label4;

        $r14 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$000()>();

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r14);

        $r16 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $z6 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r16);

        if $z6 == 0 goto label2;

        $r21 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z8 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r21);

        if $z8 == 0 goto label1;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        goto label7;

     label1:
        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        z9 = 1;

        goto label7;

     label2:
        $r17 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z7 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r17);

        if $z7 == 0 goto label3;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void checkNotStrictISO(java.util.Collection,boolean)>(r1, z1);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        goto label7;

     label3:
        z9 = 1;

        goto label7;

     label4:
        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType monthOfYear()>();

        $z3 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r3);

        if $z3 == 0 goto label6;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMonthOfYear(int)>(2);

        $r12 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z5 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r12);

        if $z5 == 0 goto label5;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

        goto label7;

     label5:
        z9 = 1;

        goto label7;

     label6:
        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfMonth()>();

        $z4 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r4);

        if $z4 == 0 goto label7;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfMonth(int)>(2);

     label7:
        return z9;
    }

    private static boolean dateByOrdinal(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r0;
        java.util.Collection r1;
        boolean z0, z1, $z2, $z3, $z4, z5;
        org.joda.time.DateTimeFieldType $r2, $r3, $r8;
        org.joda.time.format.DateTimeFormatter $r6;

        r0 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r1 := @parameter1: java.util.Collection;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z5 = 0;

        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType year()>();

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        if $z2 == 0 goto label2;

        $r6 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$000()>();

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r6);

        $r8 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $z4 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r8);

        if $z4 == 0 goto label1;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfYear(int)>(3);

        goto label3;

     label1:
        z5 = 1;

        goto label3;

     label2:
        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfYear()>();

        $z3 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r3);

        if $z3 == 0 goto label3;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfYear(int)>(3);

     label3:
        return z5;
    }

    private static boolean dateByWeek(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r0;
        java.util.Collection r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        org.joda.time.DateTimeFieldType $r2, $r3, $r4, $r12, $r16, $r17, $r23;
        org.joda.time.format.DateTimeFormatter $r14;

        r0 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r1 := @parameter1: java.util.Collection;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z9 = 0;

        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekyear()>();

        $z2 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        if $z2 == 0 goto label4;

        $r14 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$100()>();

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder append(org.joda.time.format.DateTimeFormatter)>($r14);

        $r16 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $z6 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r16);

        if $z6 == 0 goto label2;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekOfWeekyear(int)>(2);

        $r23 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z8 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r23);

        if $z8 == 0 goto label1;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        goto label7;

     label1:
        z9 = 1;

        goto label7;

     label2:
        $r17 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z7 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r17);

        if $z7 == 0 goto label3;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void checkNotStrictISO(java.util.Collection,boolean)>(r1, z1);

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        goto label7;

     label3:
        z9 = 1;

        goto label7;

     label4:
        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType weekOfWeekyear()>();

        $z3 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r3);

        if $z3 == 0 goto label6;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendWeekOfWeekyear(int)>(2);

        $r12 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z5 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r12);

        if $z5 == 0 goto label5;

        staticinvoke <org.joda.time.format.ISODateTimeFormat: void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder,boolean)>(r0, z0);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

        goto label7;

     label5:
        z9 = 1;

        goto label7;

     label6:
        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType dayOfWeek()>();

        $z4 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r4);

        if $z4 == 0 goto label7;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(87);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendDayOfWeek(int)>(1);

     label7:
        return z9;
    }

    private static void time(org.joda.time.format.DateTimeFormatterBuilder, java.util.Collection, boolean, boolean, boolean, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r0;
        java.util.Collection r1;
        boolean z0, z1, z2, z3, z4, z5, z6, z7;
        org.joda.time.DateTimeFieldType $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r16, $r21, $r27;
        java.lang.StringBuilder $r17, $r18, $r19, $r22, $r23, $r24, $r28, $r29, $r30;
        java.lang.String $r20, $r25, $r31;

        r0 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        r1 := @parameter1: java.util.Collection;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        $r2 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType hourOfDay()>();

        z4 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r2);

        $r3 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType minuteOfHour()>();

        z5 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r3);

        $r4 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType secondOfMinute()>();

        z6 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r4);

        $r5 = staticinvoke <org.joda.time.DateTimeFieldType: org.joda.time.DateTimeFieldType millisOfSecond()>();

        z7 = interfaceinvoke r1.<java.util.Collection: boolean remove(java.lang.Object)>($r5);

        if z4 != 0 goto label01;

        if z5 != 0 goto label01;

        if z6 != 0 goto label01;

        if z7 != 0 goto label01;

        return;

     label01:
        if z4 != 0 goto label02;

        if z5 != 0 goto label02;

        if z6 != 0 goto label02;

        if z7 == 0 goto label04;

     label02:
        if z1 == 0 goto label03;

        if z2 == 0 goto label03;

        $r27 = new java.lang.IllegalArgumentException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid ISO8601 format for fields because Date was reduced precision: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r31);

        throw $r27;

     label03:
        if z3 == 0 goto label04;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(84);

     label04:
        if z4 == 0 goto label05;

        if z5 == 0 goto label05;

        if z6 != 0 goto label11;

     label05:
        if z4 == 0 goto label06;

        if z6 != 0 goto label06;

        if z7 != 0 goto label06;

        goto label11;

     label06:
        if z1 == 0 goto label07;

        if z3 == 0 goto label07;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid ISO8601 format for fields because Time was truncated: ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label07:
        if z4 != 0 goto label10;

        if z5 == 0 goto label08;

        if z6 != 0 goto label11;

     label08:
        if z5 == 0 goto label09;

        if z7 == 0 goto label11;

     label09:
        if z6 == 0 goto label10;

        goto label11;

     label10:
        if z1 == 0 goto label11;

        $r16 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid ISO8601 format for fields: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label11:
        if z4 == 0 goto label12;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendHourOfDay(int)>(2);

        goto label14;

     label12:
        if z5 != 0 goto label13;

        if z6 != 0 goto label13;

        if z7 == 0 goto label14;

     label13:
        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label14:
        if z0 == 0 goto label15;

        if z4 == 0 goto label15;

        if z5 == 0 goto label15;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

     label15:
        if z5 == 0 goto label16;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMinuteOfHour(int)>(2);

        goto label18;

     label16:
        if z6 != 0 goto label17;

        if z7 == 0 goto label18;

     label17:
        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label18:
        if z0 == 0 goto label19;

        if z5 == 0 goto label19;

        if z6 == 0 goto label19;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(58);

     label19:
        if z6 == 0 goto label20;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendSecondOfMinute(int)>(2);

        goto label21;

     label20:
        if z7 == 0 goto label21;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label21:
        if z7 == 0 goto label22;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(46);

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendMillisOfSecond(int)>(3);

     label22:
        return;
    }

    private static void checkNotStrictISO(java.util.Collection, boolean)
    {
        java.util.Collection r0;
        boolean z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No valid ISO8601 format for fields: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    private static void appendSeparator(org.joda.time.format.DateTimeFormatterBuilder, boolean)
    {
        org.joda.time.format.DateTimeFormatterBuilder r0;
        boolean z0;

        r0 := @parameter0: org.joda.time.format.DateTimeFormatterBuilder;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.joda.time.format.DateTimeFormatterBuilder: org.joda.time.format.DateTimeFormatterBuilder appendLiteral(char)>(45);

     label1:
        return;
    }

    public static org.joda.time.format.DateTimeFormatter dateParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$200()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter localDateParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$300()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateElementParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$400()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter timeParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$500()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter localTimeParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$600()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter timeElementParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$700()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateTimeParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$800()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateOptionalTimeParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$900()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter localDateOptionalTimeParser()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1000()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter date()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter yearMonthDay()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter time()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1100()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter timeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1200()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter tTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1300()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter tTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1400()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1500()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1600()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter ordinalDate()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1700()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter ordinalDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1800()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter ordinalDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$1900()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekDate()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2000()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2100()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2200()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicDate()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2300()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2400()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2500()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicTTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2600()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicTTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2700()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2800()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2900()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicOrdinalDate()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3000()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicOrdinalDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3100()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicOrdinalDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3200()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicWeekDate()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3300()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicWeekDateTime()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3400()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter basicWeekDateTimeNoMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3500()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter year()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$000()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter yearMonth()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3600()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter yearMonthDay()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3700()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekyear()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$100()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekyearWeek()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3800()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter weekyearWeekDay()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$2000()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter hour()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$3900()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinute()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4000()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinuteSecond()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4100()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinuteSecondMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4200()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter hourMinuteSecondFraction()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4300()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateHour()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4400()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinute()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4500()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinuteSecond()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4600()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinuteSecondMillis()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4700()>();

        return $r0;
    }

    public static org.joda.time.format.DateTimeFormatter dateHourMinuteSecondFraction()
    {
        org.joda.time.format.DateTimeFormatter $r0;

        $r0 = staticinvoke <org.joda.time.format.ISODateTimeFormat$Constants: org.joda.time.format.DateTimeFormatter access$4800()>();

        return $r0;
    }
}
