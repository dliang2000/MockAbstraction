class org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1 extends java.lang.Object implements java.util.Comparator
{
    final org.apache.flink.api.common.typeutils.TypeComparator val$sortComparator;
    final org.apache.flink.api.common.operators.base.GroupReduceOperatorBase this$0;

    void <init>(org.apache.flink.api.common.operators.base.GroupReduceOperatorBase, org.apache.flink.api.common.typeutils.TypeComparator)
    {
        org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1 r0;
        org.apache.flink.api.common.operators.base.GroupReduceOperatorBase r1;
        org.apache.flink.api.common.typeutils.TypeComparator r2;

        r0 := @this: org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1;

        r1 := @parameter0: org.apache.flink.api.common.operators.base.GroupReduceOperatorBase;

        r2 := @parameter1: org.apache.flink.api.common.typeutils.TypeComparator;

        r0.<org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1: org.apache.flink.api.common.operators.base.GroupReduceOperatorBase this$0> = r1;

        r0.<org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1: org.apache.flink.api.common.typeutils.TypeComparator val$sortComparator> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1 r0;
        java.lang.Object r1, r2;
        org.apache.flink.api.common.typeutils.TypeComparator $r3;
        int $i0;

        r0 := @this: org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.flink.api.common.operators.base.GroupReduceOperatorBase$1: org.apache.flink.api.common.typeutils.TypeComparator val$sortComparator>;

        $i0 = virtualinvoke $r3.<org.apache.flink.api.common.typeutils.TypeComparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        return $i0;
    }
}
