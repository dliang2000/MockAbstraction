public class org.apache.flink.util.TestNameProvider extends java.lang.Object implements org.junit.rules.TestRule
{
    private static java.lang.ThreadLocal testName;

    public void <init>()
    {
        org.apache.flink.util.TestNameProvider r0;

        r0 := @this: org.apache.flink.util.TestNameProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getCurrentTestName()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 = <org.apache.flink.util.TestNameProvider: java.lang.ThreadLocal testName>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public org.junit.runners.model.Statement apply(org.junit.runners.model.Statement, org.junit.runner.Description)
    {
        org.apache.flink.util.TestNameProvider r0;
        org.junit.runners.model.Statement r1;
        org.junit.runner.Description r2;
        org.apache.flink.util.TestNameProvider$1 $r3;

        r0 := @this: org.apache.flink.util.TestNameProvider;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: org.junit.runner.Description;

        $r3 = new org.apache.flink.util.TestNameProvider$1;

        specialinvoke $r3.<org.apache.flink.util.TestNameProvider$1: void <init>(org.apache.flink.util.TestNameProvider,org.junit.runner.Description,org.junit.runners.model.Statement)>(r0, r2, r1);

        return $r3;
    }

    static java.lang.ThreadLocal access$000()
    {
        java.lang.ThreadLocal $r0;

        $r0 = <org.apache.flink.util.TestNameProvider: java.lang.ThreadLocal testName>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.flink.util.TestNameProvider: java.lang.ThreadLocal testName> = $r0;

        return;
    }
}
