public class com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector extends java.lang.Object
{
    byte[] a;
    int b;

    public void <init>()
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        byte[] $r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[64];

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a> = $r1;

        return;
    }

    public void <init>(int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        int i0;
        byte[] $r1;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[i0];

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a> = $r1;

        return;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector putByte(int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        int i0, $i1, $i2, i4, i5;
        byte[] $r1, $r2;
        byte $b3;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        i4 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i2 = i4 + 1;

        $r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i1 = lengthof $r1;

        if $i2 <= $i1 goto label1;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>(1);

     label1:
        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        i5 = i4 + 1;

        $b3 = (byte) i0;

        $r2[i4] = $b3;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i5;

        return r0;
    }

    com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector a(int, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        int i0, i1, $i2, $i3, i6, i7, i8;
        byte[] r1, $r2;
        byte $b4, $b5;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i6 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i3 = i6 + 2;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i2 = lengthof $r2;

        if $i3 <= $i2 goto label1;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>(2);

     label1:
        r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        i7 = i6 + 1;

        $b4 = (byte) i0;

        r1[i6] = $b4;

        i8 = i7 + 1;

        $b5 = (byte) i1;

        r1[i7] = $b5;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i8;

        return r0;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector putShort(int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        int i0, $i1, $i2, $i3, i6, i7, i8;
        byte[] r1, $r2;
        byte $b4, $b5;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        i6 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i2 = i6 + 2;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i1 = lengthof $r2;

        if $i2 <= $i1 goto label1;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>(2);

     label1:
        r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        i7 = i6 + 1;

        $i3 = i0 >>> 8;

        $b4 = (byte) $i3;

        r1[i6] = $b4;

        i8 = i7 + 1;

        $b5 = (byte) i0;

        r1[i7] = $b5;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i8;

        return r0;
    }

    com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector b(int, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        int i0, i1, $i2, $i3, $i5, i8, i9, i10, i11;
        byte[] r1, $r2;
        byte $b4, $b6, $b7;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i8 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i3 = i8 + 3;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i2 = lengthof $r2;

        if $i3 <= $i2 goto label1;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>(3);

     label1:
        r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        i9 = i8 + 1;

        $b4 = (byte) i0;

        r1[i8] = $b4;

        i10 = i9 + 1;

        $i5 = i1 >>> 8;

        $b6 = (byte) $i5;

        r1[i9] = $b6;

        i11 = i10 + 1;

        $b7 = (byte) i1;

        r1[i10] = $b7;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i11;

        return r0;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector putInt(int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        int i0, $i1, $i2, $i3, $i5, $i7, i10, i11, i12, i13, i14;
        byte[] r1, $r2;
        byte $b4, $b6, $b8, $b9;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        i10 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i2 = i10 + 4;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i1 = lengthof $r2;

        if $i2 <= $i1 goto label1;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>(4);

     label1:
        r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        i11 = i10 + 1;

        $i3 = i0 >>> 24;

        $b4 = (byte) $i3;

        r1[i10] = $b4;

        i12 = i11 + 1;

        $i5 = i0 >>> 16;

        $b6 = (byte) $i5;

        r1[i11] = $b6;

        i13 = i12 + 1;

        $i7 = i0 >>> 8;

        $b8 = (byte) $i7;

        r1[i12] = $b8;

        i14 = i13 + 1;

        $b9 = (byte) i0;

        r1[i13] = $b9;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i14;

        return r0;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector putLong(long)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        long l0, $l3;
        byte[] r1, $r2;
        int $i1, $i2, $i4, $i6, $i8, $i11, $i13, $i15, i18, i19, i20, i21, i22, i23, i24, i25, i26, i27, i28;
        byte $b5, $b7, $b9, $b10, $b12, $b14, $b16, $b17;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        l0 := @parameter0: long;

        i18 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i2 = i18 + 8;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i1 = lengthof $r2;

        if $i2 <= $i1 goto label1;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>(8);

     label1:
        r1 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $l3 = l0 >>> 32;

        i19 = (int) $l3;

        i20 = i18 + 1;

        $i4 = i19 >>> 24;

        $b5 = (byte) $i4;

        r1[i18] = $b5;

        i21 = i20 + 1;

        $i6 = i19 >>> 16;

        $b7 = (byte) $i6;

        r1[i20] = $b7;

        i22 = i21 + 1;

        $i8 = i19 >>> 8;

        $b9 = (byte) $i8;

        r1[i21] = $b9;

        i23 = i22 + 1;

        $b10 = (byte) i19;

        r1[i22] = $b10;

        i24 = (int) l0;

        i25 = i23 + 1;

        $i11 = i24 >>> 24;

        $b12 = (byte) $i11;

        r1[i23] = $b12;

        i26 = i25 + 1;

        $i13 = i24 >>> 16;

        $b14 = (byte) $i13;

        r1[i25] = $b14;

        i27 = i26 + 1;

        $i15 = i24 >>> 8;

        $b16 = (byte) $i15;

        r1[i26] = $b16;

        i28 = i27 + 1;

        $b17 = (byte) i24;

        r1[i27] = $b17;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i28;

        return r0;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector putUTF8(java.lang.String)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i4, $i7, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i35, $i37, $i38, $i40, i41, i42, i43, i44, i46, i47, i49, i51, i52, i53;
        byte[] $r2, r3;
        byte $b5, $b6, $b8, $b11, $b20, $b23, $b27, $b31, $b34, $b36, $b39;
        char $c17, $c18, $c19, $c21, $c22, $c24, $c25, $c26, $c28, $c29, $c30, $c32, $c33, c45, c48, c50;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i41 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i1 = i41 + 2;

        $i3 = $i1 + i0;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i2 = lengthof $r2;

        if $i3 <= $i2 goto label01;

        $i40 = 2 + i0;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>($i40);

     label01:
        r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        i42 = i41 + 1;

        $i4 = i0 >>> 8;

        $b5 = (byte) $i4;

        r3[i41] = $b5;

        i43 = i42 + 1;

        $b6 = (byte) i0;

        r3[i42] = $b6;

        i44 = 0;

     label02:
        if i44 >= i0 goto label16;

        c45 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i44);

        if c45 < 1 goto label03;

        if c45 > 127 goto label03;

        $i38 = i43;

        i43 = i43 + 1;

        $b39 = (byte) c45;

        r3[$i38] = $b39;

        goto label15;

     label03:
        i46 = i44;

        i47 = i44;

     label04:
        if i47 >= i0 goto label08;

        c48 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i47);

        if c48 < 1 goto label05;

        if c48 > 127 goto label05;

        i46 = i46 + 1;

        goto label07;

     label05:
        if c48 <= 2047 goto label06;

        i46 = i46 + 3;

        goto label07;

     label06:
        i46 = i46 + 2;

     label07:
        i47 = i47 + 1;

        goto label04;

     label08:
        $i9 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i7 = i46 >>> 8;

        $b8 = (byte) $i7;

        r3[$i9] = $b8;

        $i10 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i12 = $i10 + 1;

        $b11 = (byte) i46;

        r3[$i12] = $b11;

        $i13 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i14 = $i13 + 2;

        $i16 = $i14 + i46;

        $i15 = lengthof r3;

        if $i16 <= $i15 goto label09;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i43;

        $i37 = 2 + i46;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>($i37);

        r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

     label09:
        i49 = i44;

     label10:
        if i49 >= i0 goto label14;

        c50 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i49);

        if c50 < 1 goto label11;

        if c50 > 127 goto label11;

        $i35 = i43;

        i43 = i43 + 1;

        $b36 = (byte) c50;

        r3[$i35] = $b36;

        goto label13;

     label11:
        if c50 <= 2047 goto label12;

        i51 = i43 + 1;

        $c24 = c50 >> 12;

        $c25 = $c24 & 15;

        $c26 = 224 | $c25;

        $b27 = (byte) $c26;

        r3[i43] = $b27;

        i52 = i51 + 1;

        $c28 = c50 >> 6;

        $c29 = $c28 & 63;

        $c30 = 128 | $c29;

        $b31 = (byte) $c30;

        r3[i51] = $b31;

        i43 = i52 + 1;

        $c32 = c50 & 63;

        $c33 = 128 | $c32;

        $b34 = (byte) $c33;

        r3[i52] = $b34;

        goto label13;

     label12:
        i53 = i43 + 1;

        $c17 = c50 >> 6;

        $c18 = $c17 & 31;

        $c19 = 192 | $c18;

        $b20 = (byte) $c19;

        r3[i43] = $b20;

        i43 = i53 + 1;

        $c21 = c50 & 63;

        $c22 = 128 | $c21;

        $b23 = (byte) $c22;

        r3[i53] = $b23;

     label13:
        i49 = i49 + 1;

        goto label10;

     label14:
        goto label16;

     label15:
        i44 = i44 + 1;

        goto label02;

     label16:
        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = i43;

        return r0;
    }

    public com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector putByteArray(byte[], int, int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        byte[] r1, $r2, $r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i4 = $i2 + i1;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i3 = lengthof $r2;

        if $i4 <= $i3 goto label1;

        specialinvoke r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: void a(int)>(i1);

     label1:
        if r1 == null goto label2;

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i7 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i0, $r3, $i7, i1);

     label2:
        $i5 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        $i6 = $i5 + i1;

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b> = $i6;

        return r0;
    }

    private void a(int)
    {
        com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        byte[] r1, $r2, $r3;

        r0 := @this: com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector;

        i0 := @parameter0: int;

        $r2 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i3 = lengthof $r2;

        i1 = 2 * $i3;

        $i4 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        i2 = $i4 + i0;

        if i1 <= i2 goto label1;

        $i6 = i1;

        goto label2;

     label1:
        $i6 = i2;

     label2:
        r1 = newarray (byte)[$i6];

        $r3 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a>;

        $i5 = r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, 0, $i5);

        r0.<com.esotericsoftware.reflectasm.shaded.org.objectweb.asm.ByteVector: byte[] a> = r1;

        return;
    }
}
