public class org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot extends org.apache.flink.api.common.typeutils.CompositeTypeSerializerConfigSnapshot
{
    private static final int VERSION;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.CompositeTypeSerializerConfigSnapshot: void <init>()>();

        return;
    }

    void <init>(org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        org.apache.flink.api.common.typeutils.TypeSerializer[] $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r2 = newarray (org.apache.flink.api.common.typeutils.TypeSerializer)[1];

        $r2[0] = r1;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.CompositeTypeSerializerConfigSnapshot: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer[])>($r2);

        return;
    }

    public int getVersion()
    {
        org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot;

        return 1;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility resolveSchemaCompatibility(org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1, $r4;
        org.apache.flink.api.java.typeutils.runtime.NullableSerializer r2;
        org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerSnapshot $r5;
        int $i0;
        org.apache.flink.api.common.typeutils.TypeSerializerSnapshot[] $r6;
        org.apache.flink.api.java.tuple.Tuple2 $r7;
        java.lang.Object $r8;
        org.apache.flink.api.common.typeutils.TypeSerializerSnapshot $r9;
        org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility $r10;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r4 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot: org.apache.flink.api.common.typeutils.TypeSerializer restoreSerializer()>();

        r2 = (org.apache.flink.api.java.typeutils.runtime.NullableSerializer) $r4;

        $r5 = new org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerSnapshot;

        $i0 = staticinvoke <org.apache.flink.api.java.typeutils.runtime.NullableSerializer: int access$000(org.apache.flink.api.java.typeutils.runtime.NullableSerializer)>(r2);

        specialinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerSnapshot: void <init>(int,org.apache.flink.api.java.typeutils.runtime.NullableSerializer$1)>($i0, null);

        $r6 = newarray (org.apache.flink.api.common.typeutils.TypeSerializerSnapshot)[1];

        $r7 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot: org.apache.flink.api.java.tuple.Tuple2 getSingleNestedSerializerAndConfig()>();

        $r8 = $r7.<org.apache.flink.api.java.tuple.Tuple2: java.lang.Object f1>;

        $r9 = (org.apache.flink.api.common.typeutils.TypeSerializerSnapshot) $r8;

        $r6[0] = $r9;

        $r10 = staticinvoke <org.apache.flink.api.common.typeutils.CompositeTypeSerializerUtil: org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility delegateCompatibilityCheckToNewSnapshot(org.apache.flink.api.common.typeutils.TypeSerializer,org.apache.flink.api.common.typeutils.CompositeTypeSerializerSnapshot,org.apache.flink.api.common.typeutils.TypeSerializerSnapshot[])>(r1, $r5, $r6);

        return $r10;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.NullableSerializer$NullableSerializerConfigSnapshot: int VERSION> = 1;

        return;
    }
}
