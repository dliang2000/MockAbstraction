public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext extends java.lang.Object
{
    private static final int MAX_ERROR_STR_LEN;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig getConfig();

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector();

    public abstract boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature);

    public abstract boolean canOverrideAccessModifiers();

    public abstract java.lang.Class getActiveView();

    public abstract java.util.Locale getLocale();

    public abstract java.util.TimeZone getTimeZone();

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class);

    public abstract java.lang.Object getAttribute(java.lang.Object);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object, java.lang.Object);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        java.lang.reflect.Type r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: java.lang.reflect.Type;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        return $r3;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType resolveSubType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, $r6, r17;
        java.lang.String r2, $r13, $r14, $r15;
        int $i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r3, $r5, $r7;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r4, $r16;
        java.lang.Class $r8, $r12, r18;
        java.lang.ClassNotFoundException $r9;
        java.lang.Exception $r10;
        java.lang.Object[] $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(60);

        if $i0 <= 0 goto label2;

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r17 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String)>(r2);

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z1 = virtualinvoke r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>($r8);

        if $z1 == 0 goto label1;

        return r17;

     label1:
        goto label7;

     label2:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r18 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class findClass(java.lang.String)>(r2);

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        return null;

     label5:
        $r10 := @caughtexception;

        $r11 = newarray (java.lang.Object)[2];

        $r12 = virtualinvoke $r10.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getName()>();

        $r11[0] = $r13;

        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r10);

        $r11[1] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("problem: (%s) %s", $r11);

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(r1, r2, $r15);

        throw $r16;

     label6:
        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSuperTypeOf(java.lang.Class)>(r18);

        if $z0 == 0 goto label7;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r6 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r1, r18);

        return $r6;

     label7:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(r1, r2, "Not a subtype");

        throw $r4;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType resolveAndValidateSubType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, $r12, $r14, $r16, $r17, r29;
        java.lang.String r2, $r21, $r22, $r23;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r4;
        java.lang.Class r5, $r20;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity $r6, $r9, $r10, r26, r30;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r7, $r8;
        boolean $z0;
        java.lang.Object $r11, $r13, $r15;
        java.lang.Exception $r18;
        java.lang.Object[] $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r24;
        java.lang.ClassNotFoundException $r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(60);

        if i0 <= 0 goto label1;

        $r17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _resolveAndValidateGeneric(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,int)>(r1, r2, r3, i0);

        return $r17;

     label1:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig getConfig()>();

        r26 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r4, r1, r2);

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED>;

        if r26 != $r6 goto label2;

        $r15 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.Object _throwSubtypeNameNotAllowed(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, r2, r3);

        $r16 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r15;

        return $r16;

     label2:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r5 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: java.lang.Class findClass(java.lang.String)>(r2);

     label3:
        goto label6;

     label4:
        $r25 := @caughtexception;

        return null;

     label5:
        $r18 := @caughtexception;

        $r19 = newarray (java.lang.Object)[2];

        $r20 = virtualinvoke $r18.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        $r19[0] = $r21;

        $r22 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r18);

        $r19[1] = $r22;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("problem: (%s) %s", $r19);

        $r24 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(r1, r2, $r23);

        throw $r24;

     label6:
        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSuperTypeOf(java.lang.Class)>(r5);

        if $z0 != 0 goto label7;

        $r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.Object _throwNotASubtype(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r1, r2);

        $r14 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r13;

        return $r14;

     label7:
        $r8 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r29 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r1, r5);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE>;

        if r26 != $r9 goto label8;

        r30 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r4, r1, r29);

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;

        if r30 == $r10 goto label8;

        $r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.Object _throwSubtypeClassNotAllowed(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, r2, r3);

        $r12 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r11;

        return $r12;

     label8:
        return r29;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
        catch java.lang.Exception from label2 to label3 with label5;
    }

    private org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _resolveAndValidateGeneric(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, int) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, r6, $r15, $r17, $r19;
        java.lang.String r2, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity r5, $r8, $r11, $r12, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r9;
        java.lang.Class $r10;
        boolean $z0;
        java.lang.Object $r14, $r16, $r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        i0 := @parameter3: int;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig getConfig()>();

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r5 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r4, r1, $r7);

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED>;

        if r5 != $r8 goto label1;

        $r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.Object _throwSubtypeNameNotAllowed(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, r2, r3);

        $r19 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r18;

        return $r19;

     label1:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        r6 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String)>(r2);

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>($r10);

        if $z0 != 0 goto label2;

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.Object _throwNotASubtype(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r1, r2);

        $r17 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r16;

        return $r17;

     label2:
        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;

        if r5 == $r11 goto label3;

        $r12 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r4, r1, r6);

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;

        if $r12 == $r13 goto label3;

        $r14 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.Object _throwSubtypeClassNotAllowed(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, r2, r3);

        $r15 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) $r14;

        return $r15;

     label3:
        return r6;
    }

    protected java.lang.Object _throwNotASubtype(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(r1, r2, "Not a subtype");

        throw $r3;
    }

    protected java.lang.Object _throwSubtypeNameNotAllowed(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.String r2, $r6, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configured `PolymorphicTypeValidator` (of type ");

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") denied resolution");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(r1, r2, $r9);

        throw $r10;
    }

    protected java.lang.Object _throwSubtypeClassNotAllowed(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.String r2, $r6, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configured `PolymorphicTypeValidator` (of type ");

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(r3);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") denied resolution");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String,java.lang.String)>(r1, r2, $r9);

        throw $r10;
    }

    protected abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.String);

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory();

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator objectIdGeneratorInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo r2;
        java.lang.Class r3, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator $r7, $r9, r10;
        boolean $z0;
        java.lang.Object $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo;

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getGeneratorType()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig getConfig()>();

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if r5 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r9 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator objectIdGeneratorInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(r4, r1, r3);

     label2:
        r10 = $r9;

        if $r9 != null goto label3;

        $z0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean canOverrideAccessModifiers()>();

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r3, $z0);

        r10 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator) $r8;

     label3:
        $r6 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getScope()>();

        $r7 = virtualinvoke r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator forScope(java.lang.Class)>($r6);

        return $r7;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdResolver objectIdResolverInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r5;
        boolean $z0;
        java.lang.Object $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdResolver $r7, r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo;

        r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getResolverType()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig getConfig()>();

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if r5 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r7 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdResolver resolverIdGeneratorInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(r4, r1, r3);

     label2:
        r8 = $r7;

        if $r7 != null goto label3;

        $z0 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean canOverrideAccessModifiers()>();

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r3, $z0);

        r8 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdResolver) $r6;

     label3:
        return r8;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter converterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r1;
        java.lang.Object r2, $r7;
        java.lang.Class r3, $r6, $r18;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.IllegalStateException $r8, $r15;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r16, $r17, $r20, $r21;
        java.lang.String $r11, $r14, $r19, $r22;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter $r23, $r24, r25;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter;

        if $z0 == 0 goto label2;

        $r23 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter) r2;

        return $r23;

     label2:
        $z1 = r2 instanceof java.lang.Class;

        if $z1 != 0 goto label3;

        $r15 = new java.lang.IllegalStateException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnnotationIntrospector returned Converter definition of type ");

        $r18 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected type Converter or Class<Converter> instead");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label3:
        r3 = (java.lang.Class) r2;

        if r3 == class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/util/Converter$None;" goto label4;

        $z2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(r3);

        if $z2 == 0 goto label5;

     label4:
        return null;

     label5:
        $r6 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/util/Converter;";

        $z3 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z3 != 0 goto label6;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnnotationIntrospector returned Class ");

        $r11 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected Class<Converter>");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label6:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig getConfig()>();

        r5 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if r5 != null goto label7;

        $r24 = null;

        goto label8;

     label7:
        $r24 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter converterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>(r4, r1, r3);

     label8:
        r25 = $r24;

        if $r24 != null goto label9;

        $z4 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: boolean canOverrideAccessModifiers()>();

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r3, $z4);

        r25 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.Converter) $r7;

     label9:
        return r25;
    }

    public abstract java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

    public java.lang.Object reportBadDefinition(java.lang.Class, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        java.lang.Class r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>($r3, r2);

        return $r4;
    }

    protected final transient java.lang.String _format(java.lang.String, java.lang.Object[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $i0 = lengthof r2;

        if $i0 <= 0 goto label1;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2);

        return $r3;

     label1:
        return r1;
    }

    protected final java.lang.String _truncate(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        java.lang.String r1, $r3, $r6, $r8;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r4, $r5, $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return "";

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 > 500 goto label2;

        return r1;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 500);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]...[");

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 500;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    protected java.lang.String _quotedString(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        java.lang.String r1, $r3, $r4;
        java.lang.Object[] $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return "[N/A]";

     label1:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.String _truncate(java.lang.String)>(r1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\"%s\"", $r2);

        return $r4;
    }

    protected java.lang.String _colonConcat(java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        java.lang.String r1, r2, $r7;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r2 != null goto label1;

        return r1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected java.lang.String _desc(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return "[N/A]";

     label1:
        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: java.lang.String _truncate(java.lang.String)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: int MAX_ERROR_STR_LEN> = 500;

        return;
    }
}
