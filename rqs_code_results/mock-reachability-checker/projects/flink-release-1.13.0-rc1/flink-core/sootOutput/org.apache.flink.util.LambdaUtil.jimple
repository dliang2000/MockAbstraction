public final class org.apache.flink.util.LambdaUtil extends java.lang.Object
{

    private void <init>()
    {
        org.apache.flink.util.LambdaUtil r0;
        java.lang.AssertionError $r1;

        r0 := @this: org.apache.flink.util.LambdaUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public static void applyToAllWhileSuppressingExceptions(java.lang.Iterable, org.apache.flink.util.function.ThrowingConsumer) throws java.lang.Exception
    {
        java.lang.Iterable r0;
        org.apache.flink.util.function.ThrowingConsumer r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;
        java.lang.Exception $r5, r7;
        java.lang.Throwable $r6;

        r0 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: org.apache.flink.util.function.ThrowingConsumer;

        if r0 == null goto label7;

        if r1 == null goto label7;

        r7 = null;

        r2 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        if r3 == null goto label5;

     label2:
        interfaceinvoke r1.<org.apache.flink.util.function.ThrowingConsumer: void accept(java.lang.Object)>(r3);

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = staticinvoke <org.apache.flink.util.ExceptionUtils: java.lang.Throwable firstOrSuppressed(java.lang.Throwable,java.lang.Throwable)>($r5, r7);

        r7 = (java.lang.Exception) $r6;

     label5:
        goto label1;

     label6:
        if r7 == null goto label7;

        throw r7;

     label7:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void withContextClassLoader(java.lang.ClassLoader, org.apache.flink.util.function.ThrowingRunnable) throws java.lang.Throwable
    {
        java.lang.ClassLoader r0;
        org.apache.flink.util.function.ThrowingRunnable r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.Throwable $r5, $r6, $r7, r9;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: org.apache.flink.util.function.ThrowingRunnable;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>(r0);

        r9 = null;

     label01:
        interfaceinvoke r1.<org.apache.flink.util.function.ThrowingRunnable: void run()>();

     label02:
        if r2 == null goto label12;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

        goto label12;

     label04:
        $r7 := @caughtexception;

        r9 = $r7;

        throw $r7;

     label05:
        $r5 := @caughtexception;

     label06:
        if r2 == null goto label11;

        if r9 == null goto label10;

     label07:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label08:
        goto label11;

     label09:
        $r6 := @caughtexception;

        virtualinvoke r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r6);

        goto label11;

     label10:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label11:
        throw $r5;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label06 with label05;
    }

    public static java.lang.Object withContextClassLoader(java.lang.ClassLoader, org.apache.flink.util.function.SupplierWithException) throws java.lang.Throwable
    {
        java.lang.ClassLoader r0;
        org.apache.flink.util.function.SupplierWithException r1;
        org.apache.flink.util.TemporaryClassLoaderContext r2;
        java.lang.Throwable $r6, $r7, $r8, r10;
        java.lang.Object r11;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: org.apache.flink.util.function.SupplierWithException;

        r2 = staticinvoke <org.apache.flink.util.TemporaryClassLoaderContext: org.apache.flink.util.TemporaryClassLoaderContext of(java.lang.ClassLoader)>(r0);

        r10 = null;

     label01:
        r11 = interfaceinvoke r1.<org.apache.flink.util.function.SupplierWithException: java.lang.Object get()>();

     label02:
        if r2 == null goto label04;

        goto label03;

     label03:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label04:
        return r11;

     label05:
        $r6 := @caughtexception;

        r10 = $r6;

        throw $r6;

     label06:
        $r8 := @caughtexception;

     label07:
        if r2 == null goto label12;

        if r10 == null goto label11;

     label08:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label09:
        goto label12;

     label10:
        $r7 := @caughtexception;

        virtualinvoke r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

        goto label12;

     label11:
        virtualinvoke r2.<org.apache.flink.util.TemporaryClassLoaderContext: void close()>();

     label12:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label05 to label07 with label06;
    }
}
