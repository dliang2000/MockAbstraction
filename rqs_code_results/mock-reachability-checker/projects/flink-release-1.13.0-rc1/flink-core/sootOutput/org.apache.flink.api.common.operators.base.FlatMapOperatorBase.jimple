public class org.apache.flink.api.common.operators.base.FlatMapOperatorBase extends org.apache.flink.api.common.operators.SingleInputOperator
{

    public void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper, org.apache.flink.api.common.operators.UnaryOperatorInformation, java.lang.String)
    {
        org.apache.flink.api.common.operators.base.FlatMapOperatorBase r0;
        org.apache.flink.api.common.operators.util.UserCodeWrapper r1;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r2;
        java.lang.String r3;

        r0 := @this: org.apache.flink.api.common.operators.base.FlatMapOperatorBase;

        r1 := @parameter0: org.apache.flink.api.common.operators.util.UserCodeWrapper;

        r2 := @parameter1: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.flink.api.common.operators.SingleInputOperator: void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>(r1, r2, r3);

        return;
    }

    public void <init>(org.apache.flink.api.common.functions.FlatMapFunction, org.apache.flink.api.common.operators.UnaryOperatorInformation, java.lang.String)
    {
        org.apache.flink.api.common.operators.base.FlatMapOperatorBase r0;
        org.apache.flink.api.common.functions.FlatMapFunction r1;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r2;
        java.lang.String r3;
        org.apache.flink.api.common.operators.util.UserCodeObjectWrapper $r4;

        r0 := @this: org.apache.flink.api.common.operators.base.FlatMapOperatorBase;

        r1 := @parameter0: org.apache.flink.api.common.functions.FlatMapFunction;

        r2 := @parameter1: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        r3 := @parameter2: java.lang.String;

        $r4 = new org.apache.flink.api.common.operators.util.UserCodeObjectWrapper;

        specialinvoke $r4.<org.apache.flink.api.common.operators.util.UserCodeObjectWrapper: void <init>(java.lang.Object)>(r1);

        specialinvoke r0.<org.apache.flink.api.common.operators.SingleInputOperator: void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>($r4, r2, r3);

        return;
    }

    public void <init>(java.lang.Class, org.apache.flink.api.common.operators.UnaryOperatorInformation, java.lang.String)
    {
        org.apache.flink.api.common.operators.base.FlatMapOperatorBase r0;
        java.lang.Class r1;
        org.apache.flink.api.common.operators.UnaryOperatorInformation r2;
        java.lang.String r3;
        org.apache.flink.api.common.operators.util.UserCodeClassWrapper $r4;

        r0 := @this: org.apache.flink.api.common.operators.base.FlatMapOperatorBase;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.api.common.operators.UnaryOperatorInformation;

        r3 := @parameter2: java.lang.String;

        $r4 = new org.apache.flink.api.common.operators.util.UserCodeClassWrapper;

        specialinvoke $r4.<org.apache.flink.api.common.operators.util.UserCodeClassWrapper: void <init>(java.lang.Class)>(r1);

        specialinvoke r0.<org.apache.flink.api.common.operators.SingleInputOperator: void <init>(org.apache.flink.api.common.operators.util.UserCodeWrapper,org.apache.flink.api.common.operators.UnaryOperatorInformation,java.lang.String)>($r4, r2, r3);

        return;
    }

    protected java.util.List executeOnCollections(java.util.List, org.apache.flink.api.common.functions.RuntimeContext, org.apache.flink.api.common.ExecutionConfig) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.base.FlatMapOperatorBase r0;
        java.util.List r1;
        org.apache.flink.api.common.functions.RuntimeContext r2;
        org.apache.flink.api.common.ExecutionConfig r3;
        org.apache.flink.api.common.functions.FlatMapFunction r4;
        org.apache.flink.api.common.typeutils.TypeSerializer r6, r7;
        java.util.Iterator r9;
        java.lang.Object r10, r11, $r13;
        org.apache.flink.api.common.operators.util.UserCodeWrapper $r12;
        org.apache.flink.configuration.Configuration $r14;
        java.util.ArrayList $r15;
        int $i0;
        org.apache.flink.api.common.operators.UnaryOperatorInformation $r16, $r18;
        org.apache.flink.api.common.typeinfo.TypeInformation $r17, $r19;
        org.apache.flink.api.common.functions.util.CopyingListCollector $r20;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.operators.base.FlatMapOperatorBase;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: org.apache.flink.api.common.functions.RuntimeContext;

        r3 := @parameter2: org.apache.flink.api.common.ExecutionConfig;

        $r12 = r0.<org.apache.flink.api.common.operators.base.FlatMapOperatorBase: org.apache.flink.api.common.operators.util.UserCodeWrapper userFunction>;

        $r13 = interfaceinvoke $r12.<org.apache.flink.api.common.operators.util.UserCodeWrapper: java.lang.Object getUserCodeObject()>();

        r4 = (org.apache.flink.api.common.functions.FlatMapFunction) $r13;

        staticinvoke <org.apache.flink.api.common.functions.util.FunctionUtils: void setFunctionRuntimeContext(org.apache.flink.api.common.functions.Function,org.apache.flink.api.common.functions.RuntimeContext)>(r4, r2);

        $r14 = r0.<org.apache.flink.api.common.operators.base.FlatMapOperatorBase: org.apache.flink.configuration.Configuration parameters>;

        staticinvoke <org.apache.flink.api.common.functions.util.FunctionUtils: void openFunction(org.apache.flink.api.common.functions.Function,org.apache.flink.configuration.Configuration)>(r4, $r14);

        $r15 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>($i0);

        $r16 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.FlatMapOperatorBase: org.apache.flink.api.common.operators.UnaryOperatorInformation getOperatorInfo()>();

        $r17 = virtualinvoke $r16.<org.apache.flink.api.common.operators.UnaryOperatorInformation: org.apache.flink.api.common.typeinfo.TypeInformation getInputType()>();

        r6 = virtualinvoke $r17.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>(r3);

        $r18 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.FlatMapOperatorBase: org.apache.flink.api.common.operators.UnaryOperatorInformation getOperatorInfo()>();

        $r19 = virtualinvoke $r18.<org.apache.flink.api.common.operators.UnaryOperatorInformation: org.apache.flink.api.common.typeinfo.TypeInformation getOutputType()>();

        r7 = virtualinvoke $r19.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>(r3);

        $r20 = new org.apache.flink.api.common.functions.util.CopyingListCollector;

        specialinvoke $r20.<org.apache.flink.api.common.functions.util.CopyingListCollector: void <init>(java.util.List,org.apache.flink.api.common.typeutils.TypeSerializer)>($r15, r7);

        r9 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r10 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = virtualinvoke r6.<org.apache.flink.api.common.typeutils.TypeSerializer: java.lang.Object copy(java.lang.Object)>(r10);

        interfaceinvoke r4.<org.apache.flink.api.common.functions.FlatMapFunction: void flatMap(java.lang.Object,org.apache.flink.util.Collector)>(r11, $r20);

        goto label1;

     label2:
        staticinvoke <org.apache.flink.api.common.functions.util.FunctionUtils: void closeFunction(org.apache.flink.api.common.functions.Function)>(r4);

        return $r15;
    }
}
