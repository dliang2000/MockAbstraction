public class org.apache.logging.log4j.util.PropertySource$Comparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.logging.log4j.util.PropertySource$Comparator r0;

        r0 := @this: org.apache.logging.log4j.util.PropertySource$Comparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(org.apache.logging.log4j.util.PropertySource, org.apache.logging.log4j.util.PropertySource)
    {
        org.apache.logging.log4j.util.PropertySource$Comparator r0;
        org.apache.logging.log4j.util.PropertySource r1, r2, $r4, $r6;
        java.lang.Object $r3, $r5;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.logging.log4j.util.PropertySource$Comparator;

        r1 := @parameter0: org.apache.logging.log4j.util.PropertySource;

        r2 := @parameter1: org.apache.logging.log4j.util.PropertySource;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (org.apache.logging.log4j.util.PropertySource) $r3;

        $i0 = interfaceinvoke $r4.<org.apache.logging.log4j.util.PropertySource: int getPriority()>();

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r6 = (org.apache.logging.log4j.util.PropertySource) $r5;

        $i1 = interfaceinvoke $r6.<org.apache.logging.log4j.util.PropertySource: int getPriority()>();

        $i2 = staticinvoke <java.lang.Integer: int compare(int,int)>($i0, $i1);

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.util.PropertySource$Comparator r0;
        java.lang.Object r1, r2;
        org.apache.logging.log4j.util.PropertySource $r3, $r4;
        int $i0;

        r0 := @this: org.apache.logging.log4j.util.PropertySource$Comparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.logging.log4j.util.PropertySource) r1;

        $r3 = (org.apache.logging.log4j.util.PropertySource) r2;

        $i0 = virtualinvoke r0.<org.apache.logging.log4j.util.PropertySource$Comparator: int compare(org.apache.logging.log4j.util.PropertySource,org.apache.logging.log4j.util.PropertySource)>($r4, $r3);

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.logging.log4j.util.PropertySource$Comparator: long serialVersionUID> = 1L;

        return;
    }
}
