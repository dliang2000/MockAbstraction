public class org.mockito.internal.verification.VerificationOverTimeImpl extends java.lang.Object implements org.mockito.verification.VerificationMode
{
    private final long pollingPeriodMillis;
    private final org.mockito.verification.VerificationMode delegate;
    private final boolean returnOnSuccess;
    private final org.mockito.internal.util.Timer timer;

    public void <init>(long, long, org.mockito.verification.VerificationMode, boolean)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        long l0, l1;
        org.mockito.verification.VerificationMode r1;
        boolean z0;
        org.mockito.internal.util.Timer $r2;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        r1 := @parameter2: org.mockito.verification.VerificationMode;

        z0 := @parameter3: boolean;

        $r2 = new org.mockito.internal.util.Timer;

        specialinvoke $r2.<org.mockito.internal.util.Timer: void <init>(long)>(l1);

        specialinvoke r0.<org.mockito.internal.verification.VerificationOverTimeImpl: void <init>(long,org.mockito.verification.VerificationMode,boolean,org.mockito.internal.util.Timer)>(l0, r1, z0, $r2);

        return;
    }

    public void <init>(long, org.mockito.verification.VerificationMode, boolean, org.mockito.internal.util.Timer)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        long l0;
        org.mockito.verification.VerificationMode r1;
        boolean z0;
        org.mockito.internal.util.Timer r2;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        l0 := @parameter0: long;

        r1 := @parameter1: org.mockito.verification.VerificationMode;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.mockito.internal.util.Timer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.mockito.internal.verification.VerificationOverTimeImpl: long pollingPeriodMillis> = l0;

        r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.verification.VerificationMode delegate> = r1;

        r0.<org.mockito.internal.verification.VerificationOverTimeImpl: boolean returnOnSuccess> = z0;

        r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.internal.util.Timer timer> = r2;

        return;
    }

    public void verify(org.mockito.internal.verification.api.VerificationData)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        org.mockito.internal.verification.api.VerificationData r1;
        org.mockito.internal.util.Timer $r2, $r7;
        org.mockito.verification.VerificationMode $r3;
        boolean $z0, $z1;
        java.lang.AssertionError $r4, r6;
        org.mockito.exceptions.base.MockitoAssertionError $r5;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        r1 := @parameter0: org.mockito.internal.verification.api.VerificationData;

        r6 = null;

        $r2 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.internal.util.Timer timer>;

        virtualinvoke $r2.<org.mockito.internal.util.Timer: void start()>();

     label1:
        $r7 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.internal.util.Timer timer>;

        $z1 = virtualinvoke $r7.<org.mockito.internal.util.Timer: boolean isCounting()>();

        if $z1 == 0 goto label8;

     label2:
        $r3 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.verification.VerificationMode delegate>;

        interfaceinvoke $r3.<org.mockito.verification.VerificationMode: void verify(org.mockito.internal.verification.api.VerificationData)>(r1);

        $z0 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: boolean returnOnSuccess>;

        if $z0 == 0 goto label4;

     label3:
        return;

     label4:
        r6 = null;

     label5:
        goto label1;

     label6:
        $r5 := @caughtexception;

        r6 = specialinvoke r0.<org.mockito.internal.verification.VerificationOverTimeImpl: java.lang.AssertionError handleVerifyException(java.lang.AssertionError)>($r5);

        goto label1;

     label7:
        $r4 := @caughtexception;

        r6 = specialinvoke r0.<org.mockito.internal.verification.VerificationOverTimeImpl: java.lang.AssertionError handleVerifyException(java.lang.AssertionError)>($r4);

        goto label1;

     label8:
        if r6 == null goto label9;

        throw r6;

     label9:
        return;

        catch org.mockito.exceptions.base.MockitoAssertionError from label2 to label3 with label6;
        catch org.mockito.exceptions.base.MockitoAssertionError from label4 to label5 with label6;
        catch java.lang.AssertionError from label2 to label3 with label7;
        catch java.lang.AssertionError from label4 to label5 with label7;
    }

    private java.lang.AssertionError handleVerifyException(java.lang.AssertionError)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        java.lang.AssertionError r1;
        org.mockito.verification.VerificationMode $r2;
        boolean $z0;
        long $l0;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        r1 := @parameter0: java.lang.AssertionError;

        $r2 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.verification.VerificationMode delegate>;

        $z0 = virtualinvoke r0.<org.mockito.internal.verification.VerificationOverTimeImpl: boolean canRecoverFromFailure(org.mockito.verification.VerificationMode)>($r2);

        if $z0 == 0 goto label1;

        $l0 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: long pollingPeriodMillis>;

        specialinvoke r0.<org.mockito.internal.verification.VerificationOverTimeImpl: void sleep(long)>($l0);

        return r1;

     label1:
        throw r1;
    }

    protected boolean canRecoverFromFailure(org.mockito.verification.VerificationMode)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        org.mockito.verification.VerificationMode r1;
        boolean $z0, $z1, $z2;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        r1 := @parameter0: org.mockito.verification.VerificationMode;

        $z0 = r1 instanceof org.mockito.internal.verification.AtMost;

        if $z0 != 0 goto label1;

        $z1 = r1 instanceof org.mockito.internal.verification.NoMoreInteractions;

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public org.mockito.internal.verification.VerificationOverTimeImpl copyWithVerificationMode(org.mockito.verification.VerificationMode)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0, $r2;
        org.mockito.verification.VerificationMode r1;
        org.mockito.internal.util.Timer $r3;
        long $l0, $l1;
        boolean $z0;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        r1 := @parameter0: org.mockito.verification.VerificationMode;

        $r2 = new org.mockito.internal.verification.VerificationOverTimeImpl;

        $l0 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: long pollingPeriodMillis>;

        $r3 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.internal.util.Timer timer>;

        $l1 = virtualinvoke $r3.<org.mockito.internal.util.Timer: long duration()>();

        $z0 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: boolean returnOnSuccess>;

        specialinvoke $r2.<org.mockito.internal.verification.VerificationOverTimeImpl: void <init>(long,long,org.mockito.verification.VerificationMode,boolean)>($l0, $l1, r1, $z0);

        return $r2;
    }

    private void sleep(long)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        long l0;
        java.lang.InterruptedException $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        l0 := @parameter0: long;

     label1:
        staticinvoke <java.lang.Thread: void sleep(long)>(l0);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Thread sleep has been interrupted", $r2);

        throw $r3;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public org.mockito.verification.VerificationMode description(java.lang.String)
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        java.lang.String r1;
        org.mockito.verification.VerificationMode $r2;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.mockito.internal.verification.VerificationModeFactory: org.mockito.verification.VerificationMode description(org.mockito.verification.VerificationMode,java.lang.String)>(r0, r1);

        return $r2;
    }

    public boolean isReturnOnSuccess()
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        boolean $z0;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        $z0 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: boolean returnOnSuccess>;

        return $z0;
    }

    public long getPollingPeriodMillis()
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        long $l0;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        $l0 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: long pollingPeriodMillis>;

        return $l0;
    }

    public org.mockito.internal.util.Timer getTimer()
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        org.mockito.internal.util.Timer $r1;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        $r1 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.internal.util.Timer timer>;

        return $r1;
    }

    public org.mockito.verification.VerificationMode getDelegate()
    {
        org.mockito.internal.verification.VerificationOverTimeImpl r0;
        org.mockito.verification.VerificationMode $r1;

        r0 := @this: org.mockito.internal.verification.VerificationOverTimeImpl;

        $r1 = r0.<org.mockito.internal.verification.VerificationOverTimeImpl: org.mockito.verification.VerificationMode delegate>;

        return $r1;
    }
}
