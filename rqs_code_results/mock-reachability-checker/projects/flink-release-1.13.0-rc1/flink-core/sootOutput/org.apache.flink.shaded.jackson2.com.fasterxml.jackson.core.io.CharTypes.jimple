public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes extends java.lang.Object
{
    protected static final char[] HC;
    protected static final byte[] HB;
    protected static final int[] sInputCodes;
    protected static final int[] sInputCodesUTF8;
    protected static final int[] sInputCodesJsNames;
    protected static final int[] sInputCodesUtf8JsNames;
    protected static final int[] sInputCodesComment;
    protected static final int[] sInputCodesWS;
    protected static final int[] sOutputEscapes128;
    protected static final int[] sHexValues;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int[] getInputCodeLatin1()
    {
        int[] $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes>;

        return $r0;
    }

    public static int[] getInputCodeUtf8()
    {
        int[] $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8>;

        return $r0;
    }

    public static int[] getInputCodeLatin1JsNames()
    {
        int[] $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesJsNames>;

        return $r0;
    }

    public static int[] getInputCodeUtf8JsNames()
    {
        int[] $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUtf8JsNames>;

        return $r0;
    }

    public static int[] getInputCodeComment()
    {
        int[] $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesComment>;

        return $r0;
    }

    public static int[] getInputCodeWS()
    {
        int[] $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesWS>;

        return $r0;
    }

    public static int[] get7BitOutputEscapes()
    {
        int[] $r0;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128>;

        return $r0;
    }

    public static int[] get7BitOutputEscapes(int)
    {
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes$AltEscapes $r0;
        int[] $r1, $r2;

        i0 := @parameter0: int;

        if i0 != 34 goto label1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128>;

        return $r2;

     label1:
        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes$AltEscapes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes$AltEscapes instance>;

        $r1 = virtualinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes$AltEscapes: int[] escapesFor(int)>(i0);

        return $r1;
    }

    public static int charToHex(int)
    {
        int i0, $i1, $i2;
        int[] $r0;

        i0 := @parameter0: int;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;

        $i1 = i0 & 255;

        $i2 = $r0[$i1];

        return $i2;
    }

    public static void appendQuoted(java.lang.StringBuilder, java.lang.String)
    {
        java.lang.StringBuilder r0;
        java.lang.String r1;
        int[] r2;
        int i0, i1, i3, $i5, i11;
        char c2, $c6, $c7, $c8, $c9, $c10;
        char[] $r9, $r11;

        r0 := @parameter0: java.lang.StringBuilder;

        r1 := @parameter1: java.lang.String;

        r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128>;

        i0 = lengthof r2;

        i11 = 0;

        i1 = virtualinvoke r1.<java.lang.String: int length()>();

     label1:
        if i11 >= i1 goto label6;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i11);

        if c2 >= i0 goto label2;

        $i5 = r2[c2];

        if $i5 != 0 goto label3;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label5;

     label3:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        i3 = r2[c2];

        if i3 >= 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(117);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] HC>;

        $c7 = c2 >> 4;

        $c8 = $r9[$c7];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] HC>;

        $c9 = c2 & 15;

        $c10 = $r11[$c9];

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        goto label5;

     label4:
        $c6 = (char) i3;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

     label5:
        i11 = i11 + 1;

        goto label1;

     label6:
        return;
    }

    public static char[] copyHexChars()
    {
        char[] $r0, $r2, $r3;
        java.lang.Object $r1;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] HC>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (char[]) $r1;

        $r3 = (char[]) $r2;

        return $r3;
    }

    public static byte[] copyHexBytes()
    {
        byte[] $r0, $r2, $r3;
        java.lang.Object $r1;

        $r0 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: byte[] HB>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r1;

        $r3 = (byte[]) $r2;

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.String $r0;
        char[] $r1, $r2, $r14;
        byte[] $r3, $r15;
        int[] $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, r16, r17, r18, r19, r20, r21, r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, i14, i15, i16, i17, i19, i20, i21, i22;
        char $c8, $c12;
        boolean $z0;
        byte $b13, b18;

        $r0 = "0123456789ABCDEF";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] HC> = $r1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] HC>;

        i14 = lengthof $r2;

        $r3 = newarray (byte)[i14];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: byte[] HB> = $r3;

        i15 = 0;

     label01:
        if i15 >= i14 goto label02;

        $r15 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: byte[] HB>;

        $r14 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: char[] HC>;

        $c12 = $r14[i15];

        $b13 = (byte) $c12;

        $r15[i15] = $b13;

        i15 = i15 + 1;

        goto label01;

     label02:
        r16 = newarray (int)[256];

        i16 = 0;

     label03:
        if i16 >= 32 goto label04;

        r16[i16] = -1;

        i16 = i16 + 1;

        goto label03;

     label04:
        r16[34] = 1;

        r16[92] = 1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes> = r16;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes>;

        $i0 = lengthof $r4;

        r17 = newarray (int)[$i0];

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes>;

        $i1 = lengthof r17;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r17, 0, $i1);

        i17 = 128;

     label05:
        if i17 >= 256 goto label10;

        $i9 = i17 & 224;

        if $i9 != 192 goto label06;

        b18 = 2;

        goto label09;

     label06:
        $i10 = i17 & 240;

        if $i10 != 224 goto label07;

        b18 = 3;

        goto label09;

     label07:
        $i11 = i17 & 248;

        if $i11 != 240 goto label08;

        b18 = 4;

        goto label09;

     label08:
        b18 = -1;

     label09:
        r17[i17] = b18;

        i17 = i17 + 1;

        goto label05;

     label10:
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8> = r17;

        r18 = newarray (int)[256];

        staticinvoke <java.util.Arrays: void fill(int[],int)>(r18, -1);

        i19 = 33;

     label11:
        if i19 >= 256 goto label13;

        $c8 = (char) i19;

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c8);

        if $z0 == 0 goto label12;

        r18[i19] = 0;

     label12:
        i19 = i19 + 1;

        goto label11;

     label13:
        r18[64] = 0;

        r18[35] = 0;

        r18[42] = 0;

        r18[45] = 0;

        r18[43] = 0;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesJsNames> = r18;

        r19 = newarray (int)[256];

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesJsNames>;

        $i2 = lengthof r19;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r19, 0, $i2);

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(r19, 128, 128, 0);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUtf8JsNames> = r19;

        r20 = newarray (int)[256];

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 128, r20, 128, 128);

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(r20, 0, 32, -1);

        r20[9] = 0;

        r20[10] = 10;

        r20[13] = 13;

        r20[42] = 42;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesComment> = r20;

        r21 = newarray (int)[256];

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 128, r21, 128, 128);

        staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(r21, 0, 32, -1);

        r21[32] = 1;

        r21[9] = 1;

        r21[10] = 10;

        r21[13] = 13;

        r21[47] = 47;

        r21[35] = 35;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesWS> = r21;

        r22 = newarray (int)[128];

        i20 = 0;

     label14:
        if i20 >= 32 goto label15;

        r22[i20] = -1;

        i20 = i20 + 1;

        goto label14;

     label15:
        r22[34] = 34;

        r22[92] = 92;

        r22[8] = 98;

        r22[9] = 116;

        r22[12] = 102;

        r22[10] = 110;

        r22[13] = 114;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128> = r22;

        $r9 = newarray (int)[256];

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues> = $r9;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;

        staticinvoke <java.util.Arrays: void fill(int[],int)>($r10, -1);

        i21 = 0;

     label16:
        if i21 >= 10 goto label17;

        $r13 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;

        $i7 = 48 + i21;

        $r13[$i7] = i21;

        i21 = i21 + 1;

        goto label16;

     label17:
        i22 = 0;

     label18:
        if i22 >= 6 goto label19;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;

        $i4 = 97 + i22;

        $i3 = 10 + i22;

        $r11[$i4] = $i3;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;

        $i6 = 65 + i22;

        $i5 = 10 + i22;

        $r12[$i6] = $i5;

        i22 = i22 + 1;

        goto label18;

     label19:
        return;
    }
}
