public class org.mockito.exceptions.base.MockitoException extends java.lang.RuntimeException
{
    private static final long serialVersionUID;
    private java.lang.StackTraceElement[] unfilteredStackTrace;

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.mockito.exceptions.base.MockitoException r0;
        java.lang.String r1;
        java.lang.Throwable r2;

        r0 := @this: org.mockito.exceptions.base.MockitoException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        specialinvoke r0.<org.mockito.exceptions.base.MockitoException: void filterStackTrace()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        org.mockito.exceptions.base.MockitoException r0;
        java.lang.String r1;

        r0 := @this: org.mockito.exceptions.base.MockitoException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        specialinvoke r0.<org.mockito.exceptions.base.MockitoException: void filterStackTrace()>();

        return;
    }

    private void filterStackTrace()
    {
        org.mockito.exceptions.base.MockitoException r0;
        java.lang.StackTraceElement[] $r2;
        org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter $r3;

        r0 := @this: org.mockito.exceptions.base.MockitoException;

        $r2 = virtualinvoke r0.<org.mockito.exceptions.base.MockitoException: java.lang.StackTraceElement[] getStackTrace()>();

        r0.<org.mockito.exceptions.base.MockitoException: java.lang.StackTraceElement[] unfilteredStackTrace> = $r2;

        $r3 = new org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter;

        specialinvoke $r3.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void <init>()>();

        virtualinvoke $r3.<org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter: void filter(java.lang.Throwable)>(r0);

        return;
    }

    public java.lang.StackTraceElement[] getUnfilteredStackTrace()
    {
        org.mockito.exceptions.base.MockitoException r0;
        java.lang.StackTraceElement[] $r1;

        r0 := @this: org.mockito.exceptions.base.MockitoException;

        $r1 = r0.<org.mockito.exceptions.base.MockitoException: java.lang.StackTraceElement[] unfilteredStackTrace>;

        return $r1;
    }

    public static void <clinit>()
    {
        <org.mockito.exceptions.base.MockitoException: long serialVersionUID> = 1L;

        return;
    }
}
