final class org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1 extends org.hamcrest.TypeSafeMatcher
{
    final java.util.function.Predicate val$predicate;
    final java.lang.String val$matcherDescription;

    void <init>(java.util.function.Predicate, java.lang.String)
    {
        org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1 r0;
        java.util.function.Predicate r1;
        java.lang.String r2;

        r0 := @this: org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1;

        r1 := @parameter0: java.util.function.Predicate;

        r2 := @parameter1: java.lang.String;

        r0.<org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1: java.util.function.Predicate val$predicate> = r1;

        r0.<org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1: java.lang.String val$matcherDescription> = r2;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        return;
    }

    protected boolean matchesSafely(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1 r0;
        java.lang.Object r1;
        java.util.function.Predicate $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1: java.util.function.Predicate val$predicate>;

        $z0 = interfaceinvoke $r2.<java.util.function.Predicate: boolean test(java.lang.Object)>(r1);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1 r0;
        org.hamcrest.Description r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = r0.<org.apache.flink.api.common.typeutils.TypeSerializerMatchers$1: java.lang.String val$matcherDescription>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r2);

        return;
    }
}
