class javassist.compiler.Javac$3 extends java.lang.Object implements javassist.compiler.ProceedHandler
{
    final javassist.compiler.ast.ASTree val$texpr;
    final int val$methodIndex;
    final java.lang.String val$descriptor;
    final java.lang.String val$classname;
    final java.lang.String val$methodname;
    final javassist.compiler.Javac this$0;

    void <init>(javassist.compiler.Javac, javassist.compiler.ast.ASTree, int, java.lang.String, java.lang.String, java.lang.String)
    {
        javassist.compiler.Javac$3 r0;
        javassist.compiler.Javac r1;
        javassist.compiler.ast.ASTree r2;
        int i0;
        java.lang.String r3, r4, r5;

        r0 := @this: javassist.compiler.Javac$3;

        r1 := @parameter0: javassist.compiler.Javac;

        r2 := @parameter1: javassist.compiler.ast.ASTree;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        r0.<javassist.compiler.Javac$3: javassist.compiler.Javac this$0> = r1;

        r0.<javassist.compiler.Javac$3: javassist.compiler.ast.ASTree val$texpr> = r2;

        r0.<javassist.compiler.Javac$3: int val$methodIndex> = i0;

        r0.<javassist.compiler.Javac$3: java.lang.String val$descriptor> = r3;

        r0.<javassist.compiler.Javac$3: java.lang.String val$classname> = r4;

        r0.<javassist.compiler.Javac$3: java.lang.String val$methodname> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void doit(javassist.compiler.JvstCodeGen, javassist.bytecode.Bytecode, javassist.compiler.ast.ASTList) throws javassist.compiler.CompileError
    {
        javassist.compiler.Javac$3 r0;
        javassist.compiler.JvstCodeGen r1;
        javassist.bytecode.Bytecode r2;
        javassist.compiler.ast.ASTList r3;
        java.lang.String $r4;
        int $i0;
        javassist.compiler.ast.ASTree $r5;

        r0 := @this: javassist.compiler.Javac$3;

        r1 := @parameter0: javassist.compiler.JvstCodeGen;

        r2 := @parameter1: javassist.bytecode.Bytecode;

        r3 := @parameter2: javassist.compiler.ast.ASTList;

        $r5 = r0.<javassist.compiler.Javac$3: javassist.compiler.ast.ASTree val$texpr>;

        $i0 = r0.<javassist.compiler.Javac$3: int val$methodIndex>;

        $r4 = r0.<javassist.compiler.Javac$3: java.lang.String val$descriptor>;

        virtualinvoke r1.<javassist.compiler.JvstCodeGen: void compileInvokeSpecial(javassist.compiler.ast.ASTree,int,java.lang.String,javassist.compiler.ast.ASTList)>($r5, $i0, $r4, r3);

        return;
    }

    public void setReturnType(javassist.compiler.JvstTypeChecker, javassist.compiler.ast.ASTList) throws javassist.compiler.CompileError
    {
        javassist.compiler.Javac$3 r0;
        javassist.compiler.JvstTypeChecker r1;
        javassist.compiler.ast.ASTList r2;
        java.lang.String $r3, $r4, $r5;
        javassist.compiler.ast.ASTree $r6;

        r0 := @this: javassist.compiler.Javac$3;

        r1 := @parameter0: javassist.compiler.JvstTypeChecker;

        r2 := @parameter1: javassist.compiler.ast.ASTList;

        $r6 = r0.<javassist.compiler.Javac$3: javassist.compiler.ast.ASTree val$texpr>;

        $r5 = r0.<javassist.compiler.Javac$3: java.lang.String val$classname>;

        $r4 = r0.<javassist.compiler.Javac$3: java.lang.String val$methodname>;

        $r3 = r0.<javassist.compiler.Javac$3: java.lang.String val$descriptor>;

        virtualinvoke r1.<javassist.compiler.JvstTypeChecker: void compileInvokeSpecial(javassist.compiler.ast.ASTree,java.lang.String,java.lang.String,java.lang.String,javassist.compiler.ast.ASTList)>($r6, $r5, $r4, $r3, r2);

        return;
    }
}
