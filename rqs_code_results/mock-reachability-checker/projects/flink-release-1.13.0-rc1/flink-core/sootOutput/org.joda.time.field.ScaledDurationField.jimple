public class org.joda.time.field.ScaledDurationField extends org.joda.time.field.DecoratedDurationField
{
    private static final long serialVersionUID;
    private final int iScalar;

    public void <init>(org.joda.time.DurationField, org.joda.time.DurationFieldType, int)
    {
        org.joda.time.field.ScaledDurationField r0;
        org.joda.time.DurationField r1;
        org.joda.time.DurationFieldType r2;
        int i0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        r1 := @parameter0: org.joda.time.DurationField;

        r2 := @parameter1: org.joda.time.DurationFieldType;

        i0 := @parameter2: int;

        specialinvoke r0.<org.joda.time.field.DecoratedDurationField: void <init>(org.joda.time.DurationField,org.joda.time.DurationFieldType)>(r1, r2);

        if i0 == 0 goto label1;

        if i0 != 1 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The scalar must not be 0 or 1");

        throw $r3;

     label2:
        r0.<org.joda.time.field.ScaledDurationField: int iScalar> = i0;

        return;
    }

    public int getValue(long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0;
        org.joda.time.DurationField $r1;
        int $i1, $i2, $i3;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i1 = virtualinvoke $r1.<org.joda.time.DurationField: int getValue(long)>(l0);

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i3 = $i1 / $i2;

        return $i3;
    }

    public long getValueAsLong(long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, $l1, $l3, $l4;
        org.joda.time.DurationField $r1;
        int $i2;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l1 = virtualinvoke $r1.<org.joda.time.DurationField: long getValueAsLong(long)>(l0);

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l3 = (long) $i2;

        $l4 = $l1 / $l3;

        return $l4;
    }

    public int getValue(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l1;
        org.joda.time.DurationField $r1;
        int $i2, $i3, $i4;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i2 = virtualinvoke $r1.<org.joda.time.DurationField: int getValue(long,long)>(l0, l1);

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i4 = $i2 / $i3;

        return $i4;
    }

    public long getValueAsLong(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l1, $l2, $l4, $l5;
        org.joda.time.DurationField $r1;
        int $i3;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r1.<org.joda.time.DurationField: long getValueAsLong(long,long)>(l0, l1);

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l4 = (long) $i3;

        $l5 = $l2 / $l4;

        return $l5;
    }

    public long getMillis(int)
    {
        org.joda.time.field.ScaledDurationField r0;
        int i0, $i2;
        long l1, $l3, $l4, $l5;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        i0 := @parameter0: int;

        $l4 = (long) i0;

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l3 = (long) $i2;

        l1 = $l4 * $l3;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l5 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long)>(l1);

        return $l5;
    }

    public long getMillis(long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l1, $l3;
        int $i2;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        $i2 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        l1 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l0, $i2);

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l3 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long)>(l1);

        return $l3;
    }

    public long getMillis(int, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        int i0, $i3;
        long l1, l2, $l4, $l5, $l6;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $l5 = (long) i0;

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l4 = (long) $i3;

        l2 = $l5 * $l4;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l6 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long,long)>(l2, l1);

        return $l6;
    }

    public long getMillis(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l1, l2, $l4;
        int $i3;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l0, $i3);

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l4 = virtualinvoke $r1.<org.joda.time.DurationField: long getMillis(long,long)>(l2, l1);

        return $l4;
    }

    public long add(long, int)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l2, $l4, $l5, $l6;
        int i1, $i3;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        $l5 = (long) i1;

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l4 = (long) $i3;

        l2 = $l5 * $l4;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l6 = virtualinvoke $r1.<org.joda.time.DurationField: long add(long,long)>(l0, l2);

        return $l6;
    }

    public long add(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l1, l2, $l4;
        int $i3;
        org.joda.time.DurationField $r1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        l2 = staticinvoke <org.joda.time.field.FieldUtils: long safeMultiply(long,int)>(l1, $i3);

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l4 = virtualinvoke $r1.<org.joda.time.DurationField: long add(long,long)>(l0, l2);

        return $l4;
    }

    public int getDifference(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l1;
        org.joda.time.DurationField $r1;
        int $i2, $i3, $i4;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i2 = virtualinvoke $r1.<org.joda.time.DurationField: int getDifference(long,long)>(l0, l1);

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i4 = $i2 / $i3;

        return $i4;
    }

    public long getDifferenceAsLong(long, long)
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, l1, $l2, $l4, $l5;
        org.joda.time.DurationField $r1;
        int $i3;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l2 = virtualinvoke $r1.<org.joda.time.DurationField: long getDifferenceAsLong(long,long)>(l0, l1);

        $i3 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l4 = (long) $i3;

        $l5 = $l2 / $l4;

        return $l5;
    }

    public long getUnitMillis()
    {
        org.joda.time.field.ScaledDurationField r0;
        org.joda.time.DurationField $r1;
        long $l0, $l2, $l3;
        int $i1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $l0 = virtualinvoke $r1.<org.joda.time.DurationField: long getUnitMillis()>();

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $l2 = (long) $i1;

        $l3 = $l0 * $l2;

        return $l3;
    }

    public int getScalar()
    {
        org.joda.time.field.ScaledDurationField r0;
        int $i0;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $i0 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.joda.time.field.ScaledDurationField r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.joda.time.DurationField $r3, $r4;
        org.joda.time.DurationFieldType $r5, $r6;
        int $i0, $i1;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.joda.time.field.ScaledDurationField;

        if $z0 == 0 goto label4;

        r2 = (org.joda.time.field.ScaledDurationField) r1;

        $r3 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $r4 = virtualinvoke r2.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationFieldType getType()>();

        $r6 = virtualinvoke r2.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationFieldType getType()>();

        if $r5 != $r6 goto label2;

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        $i0 = r2.<org.joda.time.field.ScaledDurationField: int iScalar>;

        if $i1 != $i0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.joda.time.field.ScaledDurationField r0;
        long l0, $l2, $l3;
        int $i1, $i4, $i5, i6, i7, i8;
        org.joda.time.DurationFieldType $r1;
        org.joda.time.DurationField $r2;

        r0 := @this: org.joda.time.field.ScaledDurationField;

        $i1 = r0.<org.joda.time.field.ScaledDurationField: int iScalar>;

        l0 = (long) $i1;

        $l2 = l0 >>> 32;

        $l3 = l0 ^ $l2;

        i6 = (int) $l3;

        $r1 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationFieldType getType()>();

        $i4 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        i7 = i6 + $i4;

        $r2 = virtualinvoke r0.<org.joda.time.field.ScaledDurationField: org.joda.time.DurationField getWrappedField()>();

        $i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        i8 = i7 + $i5;

        return i8;
    }

    public static void <clinit>()
    {
        <org.joda.time.field.ScaledDurationField: long serialVersionUID> = -3205227092378684157L;

        return;
    }
}
