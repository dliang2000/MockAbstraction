public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String okNameForGetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod r0;
        boolean z0;
        java.lang.String r1, r2;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        z0 := @parameter1: boolean;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getName()>();

        r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String okNameForIsGetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)>(r0, r1, z0);

        if r2 != null goto label1;

        r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String okNameForRegularGetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)>(r0, r1, z0);

     label1:
        return r2;
    }

    public static java.lang.String okNameForRegularGetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("get");

        if $z1 == 0 goto label5;

        $r2 = "getCallbacks";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label1;

        $z5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: boolean isCglibGetCallbacks(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>(r0);

        if $z5 == 0 goto label2;

        return null;

     label1:
        $r3 = "getMetaClass";

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z3 == 0 goto label2;

        $z4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: boolean isGroovyMetaClassGetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod)>(r0);

        if $z4 == 0 goto label2;

        return null;

     label2:
        if z0 == 0 goto label3;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String stdManglePropertyName(java.lang.String,int)>(r1, 3);

        goto label4;

     label3:
        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String legacyManglePropertyName(java.lang.String,int)>(r1, 3);

     label4:
        return $r4;

     label5:
        return null;
    }

    public static java.lang.String okNameForIsGetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod r0;
        java.lang.String r1, $r4;
        boolean z0, $z1;
        java.lang.Class r2, $r3;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("is");

        if $z1 == 0 goto label4;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        if r2 == class "Ljava/lang/Boolean;" goto label1;

        $r3 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r2 != $r3 goto label4;

     label1:
        if z0 == 0 goto label2;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String stdManglePropertyName(java.lang.String,int)>(r1, 2);

        goto label3;

     label2:
        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String legacyManglePropertyName(java.lang.String,int)>(r1, 2);

     label3:
        return $r4;

     label4:
        return null;
    }

    public static java.lang.String okNameForSetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String okNameForMutator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean)>(r0, "set", z0);

        return $r1;
    }

    public static java.lang.String okNameForMutator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod, java.lang.String, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod r0;
        java.lang.String r1, r2, $r3;
        boolean z0, $z1;
        int $i0, $i1;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getName()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        if z0 == 0 goto label1;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String stdManglePropertyName(java.lang.String,int)>(r2, $i1);

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String legacyManglePropertyName(java.lang.String,int)>(r2, $i0);

     label2:
        return $r3;

     label3:
        return null;
    }

    public static java.lang.Object getDefaultValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r0;
        java.lang.Class r1, r2;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include $r4;
        java.util.GregorianCalendar $r5;
        java.util.Date $r6;
        java.lang.Object $r7;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class primitiveType(java.lang.Class)>(r1);

        if r2 == null goto label1;

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object defaultValue(java.lang.Class)>(r2);

        return $r7;

     label1:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z1 == 0 goto label3;

     label2:
        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Include NON_EMPTY>;

        return $r4;

     label3:
        if r1 != class "Ljava/lang/String;" goto label4;

        return "";

     label4:
        $z2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(class "Ljava/util/Date;");

        if $z2 == 0 goto label5;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>(long)>(0L);

        return $r6;

     label5:
        $z3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(class "Ljava/util/Calendar;");

        if $z3 == 0 goto label6;

        $r5 = new java.util.GregorianCalendar;

        specialinvoke $r5.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $r5.<java.util.Calendar: void setTimeInMillis(long)>(0L);

        return $r5;

     label6:
        return null;
    }

    protected static boolean isCglibGetCallbacks(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod r0;
        java.lang.Class r1, r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label4;

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.Class getComponentType()>();

        r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(".cglib");

        if $z1 == 0 goto label4;

        $z2 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("net.sf.cglib");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("org.hibernate.repackage.cglib");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("org.springframework.cglib");

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;

     label4:
        return 0;
    }

    protected static boolean isGroovyMetaClassGetter(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("groovy.lang");

        return $z0;
    }

    protected static java.lang.String legacyManglePropertyName(java.lang.String, int)
    {
        java.lang.String r0, $r4, $r7;
        int i0, i1, $i2, i5;
        java.lang.StringBuilder $r2;
        char c3, c4, c6, c7;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 != i0 goto label1;

        return null;

     label1:
        c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c3);

        if c3 != c4 goto label2;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        return $r7;

     label2:
        $r2 = new java.lang.StringBuilder;

        $i2 = i1 - i0;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c4);

        i5 = i0 + 1;

     label3:
        if i5 >= i1 goto label5;

        c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c6);

        if c6 != c7 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, i5, i1);

        goto label5;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        i5 = i5 + 1;

        goto label3;

     label5:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String stdManglePropertyName(java.lang.String, int)
    {
        java.lang.String r0, $r5, $r6, $r7;
        int i0, i1, $i4, $i5, $i6, $i7;
        char c2, c3, $c8;
        java.lang.StringBuilder $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 != i0 goto label1;

        return null;

     label1:
        c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        c3 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c2);

        if c2 != c3 goto label2;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        return $r7;

     label2:
        $i4 = i0 + 1;

        if $i4 >= i1 goto label3;

        $i7 = i0 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c8);

        if $z0 == 0 goto label3;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0);

        return $r6;

     label3:
        $r2 = new java.lang.StringBuilder;

        $i5 = i1 - i0;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        $i6 = i0 + 1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(r0, $i6, i1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String checkUnsupportedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r0;
        java.lang.Class r1;
        boolean $z0, $z1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r4, r5, r6;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: boolean isJava8TimeClass(java.lang.Class)>(r1);

        if $z0 == 0 goto label1;

        r5 = "Java 8 date/time";

        r6 = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.datatype:jackson-datatype-jsr310";

        goto label3;

     label1:
        $z1 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.BeanUtil: boolean isJodaTimeClass(java.lang.Class)>(r1);

        if $z1 == 0 goto label2;

        r5 = "Joda date/time";

        r6 = "org.apache.flink.shaded.jackson2.com.fasterxml.jackson.datatype:jackson-datatype-joda";

        goto label3;

     label2:
        return null;

     label3:
        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = r5;

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r0);

        $r2[1] = $r3;

        $r2[2] = r6;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s type %s not supported by default: add Module \"%s\" to enable handling", $r2);

        return $r4;
    }

    public static boolean isJava8TimeClass(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("java.time.");

        return $z0;
    }

    public static boolean isJodaTimeClass(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("org.joda.time.");

        return $z0;
    }
}
