public class org.apache.flink.core.fs.local.LocalDataOutputStream extends org.apache.flink.core.fs.FSDataOutputStream
{
    private final java.io.FileOutputStream fos;

    public void <init>(java.io.File) throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataOutputStream r0;
        java.io.File r1;
        java.io.FileOutputStream $r2;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataOutputStream;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.apache.flink.core.fs.FSDataOutputStream: void <init>()>();

        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r0.<org.apache.flink.core.fs.local.LocalDataOutputStream: java.io.FileOutputStream fos> = $r2;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataOutputStream r0;
        int i0;
        java.io.FileOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataOutputStream: java.io.FileOutputStream fos>;

        virtualinvoke $r1.<java.io.FileOutputStream: void write(int)>(i0);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.FileOutputStream $r2;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.flink.core.fs.local.LocalDataOutputStream: java.io.FileOutputStream fos>;

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataOutputStream r0;
        java.io.FileOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataOutputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataOutputStream: java.io.FileOutputStream fos>;

        virtualinvoke $r1.<java.io.FileOutputStream: void close()>();

        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataOutputStream r0;
        java.io.FileOutputStream $r1;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataOutputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataOutputStream: java.io.FileOutputStream fos>;

        virtualinvoke $r1.<java.io.FileOutputStream: void flush()>();

        return;
    }

    public void sync() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataOutputStream r0;
        java.io.FileOutputStream $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataOutputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataOutputStream: java.io.FileOutputStream fos>;

        $r2 = virtualinvoke $r1.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r2.<java.io.FileDescriptor: void sync()>();

        return;
    }

    public long getPos() throws java.io.IOException
    {
        org.apache.flink.core.fs.local.LocalDataOutputStream r0;
        java.io.FileOutputStream $r1;
        java.nio.channels.FileChannel $r2;
        long $l0;

        r0 := @this: org.apache.flink.core.fs.local.LocalDataOutputStream;

        $r1 = r0.<org.apache.flink.core.fs.local.LocalDataOutputStream: java.io.FileOutputStream fos>;

        $r2 = virtualinvoke $r1.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        $l0 = virtualinvoke $r2.<java.nio.channels.FileChannel: long position()>();

        return $l0;
    }
}
