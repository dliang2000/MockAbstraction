final enum class org.apache.flink.util.InstantiationUtil$MigrationUtil extends java.lang.Enum
{
    public static final enum org.apache.flink.util.InstantiationUtil$MigrationUtil GENERIC_DATA_ARRAY_SERIALIZER;
    public static final enum org.apache.flink.util.InstantiationUtil$MigrationUtil HASH_MAP_SERIALIZER;
    private static final java.util.Map EQUIVALENCE_MAP;
    private final java.lang.String oldSerializerName;
    private final java.io.ObjectStreamClass newSerializerStreamClass;
    private static final org.apache.flink.util.InstantiationUtil$MigrationUtil[] $VALUES;

    public static org.apache.flink.util.InstantiationUtil$MigrationUtil[] values()
    {
        org.apache.flink.util.InstantiationUtil$MigrationUtil[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.flink.util.InstantiationUtil$MigrationUtil: org.apache.flink.util.InstantiationUtil$MigrationUtil[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.flink.util.InstantiationUtil$MigrationUtil[]) $r1;

        return $r2;
    }

    public static org.apache.flink.util.InstantiationUtil$MigrationUtil valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.flink.util.InstantiationUtil$MigrationUtil $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/flink/util/InstantiationUtil$MigrationUtil;", r0);

        $r2 = (org.apache.flink.util.InstantiationUtil$MigrationUtil) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, java.io.ObjectStreamClass)
    {
        org.apache.flink.util.InstantiationUtil$MigrationUtil r0;
        java.lang.String r1, r2;
        int i0;
        java.io.ObjectStreamClass r3;

        r0 := @this: org.apache.flink.util.InstantiationUtil$MigrationUtil;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.io.ObjectStreamClass;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.apache.flink.util.InstantiationUtil$MigrationUtil: java.lang.String oldSerializerName> = r2;

        r0.<org.apache.flink.util.InstantiationUtil$MigrationUtil: java.io.ObjectStreamClass newSerializerStreamClass> = r3;

        return;
    }

    private static java.util.Map initMap()
    {
        org.apache.flink.util.InstantiationUtil$MigrationUtil[] r1;
        int i0, i1;
        org.apache.flink.util.InstantiationUtil$MigrationUtil r2;
        java.util.HashMap $r3;
        java.io.ObjectStreamClass $r4;
        java.lang.String $r5;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>(int)>(4);

        r1 = staticinvoke <org.apache.flink.util.InstantiationUtil$MigrationUtil: org.apache.flink.util.InstantiationUtil$MigrationUtil[] values()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r5 = r2.<org.apache.flink.util.InstantiationUtil$MigrationUtil: java.lang.String oldSerializerName>;

        $r4 = r2.<org.apache.flink.util.InstantiationUtil$MigrationUtil: java.io.ObjectStreamClass newSerializerStreamClass>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }

    private static java.io.ObjectStreamClass getEquivalentSerializer(java.lang.String)
    {
        java.lang.String r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.io.ObjectStreamClass $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.flink.util.InstantiationUtil$MigrationUtil: java.util.Map EQUIVALENCE_MAP>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.io.ObjectStreamClass) $r2;

        return $r3;
    }

    static java.io.ObjectStreamClass access$000(java.lang.String)
    {
        java.lang.String r0;
        java.io.ObjectStreamClass $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.flink.util.InstantiationUtil$MigrationUtil: java.io.ObjectStreamClass getEquivalentSerializer(java.lang.String)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.util.InstantiationUtil$MigrationUtil $r0, $r2, $r5, $r6;
        java.io.ObjectStreamClass $r1, $r3;
        org.apache.flink.util.InstantiationUtil$MigrationUtil[] $r4;
        java.util.Map $r7, $r8;

        $r0 = new org.apache.flink.util.InstantiationUtil$MigrationUtil;

        $r1 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/KryoRegistrationSerializerConfigSnapshot$DummyRegisteredClass;");

        specialinvoke $r0.<org.apache.flink.util.InstantiationUtil$MigrationUtil: void <init>(java.lang.String,int,java.lang.String,java.io.ObjectStreamClass)>("GENERIC_DATA_ARRAY_SERIALIZER", 0, "org.apache.avro.generic.GenericData$Array", $r1);

        <org.apache.flink.util.InstantiationUtil$MigrationUtil: org.apache.flink.util.InstantiationUtil$MigrationUtil GENERIC_DATA_ARRAY_SERIALIZER> = $r0;

        $r2 = new org.apache.flink.util.InstantiationUtil$MigrationUtil;

        $r3 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookup(java.lang.Class)>(class "Lorg/apache/flink/api/common/typeutils/base/MapSerializer;");

        specialinvoke $r2.<org.apache.flink.util.InstantiationUtil$MigrationUtil: void <init>(java.lang.String,int,java.lang.String,java.io.ObjectStreamClass)>("HASH_MAP_SERIALIZER", 1, "org.apache.flink.runtime.state.HashMapSerializer", $r3);

        <org.apache.flink.util.InstantiationUtil$MigrationUtil: org.apache.flink.util.InstantiationUtil$MigrationUtil HASH_MAP_SERIALIZER> = $r2;

        $r4 = newarray (org.apache.flink.util.InstantiationUtil$MigrationUtil)[2];

        $r5 = <org.apache.flink.util.InstantiationUtil$MigrationUtil: org.apache.flink.util.InstantiationUtil$MigrationUtil GENERIC_DATA_ARRAY_SERIALIZER>;

        $r4[0] = $r5;

        $r6 = <org.apache.flink.util.InstantiationUtil$MigrationUtil: org.apache.flink.util.InstantiationUtil$MigrationUtil HASH_MAP_SERIALIZER>;

        $r4[1] = $r6;

        <org.apache.flink.util.InstantiationUtil$MigrationUtil: org.apache.flink.util.InstantiationUtil$MigrationUtil[] $VALUES> = $r4;

        $r7 = staticinvoke <org.apache.flink.util.InstantiationUtil$MigrationUtil: java.util.Map initMap()>();

        $r8 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r7);

        <org.apache.flink.util.InstantiationUtil$MigrationUtil: java.util.Map EQUIVALENCE_MAP> = $r8;

        return;
    }
}
