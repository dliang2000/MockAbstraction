public class org.powermock.api.support.membermodification.MemberModifier extends org.powermock.api.support.membermodification.MemberMatcher
{

    public void <init>()
    {
        org.powermock.api.support.membermodification.MemberModifier r0;

        r0 := @this: org.powermock.api.support.membermodification.MemberModifier;

        specialinvoke r0.<org.powermock.api.support.membermodification.MemberMatcher: void <init>()>();

        return;
    }

    public static void suppress(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        java.lang.reflect.Method[] $r1;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = newarray (java.lang.reflect.Method)[1];

        $r1[0] = r0;

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressMethod(java.lang.reflect.Method[])>($r1);

        return;
    }

    public static void suppress(java.lang.reflect.Method[])
    {
        java.lang.reflect.Method[] r0;

        r0 := @parameter0: java.lang.reflect.Method[];

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressMethod(java.lang.reflect.Method[])>(r0);

        return;
    }

    public static void suppress(java.lang.reflect.Constructor)
    {
        java.lang.reflect.Constructor r0;
        java.lang.reflect.Constructor[] $r1;

        r0 := @parameter0: java.lang.reflect.Constructor;

        $r1 = newarray (java.lang.reflect.Constructor)[1];

        $r1[0] = r0;

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressConstructor(java.lang.reflect.Constructor[])>($r1);

        return;
    }

    public static void suppress(java.lang.reflect.Constructor[])
    {
        java.lang.reflect.Constructor[] r0;

        r0 := @parameter0: java.lang.reflect.Constructor[];

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressConstructor(java.lang.reflect.Constructor[])>(r0);

        return;
    }

    public static void suppress(java.lang.reflect.Field)
    {
        java.lang.reflect.Field r0;
        java.lang.reflect.Field[] $r1;

        r0 := @parameter0: java.lang.reflect.Field;

        $r1 = newarray (java.lang.reflect.Field)[1];

        $r1[0] = r0;

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressField(java.lang.reflect.Field[])>($r1);

        return;
    }

    public static void suppress(java.lang.reflect.Field[])
    {
        java.lang.reflect.Field[] r0;

        r0 := @parameter0: java.lang.reflect.Field[];

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressField(java.lang.reflect.Field[])>(r0);

        return;
    }

    public static void suppress(java.lang.reflect.AccessibleObject[])
    {
        java.lang.reflect.AccessibleObject[] r0;
        int i0, i1;
        java.lang.reflect.AccessibleObject r2;
        boolean $z0, $z1, $z2;
        java.lang.reflect.Method[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.reflect.Field[] $r5;
        java.lang.reflect.Field $r6;
        java.lang.reflect.Constructor[] $r7;
        java.lang.reflect.Constructor $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @parameter0: java.lang.reflect.AccessibleObject[];

        if r0 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("accessibleObjects cannot be null");

        throw $r9;

     label1:
        i0 = lengthof r0;

        i1 = 0;

     label2:
        if i1 >= i0 goto label6;

        r2 = r0[i1];

        $z0 = r2 instanceof java.lang.reflect.Constructor;

        if $z0 == 0 goto label3;

        $r7 = newarray (java.lang.reflect.Constructor)[1];

        $r8 = (java.lang.reflect.Constructor) r2;

        $r7[0] = $r8;

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressConstructor(java.lang.reflect.Constructor[])>($r7);

        goto label5;

     label3:
        $z1 = r2 instanceof java.lang.reflect.Field;

        if $z1 == 0 goto label4;

        $r5 = newarray (java.lang.reflect.Field)[1];

        $r6 = (java.lang.reflect.Field) r2;

        $r5[0] = $r6;

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressField(java.lang.reflect.Field[])>($r5);

        goto label5;

     label4:
        $z2 = r2 instanceof java.lang.reflect.Method;

        if $z2 == 0 goto label5;

        $r3 = newarray (java.lang.reflect.Method)[1];

        $r4 = (java.lang.reflect.Method) r2;

        $r3[0] = $r4;

        staticinvoke <org.powermock.api.support.SuppressCode: void suppressMethod(java.lang.reflect.Method[])>($r3);

     label5:
        i1 = i1 + 1;

        goto label2;

     label6:
        return;
    }

    public static org.powermock.api.support.membermodification.strategy.MethodStubStrategy stub(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl $r1;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = new org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl;

        specialinvoke $r1.<org.powermock.api.support.membermodification.strategy.impl.MethodStubStrategyImpl: void <init>(java.lang.reflect.Method)>(r0);

        return $r1;
    }

    public static org.powermock.api.support.membermodification.strategy.MethodReplaceStrategy replace(java.lang.reflect.Method)
    {
        java.lang.reflect.Method r0;
        org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl $r1;

        r0 := @parameter0: java.lang.reflect.Method;

        $r1 = new org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl;

        specialinvoke $r1.<org.powermock.api.support.membermodification.strategy.impl.MethodReplaceStrategyImpl: void <init>(java.lang.reflect.Method)>(r0);

        return $r1;
    }
}
