class javassist.bytecode.StackMapTable$SimpleCopy extends javassist.bytecode.StackMapTable$Walker
{
    private javassist.bytecode.StackMapTable$Writer writer;

    public void <init>(byte[])
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        byte[] r1;
        javassist.bytecode.StackMapTable$Writer $r2;
        int $i0;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        r1 := @parameter0: byte[];

        specialinvoke r0.<javassist.bytecode.StackMapTable$Walker: void <init>(byte[])>(r1);

        $r2 = new javassist.bytecode.StackMapTable$Writer;

        $i0 = lengthof r1;

        specialinvoke $r2.<javassist.bytecode.StackMapTable$Writer: void <init>(int)>($i0);

        r0.<javassist.bytecode.StackMapTable$SimpleCopy: javassist.bytecode.StackMapTable$Writer writer> = $r2;

        return;
    }

    public byte[] doit() throws javassist.bytecode.BadBytecode
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        javassist.bytecode.StackMapTable$Writer $r1;
        byte[] $r2;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        virtualinvoke r0.<javassist.bytecode.StackMapTable$SimpleCopy: void parse()>();

        $r1 = r0.<javassist.bytecode.StackMapTable$SimpleCopy: javassist.bytecode.StackMapTable$Writer writer>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.StackMapTable$Writer: byte[] toByteArray()>();

        return $r2;
    }

    public void sameFrame(int, int)
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        int i0, i1;
        javassist.bytecode.StackMapTable$Writer $r1;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<javassist.bytecode.StackMapTable$SimpleCopy: javassist.bytecode.StackMapTable$Writer writer>;

        virtualinvoke $r1.<javassist.bytecode.StackMapTable$Writer: void sameFrame(int)>(i1);

        return;
    }

    public void sameLocals(int, int, int, int)
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        int i0, i1, i2, i3, $i4;
        javassist.bytecode.StackMapTable$Writer $r1;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $r1 = r0.<javassist.bytecode.StackMapTable$SimpleCopy: javassist.bytecode.StackMapTable$Writer writer>;

        $i4 = virtualinvoke r0.<javassist.bytecode.StackMapTable$SimpleCopy: int copyData(int,int)>(i2, i3);

        virtualinvoke $r1.<javassist.bytecode.StackMapTable$Writer: void sameLocals(int,int,int)>(i1, i2, $i4);

        return;
    }

    public void chopFrame(int, int, int)
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        int i0, i1, i2;
        javassist.bytecode.StackMapTable$Writer $r1;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<javassist.bytecode.StackMapTable$SimpleCopy: javassist.bytecode.StackMapTable$Writer writer>;

        virtualinvoke $r1.<javassist.bytecode.StackMapTable$Writer: void chopFrame(int,int)>(i1, i2);

        return;
    }

    public void appendFrame(int, int, int[], int[])
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        int i0, i1;
        int[] r1, r2, $r4;
        javassist.bytecode.StackMapTable$Writer $r3;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        $r3 = r0.<javassist.bytecode.StackMapTable$SimpleCopy: javassist.bytecode.StackMapTable$Writer writer>;

        $r4 = virtualinvoke r0.<javassist.bytecode.StackMapTable$SimpleCopy: int[] copyData(int[],int[])>(r1, r2);

        virtualinvoke $r3.<javassist.bytecode.StackMapTable$Writer: void appendFrame(int,int[],int[])>(i1, r1, $r4);

        return;
    }

    public void fullFrame(int, int, int[], int[], int[], int[])
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        int i0, i1;
        int[] r1, r2, r3, r4, $r6, $r7;
        javassist.bytecode.StackMapTable$Writer $r5;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: int[];

        r2 := @parameter3: int[];

        r3 := @parameter4: int[];

        r4 := @parameter5: int[];

        $r5 = r0.<javassist.bytecode.StackMapTable$SimpleCopy: javassist.bytecode.StackMapTable$Writer writer>;

        $r6 = virtualinvoke r0.<javassist.bytecode.StackMapTable$SimpleCopy: int[] copyData(int[],int[])>(r1, r2);

        $r7 = virtualinvoke r0.<javassist.bytecode.StackMapTable$SimpleCopy: int[] copyData(int[],int[])>(r3, r4);

        virtualinvoke $r5.<javassist.bytecode.StackMapTable$Writer: void fullFrame(int,int[],int[],int[],int[])>(i1, r1, $r6, r3, $r7);

        return;
    }

    protected int copyData(int, int)
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        int i0, i1;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return i1;
    }

    protected int[] copyData(int[], int[])
    {
        javassist.bytecode.StackMapTable$SimpleCopy r0;
        int[] r1, r2;

        r0 := @this: javassist.bytecode.StackMapTable$SimpleCopy;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        return r2;
    }
}
