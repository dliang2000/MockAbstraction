public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected transient java.util.Map _seenObjectIds;
    protected transient java.util.ArrayList _objectIdGenerators;
    protected transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _generator;

    protected void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void <init>()>();

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory)>(r1, r2, r3);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0, r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1);

        return;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        java.lang.IllegalStateException $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("DefaultSerializerProvider sub-class not overriding copy()");

        throw $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated r1;
        java.lang.Object r2, $r9;
        java.lang.Class r3, $r5, $r21;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r6, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r10, $r18;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r19, $r20, $r23, $r24;
        java.lang.String $r13, $r16, $r22, $r25;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r27, $r28, $r29;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        if $z0 == 0 goto label2;

        r27 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) r2;

        goto label9;

     label2:
        $z1 = r2 instanceof java.lang.Class;

        if $z1 != 0 goto label3;

        $r18 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getType()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnnotationIntrospector returned serializer definition of type ");

        $r21 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected type JsonSerializer or Class<JsonSerializer> instead");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>($r18, $r25);

     label3:
        r3 = (java.lang.Class) r2;

        if r3 == class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonSerializer$None;" goto label4;

        $z2 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(r3);

        if $z2 == 0 goto label5;

     label4:
        return null;

     label5:
        $r5 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/JsonSerializer;";

        $z3 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z3 != 0 goto label6;

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getType()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AnnotationIntrospector returned Class ");

        $r13 = virtualinvoke r3.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; expected Class<JsonSerializer>");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>($r10, $r16);

     label6:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r4 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if r4 != null goto label7;

        $r28 = null;

        goto label8;

     label7:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r28 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class)>($r7, r1, r3);

     label8:
        r27 = $r28;

        if $r28 != null goto label9;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z4 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r3, $z4);

        r27 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) $r9;

     label9:
        $r29 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r27);

        return $r29;
    }

    public java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition r1;
        java.lang.Class r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4, $r5, $r6;
        boolean $z0;
        java.lang.Object $r7, r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;

        r2 := @parameter1: java.lang.Class;

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r3 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator()>();

        if r3 != null goto label2;

        $r7 = null;

        goto label3;

     label2:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.HandlerInstantiator: java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>($r5, r1, r2);

     label3:
        r8 = $r7;

        if $r7 != null goto label4;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(r2, $z0);

     label4:
        return r8;
    }

    public boolean includeFilterSuppressNulls(java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        java.lang.Object r1;
        java.lang.String r3, $r7, $r9, $r10;
        boolean $z0;
        java.lang.Throwable $r4;
        java.lang.Object[] $r5;
        java.lang.Class $r6, $r8, $r11;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(null);

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        $r5 = newarray (java.lang.Object)[3];

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5[0] = $r7;

        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r5[1] = $r9;

        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r4);

        $r5[2] = $r10;

        r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Problem determining whether filter of type \'%s\' should filter out `null` values: (%s) %s", $r5);

        $r11 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String,java.lang.Throwable)>($r11, r3, $r4);

        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        java.lang.Object r1, $r6, $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator r2, r3, r18;
        int i0, i1;
        java.util.Map $r4, $r5, $r10, $r16;
        java.util.ArrayList $r7, $r8, $r12, $r13, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.WritableObjectId $r9, r17;
        boolean $z1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds>;

        if $r4 != null goto label1;

        $r16 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _createObjectIdMap()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds> = $r16;

        goto label2;

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r17 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.WritableObjectId) $r6;

        if r17 == null goto label2;

        return r17;

     label2:
        r18 = null;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;

        if $r7 != null goto label3;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>(8);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators> = $r15;

        goto label6;

     label3:
        i1 = 0;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;

        i0 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

     label4:
        if i1 >= i0 goto label6;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;

        $r14 = virtualinvoke $r13.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r3 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator) $r14;

        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator: boolean canUseFor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>(r2);

        if $z1 == 0 goto label5;

        r18 = r3;

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        if r18 != null goto label7;

        r18 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator newForSerialization(java.lang.Object)>(r0);

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.ArrayList _objectIdGenerators>;

        virtualinvoke $r12.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

     label7:
        $r9 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.WritableObjectId;

        specialinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.WritableObjectId: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator)>(r18);

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.util.Map _seenObjectIds>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r9);

        return $r9;
    }

    protected java.util.Map _createObjectIdMap()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r1;
        boolean $z0;
        java.util.IdentityHashMap $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature USE_EQUALITY_FOR_OBJECT_ID>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r1);

        if $z0 == 0 goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        return $r3;

     label1:
        $r2 = new java.util.IdentityHashMap;

        specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>();

        return $r2;
    }

    public boolean hasSerializerFor(java.lang.Class, java.util.concurrent.atomic.AtomicReference)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        java.lang.Class r1;
        java.util.concurrent.atomic.AtomicReference r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r5;
        java.lang.RuntimeException $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicReference;

        if r1 != class "Ljava/lang/Object;" goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS>;

        $z0 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class)>(r1);

        if r7 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r5 := @caughtexception;

        if r2 == null goto label5;

        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r5);

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        if r2 != null goto label7;

        throw $r6;

     label7:
        virtualinvoke r2.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>($r6);

     label8:
        return 0;

        catch org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException from label1 to label3 with label4;
        catch java.lang.RuntimeException from label1 to label3 with label6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _generator>;

        return $r1;
    }

    public void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName r5, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r6, $r8, $r9;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _generator> = r1;

        if r2 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r1);

        return;

     label1:
        r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, 1, null);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r5 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName getFullRootName()>();

        if r5 != null goto label2;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;

        $z1 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r7);

        if $z1 == 0 goto label3;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r10 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class)>(r3);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName)>(r1, r2, r4, $r10);

        return;

     label2:
        $z0 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName)>(r1, r2, r4, r5);

        return;

     label3:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r4);

        return;
    }

    public void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName r5, $r12;
        java.lang.Class $r6, $r7;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r8, $r10, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _generator> = r1;

        if r2 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r1);

        return;

     label1:
        $r6 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r7);

        if $z0 != 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r3);

     label2:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, 1, null);

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r5 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName getFullRootName()>();

        if r5 != null goto label3;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;

        $z2 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r9);

        if $z2 == 0 goto label4;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r12 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName findRootName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3);

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName)>(r1, r2, r4, $r12);

        return;

     label3:
        $z1 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName)>(r1, r2, r4, r5);

        return;

     label4:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r4);

        return;
    }

    public void serializeValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r5;
        java.lang.Class $r9, $r10, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName r13, $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r12 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _generator> = r1;

        if r2 != null goto label1;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r1);

        return;

     label1:
        if r3 == null goto label2;

        $r10 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r11 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r11);

        if $z2 != 0 goto label2;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r3);

     label2:
        if r12 != null goto label3;

        r12 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, 1, null);

     label3:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r13 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName getFullRootName()>();

        if r13 != null goto label6;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;

        $z1 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r5);

        if $z1 == 0 goto label7;

        if r3 != null goto label4;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r9 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class)>($r9);

        goto label5;

     label4:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r14 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName findRootName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r3);

     label5:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName)>(r1, r2, r12, $r14);

        return;

     label6:
        $z0 = virtualinvoke r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName)>(r1, r2, r12, r13);

        return;

     label7:
        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r2, r12);

        return;
    }

    public void serializePolymorphic(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName r5, r20;
        boolean $z0, $z1, $z2, z3;
        java.lang.String $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r8, $r9, $r11, $r19;
        java.lang.Class $r10, $r13, $r14, $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r12;
        java.lang.Exception $r16;
        java.io.IOException $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r18;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r18 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter4: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator _generator> = r1;

        if r2 != null goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _serializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator)>(r1);

        return;

     label01:
        if r3 == null goto label02;

        $r14 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r15 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $z2 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r15);

        if $z2 != 0 goto label02;

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r3);

     label02:
        if r18 != null goto label04;

        if r3 == null goto label03;

        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();

        if $z1 == 0 goto label03;

        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, null);

        goto label04;

     label03:
        $r13 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        r18 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r13, null);

     label04:
        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r5 = virtualinvoke $r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName getFullRootName()>();

        if r5 != null goto label05;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;

        z3 = virtualinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r7);

        if z3 == 0 goto label07;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r10 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        r20 = virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName findRootName(java.lang.Class)>($r10);

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r12 = virtualinvoke r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString simpleAsEncoded(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig)>($r11);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>($r12);

        goto label07;

     label05:
        $z0 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName: boolean isEmpty()>();

        if $z0 == 0 goto label06;

        z3 = 0;

        goto label07;

     label06:
        z3 = 1;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();

        $r6 = virtualinvoke r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>();

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r6);

     label07:
        virtualinvoke r18.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(r2, r1, r0, r4);

        if z3 == 0 goto label08;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();

     label08:
        goto label10;

     label09:
        $r16 := @caughtexception;

        $r17 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(r1, $r16);

        throw $r17;

     label10:
        return;

        catch java.lang.Exception from label07 to label08 with label09;
    }

    private final void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r7;
        java.lang.Exception $r8;
        java.io.IOException $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r4 := @parameter3: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName;

     label1:
        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeStartObject()>();

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.PropertyName: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString simpleAsEncoded(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig)>($r6);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>($r7);

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r2, r1, r0);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(r1, $r8);

        throw $r9;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private final void _serialize(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;
        java.lang.Exception $r5;
        java.io.IOException $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

     label1:
        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r2, r1, r0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(r1, $r5);

        throw $r6;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void _serializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r2;
        java.lang.Exception $r4;
        java.io.IOException $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();

     label1:
        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(null, r1, r0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(r1, $r4);

        throw $r5;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.io.IOException _wrapAsIOE(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, java.lang.Exception)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        java.lang.Exception r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r3;
        java.lang.StringBuilder $r4, $r5, $r8, $r9;
        java.lang.Class $r6;
        java.lang.String $r7, r11;
        java.io.IOException $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r2 := @parameter1: java.lang.Exception;

        $z0 = r2 instanceof java.io.IOException;

        if $z0 == 0 goto label1;

        $r10 = (java.io.IOException) r2;

        return $r10;

     label1:
        r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(r2);

        if r11 != null goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[no message for ");

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r3 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

        specialinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String,java.lang.Throwable)>(r1, r11, r2);

        return $r3;
    }

    public int cachedSerializersCount()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r1;
        int $i0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: int size()>();

        return $i0;
    }

    public void flushCachedSerializers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: void flush()>();

        return;
    }

    public void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("A class must be provided");

        throw $r4;

     label1:
        interfaceinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: void setProvider(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r0);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, null);

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void acceptJsonFormatVisitor(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r1);

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r2;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11;
        java.lang.String $r9, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.SchemaAware $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode $r14;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;

        r1 := @parameter0: java.lang.Class;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, null);

        $z0 = r2 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.SchemaAware;

        if $z0 == 0 goto label1;

        $r13 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.SchemaAware) r2;

        $r14 = interfaceinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.SchemaAware: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode getSchema(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)>(r0, null);

        goto label2;

     label1:
        $r14 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonNode getDefaultSchemaNode()>();

     label2:
        $z1 = $r14 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode;

        if $z1 != 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class ");

        $r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" would not be serialized as a JSON object and therefore has no schema");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label3:
        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema;

        $r5 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode) $r14;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsonschema.JsonSchema: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.node.ObjectNode)>($r5);

        return $r4;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: long serialVersionUID> = 1L;

        return;
    }
}
