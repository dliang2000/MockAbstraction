public abstract class org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{
    private org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo info;

    public void <init>(org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo)
    {
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase r0;
        org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase;

        r1 := @parameter0: org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        r0.<org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase: org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo info> = r1;

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase r0;
        boolean z0;
        org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo $r1;
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparator $r2;
        org.apache.flink.api.common.typeutils.TypeComparator $r3;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase: org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo info>;

        $r2 = virtualinvoke $r1.<org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo: org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparator createComparator(boolean,org.apache.flink.api.common.ExecutionConfig)>(z0, null);

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparator: org.apache.flink.api.common.typeutils.TypeComparator duplicate()>();

        return $r3;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase r0;
        org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo $r1;
        org.apache.flink.api.common.typeutils.TypeSerializer $r2;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase;

        $r1 = r0.<org.apache.flink.api.common.typeutils.base.array.PrimitiveArrayComparatorTestBase: org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo info>;

        $r2 = virtualinvoke $r1.<org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>(null);

        return $r2;
    }
}
