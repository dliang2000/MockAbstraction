class javassist.bytecode.StackMapTable$Copier extends javassist.bytecode.StackMapTable$SimpleCopy
{
    private javassist.bytecode.ConstPool srcPool;
    private javassist.bytecode.ConstPool destPool;
    private java.util.Map classnames;

    public void <init>(javassist.bytecode.ConstPool, byte[], javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.StackMapTable$Copier r0;
        javassist.bytecode.ConstPool r1, r3;
        byte[] r2;
        java.util.Map r4;

        r0 := @this: javassist.bytecode.StackMapTable$Copier;

        r1 := @parameter0: javassist.bytecode.ConstPool;

        r2 := @parameter1: byte[];

        r3 := @parameter2: javassist.bytecode.ConstPool;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<javassist.bytecode.StackMapTable$SimpleCopy: void <init>(byte[])>(r2);

        r0.<javassist.bytecode.StackMapTable$Copier: javassist.bytecode.ConstPool srcPool> = r1;

        r0.<javassist.bytecode.StackMapTable$Copier: javassist.bytecode.ConstPool destPool> = r3;

        r0.<javassist.bytecode.StackMapTable$Copier: java.util.Map classnames> = r4;

        return;
    }

    protected int copyData(int, int)
    {
        javassist.bytecode.StackMapTable$Copier r0;
        int i0, i1, $i2;
        java.util.Map $r1;
        javassist.bytecode.ConstPool $r2, $r3;

        r0 := @this: javassist.bytecode.StackMapTable$Copier;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 7 goto label1;

        $r3 = r0.<javassist.bytecode.StackMapTable$Copier: javassist.bytecode.ConstPool srcPool>;

        $r2 = r0.<javassist.bytecode.StackMapTable$Copier: javassist.bytecode.ConstPool destPool>;

        $r1 = r0.<javassist.bytecode.StackMapTable$Copier: java.util.Map classnames>;

        $i2 = virtualinvoke $r3.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>(i1, $r2, $r1);

        return $i2;

     label1:
        return i1;
    }

    protected int[] copyData(int[], int[])
    {
        javassist.bytecode.StackMapTable$Copier r0;
        int[] r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.util.Map $r4;
        javassist.bytecode.ConstPool $r5, $r6;

        r0 := @this: javassist.bytecode.StackMapTable$Copier;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        $i0 = lengthof r2;

        r3 = newarray (int)[$i0];

        i6 = 0;

     label1:
        $i1 = lengthof r2;

        if i6 >= $i1 goto label4;

        $i2 = r1[i6];

        if $i2 != 7 goto label2;

        $r6 = r0.<javassist.bytecode.StackMapTable$Copier: javassist.bytecode.ConstPool srcPool>;

        $i4 = r2[i6];

        $r5 = r0.<javassist.bytecode.StackMapTable$Copier: javassist.bytecode.ConstPool destPool>;

        $r4 = r0.<javassist.bytecode.StackMapTable$Copier: java.util.Map classnames>;

        $i5 = virtualinvoke $r6.<javassist.bytecode.ConstPool: int copy(int,javassist.bytecode.ConstPool,java.util.Map)>($i4, $r5, $r4);

        r3[i6] = $i5;

        goto label3;

     label2:
        $i3 = r2[i6];

        r3[i6] = $i3;

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        return r3;
    }
}
