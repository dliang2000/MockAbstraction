public class org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.LocalTimeSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.LocalTimeSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest;

        return 7;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest;

        return class "Ljava/time/LocalTime;";
    }

    protected java.time.LocalTime[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest r0;
        java.time.LocalTime[] $r1;
        java.time.LocalTime $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest;

        $r1 = newarray (java.time.LocalTime)[4];

        $r2 = staticinvoke <java.time.LocalTime: java.time.LocalTime of(int,int,int)>(0, 0, 0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.time.LocalTime: java.time.LocalTime of(int,int,int)>(2, 42, 25);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.time.LocalTime: java.time.LocalTime of(int,int,int)>(14, 15, 59);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.time.LocalTime: java.time.LocalTime of(int,int,int)>(18, 0, 45);

        $r1[3] = $r5;

        return $r1;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest r0;
        java.time.LocalTime[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.LocalTimeSerializerTest: java.time.LocalTime[] getTestData()>();

        return $r1;
    }
}
