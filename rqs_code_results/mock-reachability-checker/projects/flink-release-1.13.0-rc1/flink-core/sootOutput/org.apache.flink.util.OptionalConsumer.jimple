public class org.apache.flink.util.OptionalConsumer extends java.lang.Object
{
    private final java.util.Optional optional;

    private void <init>(java.util.Optional)
    {
        org.apache.flink.util.OptionalConsumer r0;
        java.util.Optional r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.util.OptionalConsumer;

        r1 := @parameter0: java.util.Optional;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.Optional) $r2;

        r0.<org.apache.flink.util.OptionalConsumer: java.util.Optional optional> = $r3;

        return;
    }

    public static org.apache.flink.util.OptionalConsumer of(java.util.Optional)
    {
        java.util.Optional r0;
        org.apache.flink.util.OptionalConsumer $r1;

        r0 := @parameter0: java.util.Optional;

        $r1 = new org.apache.flink.util.OptionalConsumer;

        specialinvoke $r1.<org.apache.flink.util.OptionalConsumer: void <init>(java.util.Optional)>(r0);

        return $r1;
    }

    public org.apache.flink.util.OptionalConsumer ifPresent(java.util.function.Consumer)
    {
        org.apache.flink.util.OptionalConsumer r0;
        java.util.function.Consumer r1;
        java.util.Optional $r2;

        r0 := @this: org.apache.flink.util.OptionalConsumer;

        r1 := @parameter0: java.util.function.Consumer;

        $r2 = r0.<org.apache.flink.util.OptionalConsumer: java.util.Optional optional>;

        virtualinvoke $r2.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(r1);

        return r0;
    }

    public org.apache.flink.util.OptionalConsumer ifNotPresent(org.apache.flink.util.function.ThrowingRunnable) throws java.lang.Exception
    {
        org.apache.flink.util.OptionalConsumer r0;
        org.apache.flink.util.function.ThrowingRunnable r1;
        java.util.Optional $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.util.OptionalConsumer;

        r1 := @parameter0: org.apache.flink.util.function.ThrowingRunnable;

        $r2 = r0.<org.apache.flink.util.OptionalConsumer: java.util.Optional optional>;

        $z0 = virtualinvoke $r2.<java.util.Optional: boolean isPresent()>();

        if $z0 != 0 goto label1;

        interfaceinvoke r1.<org.apache.flink.util.function.ThrowingRunnable: void run()>();

     label1:
        return r0;
    }
}
