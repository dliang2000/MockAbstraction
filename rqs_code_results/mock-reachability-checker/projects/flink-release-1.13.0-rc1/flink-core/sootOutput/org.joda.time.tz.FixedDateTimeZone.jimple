public final class org.joda.time.tz.FixedDateTimeZone extends org.joda.time.DateTimeZone
{
    private static final long serialVersionUID;
    private final java.lang.String iNameKey;
    private final int iWallOffset;
    private final int iStandardOffset;

    public void <init>(java.lang.String, java.lang.String, int, int)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        java.lang.String r1, r2;
        int i0, i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.joda.time.DateTimeZone: void <init>(java.lang.String)>(r1);

        r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String iNameKey> = r2;

        r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset> = i0;

        r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset> = i1;

        return;
    }

    public java.lang.String getNameKey(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long l0;
        java.lang.String $r1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        l0 := @parameter0: long;

        $r1 = r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String iNameKey>;

        return $r1;
    }

    public int getOffset(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long l0;
        int $i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        l0 := @parameter0: long;

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        return $i1;
    }

    public int getStandardOffset(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long l0;
        int $i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        l0 := @parameter0: long;

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        return $i1;
    }

    public int getOffsetFromLocal(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long l0;
        int $i1;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        l0 := @parameter0: long;

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        return $i1;
    }

    public boolean isFixed()
    {
        org.joda.time.tz.FixedDateTimeZone r0;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        return 1;
    }

    public long nextTransition(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long l0;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        l0 := @parameter0: long;

        return l0;
    }

    public long previousTransition(long)
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        long l0;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        l0 := @parameter0: long;

        return l0;
    }

    public java.util.TimeZone toTimeZone()
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        java.lang.String r1, $r3, $r6, $r8;
        int $i0, $i1;
        java.util.SimpleTimeZone $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.util.TimeZone $r9;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 6 goto label2;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("+");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z1 == 0 goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GMT");

        $r6 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r8);

        return $r9;

     label2:
        $r2 = new java.util.SimpleTimeZone;

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        $r3 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        specialinvoke $r2.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>($i1, $r3);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.joda.time.tz.FixedDateTimeZone r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.joda.time.tz.FixedDateTimeZone;

        if $z0 == 0 goto label4;

        r2 = (org.joda.time.tz.FixedDateTimeZone) r1;

        $r3 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $r4 = virtualinvoke r2.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        $i0 = r2.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        if $i1 != $i0 goto label2;

        $i3 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        $i2 = r2.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        if $i3 != $i2 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.joda.time.tz.FixedDateTimeZone r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.joda.time.tz.FixedDateTimeZone;

        $r1 = virtualinvoke r0.<org.joda.time.tz.FixedDateTimeZone: java.lang.String getID()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = r0.<org.joda.time.tz.FixedDateTimeZone: int iStandardOffset>;

        $i2 = 37 * $i1;

        $i5 = $i0 + $i2;

        $i3 = r0.<org.joda.time.tz.FixedDateTimeZone: int iWallOffset>;

        $i4 = 31 * $i3;

        $i6 = $i5 + $i4;

        return $i6;
    }

    public static void <clinit>()
    {
        <org.joda.time.tz.FixedDateTimeZone: long serialVersionUID> = -3513011772763289092L;

        return;
    }
}
