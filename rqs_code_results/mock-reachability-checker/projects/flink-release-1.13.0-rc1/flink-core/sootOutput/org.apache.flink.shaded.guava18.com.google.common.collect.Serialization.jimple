final class org.apache.flink.shaded.guava18.com.google.common.collect.Serialization extends java.lang.Object
{

    private void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Serialization r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.Serialization;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static int readCount(java.io.ObjectInputStream) throws java.io.IOException
    {
        java.io.ObjectInputStream r0;
        int $i0;

        r0 := @parameter0: java.io.ObjectInputStream;

        $i0 = virtualinvoke r0.<java.io.ObjectInputStream: int readInt()>();

        return $i0;
    }

    static void writeMap(java.util.Map, java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.util.Map r0;
        java.io.ObjectOutputStream r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        int $i0;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.io.ObjectOutputStream;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r4 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);

        goto label1;

     label2:
        return;
    }

    static void populateMap(java.util.Map, java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.Map r0;
        java.io.ObjectInputStream r1;
        int i0;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.io.ObjectInputStream;

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Serialization: void populateMap(java.util.Map,java.io.ObjectInputStream,int)>(r0, r1, i0);

        return;
    }

    static void populateMap(java.util.Map, java.io.ObjectInputStream, int) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.util.Map r0;
        java.io.ObjectInputStream r1;
        int i0, i1;
        java.lang.Object r2, r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.io.ObjectInputStream;

        i0 := @parameter2: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r3 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void writeMultiset(org.apache.flink.shaded.guava18.com.google.common.collect.Multiset, java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Multiset r0;
        java.io.ObjectOutputStream r1;
        int i0, $i1;
        java.util.Iterator r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.Multiset$Entry r3;
        java.util.Set $r4, $r5;
        boolean $z0;
        java.lang.Object $r6, $r7;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.Multiset;

        r1 := @parameter1: java.io.ObjectOutputStream;

        $r4 = interfaceinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Multiset: java.util.Set entrySet()>();

        i0 = interfaceinvoke $r4.<java.util.Set: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>(i0);

        $r5 = interfaceinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Multiset: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.flink.shaded.guava18.com.google.common.collect.Multiset$Entry) $r6;

        $r7 = interfaceinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r7);

        $i1 = interfaceinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.collect.Multiset$Entry: int getCount()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);

        goto label1;

     label2:
        return;
    }

    static void populateMultiset(org.apache.flink.shaded.guava18.com.google.common.collect.Multiset, java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Multiset r0;
        java.io.ObjectInputStream r1;
        int i0;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.Multiset;

        r1 := @parameter1: java.io.ObjectInputStream;

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Serialization: void populateMultiset(org.apache.flink.shaded.guava18.com.google.common.collect.Multiset,java.io.ObjectInputStream,int)>(r0, r1, i0);

        return;
    }

    static void populateMultiset(org.apache.flink.shaded.guava18.com.google.common.collect.Multiset, java.io.ObjectInputStream, int) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Multiset r0;
        java.io.ObjectInputStream r1;
        int i0, i1, i3;
        java.lang.Object r2;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.Multiset;

        r1 := @parameter1: java.io.ObjectInputStream;

        i0 := @parameter2: int;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        interfaceinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Multiset: int add(java.lang.Object,int)>(r2, i1);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    static void writeMultimap(org.apache.flink.shaded.guava18.com.google.common.collect.Multimap, java.io.ObjectOutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Multimap r0;
        java.io.ObjectOutputStream r1;
        java.util.Iterator r2, r4;
        java.util.Map$Entry r3;
        java.lang.Object r5, $r9, $r10, $r11, $r13;
        java.util.Map $r6, $r7;
        int $i0, $i1;
        java.util.Set $r8;
        boolean $z0, $z1;
        java.util.Collection $r12, $r14;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.Multimap;

        r1 := @parameter1: java.io.ObjectOutputStream;

        $r6 = interfaceinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Multimap: java.util.Map asMap()>();

        $i0 = interfaceinvoke $r6.<java.util.Map: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i0);

        $r7 = interfaceinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Multimap: java.util.Map asMap()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r10);

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.Collection) $r11;

        $i1 = interfaceinvoke $r12.<java.util.Collection: int size()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeInt(int)>($i1);

        $r13 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.util.Collection) $r13;

        r4 = interfaceinvoke $r14.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r5);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    static void populateMultimap(org.apache.flink.shaded.guava18.com.google.common.collect.Multimap, java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Multimap r0;
        java.io.ObjectInputStream r1;
        int i0;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.Multimap;

        r1 := @parameter1: java.io.ObjectInputStream;

        i0 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Serialization: void populateMultimap(org.apache.flink.shaded.guava18.com.google.common.collect.Multimap,java.io.ObjectInputStream,int)>(r0, r1, i0);

        return;
    }

    static void populateMultimap(org.apache.flink.shaded.guava18.com.google.common.collect.Multimap, java.io.ObjectInputStream, int) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.Multimap r0;
        java.io.ObjectInputStream r1;
        int i0, i1, i2, i3;
        java.lang.Object r2, r4;
        java.util.Collection r3;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.Multimap;

        r1 := @parameter1: java.io.ObjectInputStream;

        i0 := @parameter2: int;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r2 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        r3 = interfaceinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(r2);

        i1 = virtualinvoke r1.<java.io.ObjectInputStream: int readInt()>();

        i3 = 0;

     label2:
        if i3 >= i1 goto label3;

        r4 = virtualinvoke r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        interfaceinvoke r3.<java.util.Collection: boolean add(java.lang.Object)>(r4);

        i3 = i3 + 1;

        goto label2;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    static org.apache.flink.shaded.guava18.com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class, java.lang.String)
    {
        java.lang.Class r0;
        java.lang.String r1;
        org.apache.flink.shaded.guava18.com.google.common.collect.Serialization$FieldSetter $r2;
        java.lang.NoSuchFieldException $r3;
        java.lang.AssertionError $r4;
        java.lang.reflect.Field r5;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

     label1:
        r5 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(r1);

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.collect.Serialization$FieldSetter;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.collect.Serialization$FieldSetter: void <init>(java.lang.reflect.Field,org.apache.flink.shaded.guava18.com.google.common.collect.Serialization$1)>(r5, null);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
    }
}
