public class org.powermock.utils.Asserts extends java.lang.Object
{

    public void <init>()
    {
        org.powermock.utils.Asserts r0;

        r0 := @this: org.powermock.utils.Asserts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void assertNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        return;
    }

    public static void internalAssertNotNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        org.powermock.PowerMockInternalException $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r2 = new org.powermock.PowerMockInternalException;

        specialinvoke $r2.<org.powermock.PowerMockInternalException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        return;
    }
}
