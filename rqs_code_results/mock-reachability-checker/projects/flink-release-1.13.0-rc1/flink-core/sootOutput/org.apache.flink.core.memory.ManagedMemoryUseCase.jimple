public final enum class org.apache.flink.core.memory.ManagedMemoryUseCase extends java.lang.Enum
{
    public static final enum org.apache.flink.core.memory.ManagedMemoryUseCase OPERATOR;
    public static final enum org.apache.flink.core.memory.ManagedMemoryUseCase STATE_BACKEND;
    public static final enum org.apache.flink.core.memory.ManagedMemoryUseCase PYTHON;
    public final org.apache.flink.core.memory.ManagedMemoryUseCase$Scope scope;
    private static final org.apache.flink.core.memory.ManagedMemoryUseCase[] $VALUES;

    public static org.apache.flink.core.memory.ManagedMemoryUseCase[] values()
    {
        org.apache.flink.core.memory.ManagedMemoryUseCase[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.flink.core.memory.ManagedMemoryUseCase[]) $r1;

        return $r2;
    }

    public static org.apache.flink.core.memory.ManagedMemoryUseCase valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        org.apache.flink.core.memory.ManagedMemoryUseCase $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/flink/core/memory/ManagedMemoryUseCase;", r0);

        $r2 = (org.apache.flink.core.memory.ManagedMemoryUseCase) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, org.apache.flink.core.memory.ManagedMemoryUseCase$Scope)
    {
        org.apache.flink.core.memory.ManagedMemoryUseCase r0;
        java.lang.String r1;
        int i0;
        org.apache.flink.core.memory.ManagedMemoryUseCase$Scope r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.core.memory.ManagedMemoryUseCase;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.core.memory.ManagedMemoryUseCase$Scope;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (org.apache.flink.core.memory.ManagedMemoryUseCase$Scope) $r3;

        r0.<org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase$Scope scope> = $r4;

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.core.memory.ManagedMemoryUseCase $r0, $r2, $r4, $r7, $r8, $r9;
        org.apache.flink.core.memory.ManagedMemoryUseCase$Scope $r1, $r3, $r5;
        org.apache.flink.core.memory.ManagedMemoryUseCase[] $r6;

        $r0 = new org.apache.flink.core.memory.ManagedMemoryUseCase;

        $r1 = <org.apache.flink.core.memory.ManagedMemoryUseCase$Scope: org.apache.flink.core.memory.ManagedMemoryUseCase$Scope OPERATOR>;

        specialinvoke $r0.<org.apache.flink.core.memory.ManagedMemoryUseCase: void <init>(java.lang.String,int,org.apache.flink.core.memory.ManagedMemoryUseCase$Scope)>("OPERATOR", 0, $r1);

        <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase OPERATOR> = $r0;

        $r2 = new org.apache.flink.core.memory.ManagedMemoryUseCase;

        $r3 = <org.apache.flink.core.memory.ManagedMemoryUseCase$Scope: org.apache.flink.core.memory.ManagedMemoryUseCase$Scope SLOT>;

        specialinvoke $r2.<org.apache.flink.core.memory.ManagedMemoryUseCase: void <init>(java.lang.String,int,org.apache.flink.core.memory.ManagedMemoryUseCase$Scope)>("STATE_BACKEND", 1, $r3);

        <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase STATE_BACKEND> = $r2;

        $r4 = new org.apache.flink.core.memory.ManagedMemoryUseCase;

        $r5 = <org.apache.flink.core.memory.ManagedMemoryUseCase$Scope: org.apache.flink.core.memory.ManagedMemoryUseCase$Scope SLOT>;

        specialinvoke $r4.<org.apache.flink.core.memory.ManagedMemoryUseCase: void <init>(java.lang.String,int,org.apache.flink.core.memory.ManagedMemoryUseCase$Scope)>("PYTHON", 2, $r5);

        <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase PYTHON> = $r4;

        $r6 = newarray (org.apache.flink.core.memory.ManagedMemoryUseCase)[3];

        $r7 = <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase OPERATOR>;

        $r6[0] = $r7;

        $r8 = <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase STATE_BACKEND>;

        $r6[1] = $r8;

        $r9 = <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase PYTHON>;

        $r6[2] = $r9;

        <org.apache.flink.core.memory.ManagedMemoryUseCase: org.apache.flink.core.memory.ManagedMemoryUseCase[] $VALUES> = $r6;

        return;
    }
}
