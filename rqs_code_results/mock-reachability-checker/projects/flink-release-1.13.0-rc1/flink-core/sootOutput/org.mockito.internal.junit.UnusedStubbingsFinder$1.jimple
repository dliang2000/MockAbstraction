class org.mockito.internal.junit.UnusedStubbingsFinder$1 extends java.lang.Object implements org.mockito.internal.util.collections.ListUtil$Filter
{
    final org.mockito.internal.junit.UnusedStubbingsFinder this$0;

    void <init>(org.mockito.internal.junit.UnusedStubbingsFinder)
    {
        org.mockito.internal.junit.UnusedStubbingsFinder$1 r0;
        org.mockito.internal.junit.UnusedStubbingsFinder r1;

        r0 := @this: org.mockito.internal.junit.UnusedStubbingsFinder$1;

        r1 := @parameter0: org.mockito.internal.junit.UnusedStubbingsFinder;

        r0.<org.mockito.internal.junit.UnusedStubbingsFinder$1: org.mockito.internal.junit.UnusedStubbingsFinder this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isOut(org.mockito.stubbing.Stubbing)
    {
        org.mockito.internal.junit.UnusedStubbingsFinder$1 r0;
        org.mockito.stubbing.Stubbing r1;
        boolean $z0, $z1;

        r0 := @this: org.mockito.internal.junit.UnusedStubbingsFinder$1;

        r1 := @parameter0: org.mockito.stubbing.Stubbing;

        $z0 = staticinvoke <org.mockito.internal.stubbing.UnusedStubbingReporting: boolean shouldBeReported(org.mockito.stubbing.Stubbing)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public volatile boolean isOut(java.lang.Object)
    {
        org.mockito.internal.junit.UnusedStubbingsFinder$1 r0;
        java.lang.Object r1;
        org.mockito.stubbing.Stubbing $r2;
        boolean $z0;

        r0 := @this: org.mockito.internal.junit.UnusedStubbingsFinder$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.mockito.stubbing.Stubbing) r1;

        $z0 = virtualinvoke r0.<org.mockito.internal.junit.UnusedStubbingsFinder$1: boolean isOut(org.mockito.stubbing.Stubbing)>($r2);

        return $z0;
    }
}
