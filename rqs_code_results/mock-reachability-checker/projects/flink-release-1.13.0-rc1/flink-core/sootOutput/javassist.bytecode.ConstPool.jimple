public final class javassist.bytecode.ConstPool extends java.lang.Object
{
    javassist.bytecode.LongVector items;
    int numOfItems;
    int thisClassInfo;
    java.util.Map itemsCache;
    public static final int CONST_Class;
    public static final int CONST_Fieldref;
    public static final int CONST_Methodref;
    public static final int CONST_InterfaceMethodref;
    public static final int CONST_String;
    public static final int CONST_Integer;
    public static final int CONST_Float;
    public static final int CONST_Long;
    public static final int CONST_Double;
    public static final int CONST_NameAndType;
    public static final int CONST_Utf8;
    public static final int CONST_MethodHandle;
    public static final int CONST_MethodType;
    public static final int CONST_InvokeDynamic;
    public static final int CONST_Module;
    public static final int CONST_Package;
    public static final javassist.CtClass THIS;
    public static final int REF_getField;
    public static final int REF_getStatic;
    public static final int REF_putField;
    public static final int REF_putStatic;
    public static final int REF_invokeVirtual;
    public static final int REF_invokeStatic;
    public static final int REF_invokeSpecial;
    public static final int REF_newInvokeSpecial;
    public static final int REF_invokeInterface;

    public void <init>(java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1;
        javassist.bytecode.LongVector $r2;
        int $i1;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new javassist.bytecode.LongVector;

        specialinvoke $r2.<javassist.bytecode.LongVector: void <init>()>();

        r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items> = $r2;

        r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache> = null;

        r0.<javassist.bytecode.ConstPool: int numOfItems> = 0;

        specialinvoke r0.<javassist.bytecode.ConstPool: int addItem0(javassist.bytecode.ConstInfo)>(null);

        $i1 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>(r1);

        r0.<javassist.bytecode.ConstPool: int thisClassInfo> = $i1;

        return;
    }

    public void <init>(java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.ConstPool r0;
        java.io.DataInputStream r1;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.io.DataInputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache> = null;

        r0.<javassist.bytecode.ConstPool: int thisClassInfo> = 0;

        specialinvoke r0.<javassist.bytecode.ConstPool: void read(java.io.DataInputStream)>(r1);

        return;
    }

    void prune()
    {
        javassist.bytecode.ConstPool r0;

        r0 := @this: javassist.bytecode.ConstPool;

        r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache> = null;

        return;
    }

    public int getSize()
    {
        javassist.bytecode.ConstPool r0;
        int $i0;

        r0 := @this: javassist.bytecode.ConstPool;

        $i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        return $i0;
    }

    public java.lang.String getClassName()
    {
        javassist.bytecode.ConstPool r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        $i0 = r0.<javassist.bytecode.ConstPool: int thisClassInfo>;

        $r1 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i0);

        return $r1;
    }

    public int getThisClassInfo()
    {
        javassist.bytecode.ConstPool r0;
        int $i0;

        r0 := @this: javassist.bytecode.ConstPool;

        $i0 = r0.<javassist.bytecode.ConstPool: int thisClassInfo>;

        return $i0;
    }

    void setThisClassInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        r0.<javassist.bytecode.ConstPool: int thisClassInfo> = i0;

        return;
    }

    javassist.bytecode.ConstInfo getItem(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0;
        javassist.bytecode.LongVector $r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r1 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        $r2 = virtualinvoke $r1.<javassist.bytecode.LongVector: javassist.bytecode.ConstInfo elementAt(int)>(i0);

        return $r2;
    }

    public int getTag(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.ConstInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        $i1 = virtualinvoke $r1.<javassist.bytecode.ConstInfo: int getTag()>();

        return $i1;
    }

    public java.lang.String getClassInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.ClassInfo r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3, $r4;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.ClassInfo) $r2;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.ClassInfo: int name>;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        $r4 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJavaName(java.lang.String)>($r3);

        return $r4;
    }

    public java.lang.String getClassInfoByDescriptor(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.ClassInfo r1;
        java.lang.String r2, $r4;
        javassist.bytecode.ConstInfo $r3;
        char $c2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.ClassInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.ClassInfo: int name>;

        r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c2 != 91 goto label2;

        return r2;

     label2:
        $r4 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String of(java.lang.String)>(r2);

        return $r4;
    }

    public int getNameAndTypeName(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.NameAndTypeInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.NameAndTypeInfo) $r2;

        $i1 = r1.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        return $i1;
    }

    public int getNameAndTypeDescriptor(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.NameAndTypeInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.NameAndTypeInfo) $r2;

        $i1 = r1.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        return $i1;
    }

    public int getMemberClass(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.MemberrefInfo: int classIndex>;

        return $i1;
    }

    public int getMemberNameAndType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        return $i1;
    }

    public int getFieldrefClass(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.FieldrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.FieldrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.FieldrefInfo: int classIndex>;

        return $i1;
    }

    public java.lang.String getFieldrefClassName(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.FieldrefInfo r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.FieldrefInfo) $r2;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.FieldrefInfo: int classIndex>;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i1);

        return $r3;
    }

    public int getFieldrefNameAndType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.FieldrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.FieldrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.FieldrefInfo: int nameAndTypeIndex>;

        return $i1;
    }

    public java.lang.String getFieldrefName(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.FieldrefInfo r1;
        javassist.bytecode.NameAndTypeInfo r2;
        javassist.bytecode.ConstInfo $r3, $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.FieldrefInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.FieldrefInfo: int nameAndTypeIndex>;

        $r4 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r2 = (javassist.bytecode.NameAndTypeInfo) $r4;

        if r2 != null goto label2;

        return null;

     label2:
        $i2 = r2.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        return $r5;
    }

    public java.lang.String getFieldrefType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.FieldrefInfo r1;
        javassist.bytecode.NameAndTypeInfo r2;
        javassist.bytecode.ConstInfo $r3, $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.FieldrefInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.FieldrefInfo: int nameAndTypeIndex>;

        $r4 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r2 = (javassist.bytecode.NameAndTypeInfo) $r4;

        if r2 != null goto label2;

        return null;

     label2:
        $i2 = r2.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        return $r5;
    }

    public int getMethodrefClass(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.MemberrefInfo: int classIndex>;

        return $i1;
    }

    public java.lang.String getMethodrefClassName(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.MemberrefInfo: int classIndex>;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i1);

        return $r3;
    }

    public int getMethodrefNameAndType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        return $i1;
    }

    public java.lang.String getMethodrefName(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.NameAndTypeInfo r2;
        javassist.bytecode.ConstInfo $r3, $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        $r4 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r2 = (javassist.bytecode.NameAndTypeInfo) $r4;

        if r2 != null goto label2;

        return null;

     label2:
        $i2 = r2.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        return $r5;
    }

    public java.lang.String getMethodrefType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.NameAndTypeInfo r2;
        javassist.bytecode.ConstInfo $r3, $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        $r4 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r2 = (javassist.bytecode.NameAndTypeInfo) $r4;

        if r2 != null goto label2;

        return null;

     label2:
        $i2 = r2.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        return $r5;
    }

    public int getInterfaceMethodrefClass(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.MemberrefInfo: int classIndex>;

        return $i1;
    }

    public java.lang.String getInterfaceMethodrefClassName(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.MemberrefInfo: int classIndex>;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i1);

        return $r3;
    }

    public int getInterfaceMethodrefNameAndType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r2;

        $i1 = r1.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        return $i1;
    }

    public java.lang.String getInterfaceMethodrefName(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.NameAndTypeInfo r2;
        javassist.bytecode.ConstInfo $r3, $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        $r4 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r2 = (javassist.bytecode.NameAndTypeInfo) $r4;

        if r2 != null goto label2;

        return null;

     label2:
        $i2 = r2.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        return $r5;
    }

    public java.lang.String getInterfaceMethodrefType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.MemberrefInfo r1;
        javassist.bytecode.NameAndTypeInfo r2;
        javassist.bytecode.ConstInfo $r3, $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MemberrefInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        $r4 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r2 = (javassist.bytecode.NameAndTypeInfo) $r4;

        if r2 != null goto label2;

        return null;

     label2:
        $i2 = r2.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        return $r5;
    }

    public java.lang.Object getLdcValue(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i2;
        javassist.bytecode.ConstInfo r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0;
        long $l1;
        float $f0;
        java.io.Serializable r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r2 = null;

        $z0 = r1 instanceof javassist.bytecode.StringInfo;

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getStringInfo(int)>(i0);

        goto label5;

     label1:
        $z1 = r1 instanceof javassist.bytecode.FloatInfo;

        if $z1 == 0 goto label2;

        $f0 = virtualinvoke r0.<javassist.bytecode.ConstPool: float getFloatInfo(int)>(i0);

        r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        goto label5;

     label2:
        $z2 = r1 instanceof javassist.bytecode.IntegerInfo;

        if $z2 == 0 goto label3;

        $i2 = virtualinvoke r0.<javassist.bytecode.ConstPool: int getIntegerInfo(int)>(i0);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        goto label5;

     label3:
        $z3 = r1 instanceof javassist.bytecode.LongInfo;

        if $z3 == 0 goto label4;

        $l1 = virtualinvoke r0.<javassist.bytecode.ConstPool: long getLongInfo(int)>(i0);

        r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        goto label5;

     label4:
        $z4 = r1 instanceof javassist.bytecode.DoubleInfo;

        if $z4 == 0 goto label5;

        $d0 = virtualinvoke r0.<javassist.bytecode.ConstPool: double getDoubleInfo(int)>(i0);

        r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label5:
        return r2;
    }

    public int getIntegerInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.IntegerInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.IntegerInfo) $r2;

        $i1 = r1.<javassist.bytecode.IntegerInfo: int value>;

        return $i1;
    }

    public float getFloatInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0;
        javassist.bytecode.FloatInfo r1;
        javassist.bytecode.ConstInfo $r2;
        float $f0;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.FloatInfo) $r2;

        $f0 = r1.<javassist.bytecode.FloatInfo: float value>;

        return $f0;
    }

    public long getLongInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0;
        javassist.bytecode.LongInfo r1;
        javassist.bytecode.ConstInfo $r2;
        long $l1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.LongInfo) $r2;

        $l1 = r1.<javassist.bytecode.LongInfo: long value>;

        return $l1;
    }

    public double getDoubleInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0;
        javassist.bytecode.DoubleInfo r1;
        javassist.bytecode.ConstInfo $r2;
        double $d0;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.DoubleInfo) $r2;

        $d0 = r1.<javassist.bytecode.DoubleInfo: double value>;

        return $d0;
    }

    public java.lang.String getStringInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.StringInfo r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.StringInfo) $r2;

        $i1 = r1.<javassist.bytecode.StringInfo: int string>;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        return $r3;
    }

    public java.lang.String getUtf8Info(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0;
        javassist.bytecode.Utf8Info r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.Utf8Info) $r2;

        $r3 = r1.<javassist.bytecode.Utf8Info: java.lang.String string>;

        return $r3;
    }

    public int getMethodHandleKind(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MethodHandleInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MethodHandleInfo) $r2;

        $i1 = r1.<javassist.bytecode.MethodHandleInfo: int refKind>;

        return $i1;
    }

    public int getMethodHandleIndex(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MethodHandleInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MethodHandleInfo) $r2;

        $i1 = r1.<javassist.bytecode.MethodHandleInfo: int refIndex>;

        return $i1;
    }

    public int getMethodTypeInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.MethodTypeInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.MethodTypeInfo) $r2;

        $i1 = r1.<javassist.bytecode.MethodTypeInfo: int descriptor>;

        return $i1;
    }

    public int getInvokeDynamicBootstrap(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.InvokeDynamicInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.InvokeDynamicInfo) $r2;

        $i1 = r1.<javassist.bytecode.InvokeDynamicInfo: int bootstrap>;

        return $i1;
    }

    public int getInvokeDynamicNameAndType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.InvokeDynamicInfo r1;
        javassist.bytecode.ConstInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.InvokeDynamicInfo) $r2;

        $i1 = r1.<javassist.bytecode.InvokeDynamicInfo: int nameAndType>;

        return $i1;
    }

    public java.lang.String getInvokeDynamicType(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.InvokeDynamicInfo r1;
        javassist.bytecode.NameAndTypeInfo r2;
        javassist.bytecode.ConstInfo $r3, $r4;
        java.lang.String $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.InvokeDynamicInfo) $r3;

        if r1 != null goto label1;

        return null;

     label1:
        $i1 = r1.<javassist.bytecode.InvokeDynamicInfo: int nameAndType>;

        $r4 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r2 = (javassist.bytecode.NameAndTypeInfo) $r4;

        if r2 != null goto label2;

        return null;

     label2:
        $i2 = r2.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        return $r5;
    }

    public java.lang.String getModuleInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.ModuleInfo r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.ModuleInfo) $r2;

        $i1 = r1.<javassist.bytecode.ModuleInfo: int name>;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        return $r3;
    }

    public java.lang.String getPackageInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1;
        javassist.bytecode.PackageInfo r1;
        javassist.bytecode.ConstInfo $r2;
        java.lang.String $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r2 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r1 = (javassist.bytecode.PackageInfo) $r2;

        $i1 = r1.<javassist.bytecode.PackageInfo: int name>;

        $r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i1);

        return $r3;
    }

    public int isConstructor(java.lang.String, int)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<javassist.bytecode.ConstPool: int isMember(java.lang.String,java.lang.String,int)>(r1, "<init>", i0);

        return $i1;
    }

    public int isMember(java.lang.String, java.lang.String, int)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1, r2, $r6, $r8;
        int i0, $i1, $i2, $i3, $i4;
        javassist.bytecode.MemberrefInfo r3;
        javassist.bytecode.NameAndTypeInfo r4;
        javassist.bytecode.ConstInfo $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r3 = (javassist.bytecode.MemberrefInfo) $r5;

        $i1 = r3.<javassist.bytecode.MemberrefInfo: int classIndex>;

        $r6 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i1);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $i2 = r3.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        $r7 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i2);

        r4 = (javassist.bytecode.NameAndTypeInfo) $r7;

        $i3 = r4.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        $r8 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i3);

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $i4 = r4.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        return $i4;

     label1:
        return 0;
    }

    public java.lang.String eqMember(java.lang.String, java.lang.String, int)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1, r2, $r7, $r8, $r9;
        int i0, $i1, $i2, $i3, $i4;
        javassist.bytecode.MemberrefInfo r3;
        javassist.bytecode.NameAndTypeInfo r4;
        javassist.bytecode.ConstInfo $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        r3 = (javassist.bytecode.MemberrefInfo) $r5;

        $i1 = r3.<javassist.bytecode.MemberrefInfo: int nameAndTypeIndex>;

        $r6 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>($i1);

        r4 = (javassist.bytecode.NameAndTypeInfo) $r6;

        $i2 = r4.<javassist.bytecode.NameAndTypeInfo: int memberName>;

        $r7 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i2);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $i3 = r4.<javassist.bytecode.NameAndTypeInfo: int typeDescriptor>;

        $r8 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getUtf8Info(int)>($i3);

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        $i4 = r3.<javassist.bytecode.MemberrefInfo: int classIndex>;

        $r9 = virtualinvoke r0.<javassist.bytecode.ConstPool: java.lang.String getClassInfo(int)>($i4);

        return $r9;

     label1:
        return null;
    }

    private int addItem0(javassist.bytecode.ConstInfo)
    {
        javassist.bytecode.ConstPool r0;
        javassist.bytecode.ConstInfo r1;
        javassist.bytecode.LongVector $r2;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: javassist.bytecode.ConstInfo;

        $r2 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        virtualinvoke $r2.<javassist.bytecode.LongVector: void addElement(javassist.bytecode.ConstInfo)>(r1);

        $i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        $i1 = $i0 + 1;

        r0.<javassist.bytecode.ConstPool: int numOfItems> = $i1;

        return $i0;
    }

    private int addItem(javassist.bytecode.ConstInfo)
    {
        javassist.bytecode.ConstPool r0;
        javassist.bytecode.ConstInfo r1, r2;
        java.util.Map $r3, $r4, $r7, $r10;
        java.lang.Object $r5;
        javassist.bytecode.LongVector $r6, $r9;
        int $i0, $i1, $i2;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: javassist.bytecode.ConstInfo;

        $r3 = r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache>;

        if $r3 != null goto label1;

        $r9 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        $r10 = staticinvoke <javassist.bytecode.ConstPool: java.util.Map makeItemsCache(javassist.bytecode.LongVector)>($r9);

        r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache> = $r10;

     label1:
        $r4 = r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (javassist.bytecode.ConstInfo) $r5;

        if r2 == null goto label2;

        $i2 = r2.<javassist.bytecode.ConstInfo: int index>;

        return $i2;

     label2:
        $r6 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        virtualinvoke $r6.<javassist.bytecode.LongVector: void addElement(javassist.bytecode.ConstInfo)>(r1);

        $r7 = r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r1);

        $i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        $i1 = $i0 + 1;

        r0.<javassist.bytecode.ConstPool: int numOfItems> = $i1;

        return $i0;
    }

    public int copy(int, javassist.bytecode.ConstPool, java.util.Map)
    {
        javassist.bytecode.ConstPool r0, r1;
        int i0, $i1;
        java.util.Map r2;
        javassist.bytecode.ConstInfo r3;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        r1 := @parameter1: javassist.bytecode.ConstPool;

        r2 := @parameter2: java.util.Map;

        if i0 != 0 goto label1;

        return 0;

     label1:
        r3 = virtualinvoke r0.<javassist.bytecode.ConstPool: javassist.bytecode.ConstInfo getItem(int)>(i0);

        $i1 = virtualinvoke r3.<javassist.bytecode.ConstInfo: int copy(javassist.bytecode.ConstPool,javassist.bytecode.ConstPool,java.util.Map)>(r0, r1, r2);

        return $i1;
    }

    int addConstInfoPadding()
    {
        javassist.bytecode.ConstPool r0;
        javassist.bytecode.ConstInfoPadding $r1;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.ConstPool;

        $r1 = new javassist.bytecode.ConstInfoPadding;

        $i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.ConstInfoPadding: void <init>(int)>($i0);

        $i1 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem0(javassist.bytecode.ConstInfo)>($r1);

        return $i1;
    }

    public int addClassInfo(javassist.CtClass)
    {
        javassist.bytecode.ConstPool r0;
        javassist.CtClass r1, $r2;
        boolean $z0;
        java.lang.String $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: javassist.CtClass;

        $r2 = <javassist.bytecode.ConstPool: javassist.CtClass THIS>;

        if r1 != $r2 goto label1;

        $i2 = r0.<javassist.bytecode.ConstPool: int thisClassInfo>;

        return $i2;

     label1:
        $z0 = virtualinvoke r1.<javassist.CtClass: boolean isArray()>();

        if $z0 != 0 goto label2;

        $r4 = virtualinvoke r1.<javassist.CtClass: java.lang.String getName()>();

        $i1 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>($r4);

        return $i1;

     label2:
        $r3 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJvmName(javassist.CtClass)>(r1);

        $i0 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>($r3);

        return $i0;
    }

    public int addClassInfo(java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1, $r2;
        int i0, $i1, $i2;
        javassist.bytecode.ClassInfo $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String toJvmName(java.lang.String)>(r1);

        i0 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>($r2);

        $r3 = new javassist.bytecode.ClassInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r3.<javassist.bytecode.ClassInfo: void <init>(int,int)>(i0, $i1);

        $i2 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r3);

        return $i2;
    }

    public int addNameAndTypeInfo(java.lang.String, java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r1);

        $i1 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r2);

        $i2 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addNameAndTypeInfo(int,int)>($i0, $i1);

        return $i2;
    }

    public int addNameAndTypeInfo(int, int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2, $i3;
        javassist.bytecode.NameAndTypeInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new javassist.bytecode.NameAndTypeInfo;

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.NameAndTypeInfo: void <init>(int,int,int)>(i0, i1, $i2);

        $i3 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i3;
    }

    public int addFieldrefInfo(int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2;
        java.lang.String r1, r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addNameAndTypeInfo(java.lang.String,java.lang.String)>(r1, r2);

        $i2 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addFieldrefInfo(int,int)>(i0, i1);

        return $i2;
    }

    public int addFieldrefInfo(int, int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2, $i3;
        javassist.bytecode.FieldrefInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new javassist.bytecode.FieldrefInfo;

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.FieldrefInfo: void <init>(int,int,int)>(i0, i1, $i2);

        $i3 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i3;
    }

    public int addMethodrefInfo(int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2;
        java.lang.String r1, r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addNameAndTypeInfo(java.lang.String,java.lang.String)>(r1, r2);

        $i2 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addMethodrefInfo(int,int)>(i0, i1);

        return $i2;
    }

    public int addMethodrefInfo(int, int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2, $i3;
        javassist.bytecode.MethodrefInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new javassist.bytecode.MethodrefInfo;

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.MethodrefInfo: void <init>(int,int,int)>(i0, i1, $i2);

        $i3 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i3;
    }

    public int addInterfaceMethodrefInfo(int, java.lang.String, java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2;
        java.lang.String r1, r2;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        i1 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addNameAndTypeInfo(java.lang.String,java.lang.String)>(r1, r2);

        $i2 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addInterfaceMethodrefInfo(int,int)>(i0, i1);

        return $i2;
    }

    public int addInterfaceMethodrefInfo(int, int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2, $i3;
        javassist.bytecode.InterfaceMethodrefInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new javassist.bytecode.InterfaceMethodrefInfo;

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.InterfaceMethodrefInfo: void <init>(int,int,int)>(i0, i1, $i2);

        $i3 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i3;
    }

    public int addStringInfo(java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1;
        int i0, $i1, $i2;
        javassist.bytecode.StringInfo $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<javassist.bytecode.ConstPool: int addUtf8Info(java.lang.String)>(r1);

        $r2 = new javassist.bytecode.StringInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r2.<javassist.bytecode.StringInfo: void <init>(int,int)>(i0, $i1);

        $i2 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r2);

        return $i2;
    }

    public int addIntegerInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.IntegerInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r1 = new javassist.bytecode.IntegerInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.IntegerInfo: void <init>(int,int)>(i0, $i1);

        $i2 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i2;
    }

    public int addFloatInfo(float)
    {
        javassist.bytecode.ConstPool r0;
        float f0;
        javassist.bytecode.FloatInfo $r1;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.ConstPool;

        f0 := @parameter0: float;

        $r1 = new javassist.bytecode.FloatInfo;

        $i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.FloatInfo: void <init>(float,int)>(f0, $i0);

        $i1 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i1;
    }

    public int addLongInfo(long)
    {
        javassist.bytecode.ConstPool r0;
        long l0;
        int i1, $i2, $i3, $i4;
        javassist.bytecode.LongInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        l0 := @parameter0: long;

        $r1 = new javassist.bytecode.LongInfo;

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.LongInfo: void <init>(long,int)>(l0, $i2);

        i1 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        $i3 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        $i4 = $i3 - 1;

        if i1 != $i4 goto label1;

        virtualinvoke r0.<javassist.bytecode.ConstPool: int addConstInfoPadding()>();

     label1:
        return i1;
    }

    public int addDoubleInfo(double)
    {
        javassist.bytecode.ConstPool r0;
        double d0;
        int i0, $i1, $i2, $i3;
        javassist.bytecode.DoubleInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        d0 := @parameter0: double;

        $r1 = new javassist.bytecode.DoubleInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.DoubleInfo: void <init>(double,int)>(d0, $i1);

        i0 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        $i3 = $i2 - 1;

        if i0 != $i3 goto label1;

        virtualinvoke r0.<javassist.bytecode.ConstPool: int addConstInfoPadding()>();

     label1:
        return i0;
    }

    public int addUtf8Info(java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1;
        javassist.bytecode.Utf8Info $r2;
        int $i0, $i1;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        $r2 = new javassist.bytecode.Utf8Info;

        $i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r2.<javassist.bytecode.Utf8Info: void <init>(java.lang.String,int)>(r1, $i0);

        $i1 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r2);

        return $i1;
    }

    public int addMethodHandleInfo(int, int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2, $i3;
        javassist.bytecode.MethodHandleInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new javassist.bytecode.MethodHandleInfo;

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.MethodHandleInfo: void <init>(int,int,int)>(i0, i1, $i2);

        $i3 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i3;
    }

    public int addMethodTypeInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.MethodTypeInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r1 = new javassist.bytecode.MethodTypeInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.MethodTypeInfo: void <init>(int,int)>(i0, $i1);

        $i2 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i2;
    }

    public int addInvokeDynamicInfo(int, int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, i1, $i2, $i3;
        javassist.bytecode.InvokeDynamicInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new javassist.bytecode.InvokeDynamicInfo;

        $i2 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.InvokeDynamicInfo: void <init>(int,int,int)>(i0, i1, $i2);

        $i3 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i3;
    }

    public int addModuleInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.ModuleInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r1 = new javassist.bytecode.ModuleInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.ModuleInfo: void <init>(int,int)>(i0, $i1);

        $i2 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i2;
    }

    public int addPackageInfo(int)
    {
        javassist.bytecode.ConstPool r0;
        int i0, $i1, $i2;
        javassist.bytecode.PackageInfo $r1;

        r0 := @this: javassist.bytecode.ConstPool;

        i0 := @parameter0: int;

        $r1 = new javassist.bytecode.PackageInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r1.<javassist.bytecode.PackageInfo: void <init>(int,int)>(i0, $i1);

        $i2 = specialinvoke r0.<javassist.bytecode.ConstPool: int addItem(javassist.bytecode.ConstInfo)>($r1);

        return $i2;
    }

    public java.util.Set getClassNames()
    {
        javassist.bytecode.ConstPool r0;
        javassist.bytecode.LongVector r2;
        int i0, i1;
        java.lang.String r3;
        java.util.HashSet $r4;
        javassist.bytecode.ConstInfo $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r2 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        i1 = 1;

     label1:
        if i1 >= i0 goto label3;

        $r5 = virtualinvoke r2.<javassist.bytecode.LongVector: javassist.bytecode.ConstInfo elementAt(int)>(i1);

        r3 = virtualinvoke $r5.<javassist.bytecode.ConstInfo: java.lang.String getClassName(javassist.bytecode.ConstPool)>(r0);

        if r3 == null goto label2;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r4;
    }

    public void renameClass(java.lang.String, java.lang.String)
    {
        javassist.bytecode.ConstPool r0;
        java.lang.String r1, r2;
        javassist.bytecode.LongVector r3;
        int i0, i1;
        javassist.bytecode.ConstInfo r4;
        java.util.Map $r5;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        i1 = 1;

     label1:
        if i1 >= i0 goto label2;

        r4 = virtualinvoke r3.<javassist.bytecode.LongVector: javassist.bytecode.ConstInfo elementAt(int)>(i1);

        $r5 = r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache>;

        virtualinvoke r4.<javassist.bytecode.ConstInfo: void renameClass(javassist.bytecode.ConstPool,java.lang.String,java.lang.String,java.util.Map)>(r0, r1, r2, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void renameClass(java.util.Map)
    {
        javassist.bytecode.ConstPool r0;
        java.util.Map r1, $r4;
        javassist.bytecode.LongVector r2;
        int i0, i1;
        javassist.bytecode.ConstInfo r3;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.util.Map;

        r2 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        i1 = 1;

     label1:
        if i1 >= i0 goto label2;

        r3 = virtualinvoke r2.<javassist.bytecode.LongVector: javassist.bytecode.ConstInfo elementAt(int)>(i1);

        $r4 = r0.<javassist.bytecode.ConstPool: java.util.Map itemsCache>;

        virtualinvoke r3.<javassist.bytecode.ConstInfo: void renameClass(javassist.bytecode.ConstPool,java.util.Map,java.util.Map)>(r0, r1, $r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void read(java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.ConstPool r0;
        java.io.DataInputStream r1;
        int i0, i3;
        javassist.bytecode.LongVector $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.io.DataInputStream;

        i3 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedShort()>();

        $r2 = new javassist.bytecode.LongVector;

        specialinvoke $r2.<javassist.bytecode.LongVector: void <init>(int)>(i3);

        r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items> = $r2;

        r0.<javassist.bytecode.ConstPool: int numOfItems> = 0;

        specialinvoke r0.<javassist.bytecode.ConstPool: int addItem0(javassist.bytecode.ConstInfo)>(null);

     label1:
        i3 = i3 + -1;

        if i3 <= 0 goto label4;

        i0 = specialinvoke r0.<javassist.bytecode.ConstPool: int readOne(java.io.DataInputStream)>(r1);

        if i0 == 5 goto label2;

        if i0 != 6 goto label3;

     label2:
        virtualinvoke r0.<javassist.bytecode.ConstPool: int addConstInfoPadding()>();

        i3 = i3 + -1;

     label3:
        goto label1;

     label4:
        return;
    }

    private static java.util.Map makeItemsCache(javassist.bytecode.LongVector)
    {
        javassist.bytecode.LongVector r0;
        javassist.bytecode.ConstInfo r2;
        java.util.HashMap $r3;
        int $i0, i1;

        r0 := @parameter0: javassist.bytecode.LongVector;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        i1 = 1;

     label1:
        $i0 = i1;

        i1 = i1 + 1;

        r2 = virtualinvoke r0.<javassist.bytecode.LongVector: javassist.bytecode.ConstInfo elementAt(int)>($i0);

        if r2 != null goto label2;

        goto label3;

     label2:
        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r2);

        goto label1;

     label3:
        return $r3;
    }

    private int readOne(java.io.DataInputStream) throws java.io.IOException
    {
        javassist.bytecode.ConstPool r0;
        java.io.DataInputStream r1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        javassist.bytecode.PackageInfo $r2;
        javassist.bytecode.ModuleInfo $r3;
        javassist.bytecode.InvokeDynamicInfo $r4;
        javassist.bytecode.MethodTypeInfo $r5;
        javassist.bytecode.MethodHandleInfo $r6;
        javassist.bytecode.NameAndTypeInfo $r7;
        javassist.bytecode.InterfaceMethodrefInfo $r8;
        javassist.bytecode.MethodrefInfo $r9;
        javassist.bytecode.FieldrefInfo $r10;
        javassist.bytecode.StringInfo $r11;
        javassist.bytecode.ClassInfo $r12;
        javassist.bytecode.DoubleInfo $r13;
        javassist.bytecode.LongInfo $r14;
        javassist.bytecode.FloatInfo $r15;
        javassist.bytecode.IntegerInfo $r16;
        javassist.bytecode.Utf8Info $r17;
        java.io.IOException $r18;
        java.lang.StringBuilder $r19, $r20, $r21, $r22, $r23;
        java.lang.String $r24;
        javassist.bytecode.ConstInfo r25;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.io.DataInputStream;

        i0 = virtualinvoke r1.<java.io.DataInputStream: int readUnsignedByte()>();

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label17;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            case 9: goto label08;
            case 10: goto label09;
            case 11: goto label10;
            case 12: goto label11;
            case 13: goto label17;
            case 14: goto label17;
            case 15: goto label12;
            case 16: goto label13;
            case 17: goto label17;
            case 18: goto label14;
            case 19: goto label15;
            case 20: goto label16;
            default: goto label17;
        };

     label01:
        $r17 = new javassist.bytecode.Utf8Info;

        $i17 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r17.<javassist.bytecode.Utf8Info: void <init>(java.io.DataInputStream,int)>(r1, $i17);

        r25 = $r17;

        goto label18;

     label02:
        $r16 = new javassist.bytecode.IntegerInfo;

        $i16 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r16.<javassist.bytecode.IntegerInfo: void <init>(java.io.DataInputStream,int)>(r1, $i16);

        r25 = $r16;

        goto label18;

     label03:
        $r15 = new javassist.bytecode.FloatInfo;

        $i15 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r15.<javassist.bytecode.FloatInfo: void <init>(java.io.DataInputStream,int)>(r1, $i15);

        r25 = $r15;

        goto label18;

     label04:
        $r14 = new javassist.bytecode.LongInfo;

        $i14 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r14.<javassist.bytecode.LongInfo: void <init>(java.io.DataInputStream,int)>(r1, $i14);

        r25 = $r14;

        goto label18;

     label05:
        $r13 = new javassist.bytecode.DoubleInfo;

        $i13 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r13.<javassist.bytecode.DoubleInfo: void <init>(java.io.DataInputStream,int)>(r1, $i13);

        r25 = $r13;

        goto label18;

     label06:
        $r12 = new javassist.bytecode.ClassInfo;

        $i12 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r12.<javassist.bytecode.ClassInfo: void <init>(java.io.DataInputStream,int)>(r1, $i12);

        r25 = $r12;

        goto label18;

     label07:
        $r11 = new javassist.bytecode.StringInfo;

        $i11 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r11.<javassist.bytecode.StringInfo: void <init>(java.io.DataInputStream,int)>(r1, $i11);

        r25 = $r11;

        goto label18;

     label08:
        $r10 = new javassist.bytecode.FieldrefInfo;

        $i10 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r10.<javassist.bytecode.FieldrefInfo: void <init>(java.io.DataInputStream,int)>(r1, $i10);

        r25 = $r10;

        goto label18;

     label09:
        $r9 = new javassist.bytecode.MethodrefInfo;

        $i9 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r9.<javassist.bytecode.MethodrefInfo: void <init>(java.io.DataInputStream,int)>(r1, $i9);

        r25 = $r9;

        goto label18;

     label10:
        $r8 = new javassist.bytecode.InterfaceMethodrefInfo;

        $i8 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r8.<javassist.bytecode.InterfaceMethodrefInfo: void <init>(java.io.DataInputStream,int)>(r1, $i8);

        r25 = $r8;

        goto label18;

     label11:
        $r7 = new javassist.bytecode.NameAndTypeInfo;

        $i7 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r7.<javassist.bytecode.NameAndTypeInfo: void <init>(java.io.DataInputStream,int)>(r1, $i7);

        r25 = $r7;

        goto label18;

     label12:
        $r6 = new javassist.bytecode.MethodHandleInfo;

        $i6 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r6.<javassist.bytecode.MethodHandleInfo: void <init>(java.io.DataInputStream,int)>(r1, $i6);

        r25 = $r6;

        goto label18;

     label13:
        $r5 = new javassist.bytecode.MethodTypeInfo;

        $i5 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r5.<javassist.bytecode.MethodTypeInfo: void <init>(java.io.DataInputStream,int)>(r1, $i5);

        r25 = $r5;

        goto label18;

     label14:
        $r4 = new javassist.bytecode.InvokeDynamicInfo;

        $i4 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r4.<javassist.bytecode.InvokeDynamicInfo: void <init>(java.io.DataInputStream,int)>(r1, $i4);

        r25 = $r4;

        goto label18;

     label15:
        $r3 = new javassist.bytecode.ModuleInfo;

        $i3 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r3.<javassist.bytecode.ModuleInfo: void <init>(java.io.DataInputStream,int)>(r1, $i3);

        r25 = $r3;

        goto label18;

     label16:
        $r2 = new javassist.bytecode.PackageInfo;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        specialinvoke $r2.<javassist.bytecode.PackageInfo: void <init>(java.io.DataInputStream,int)>(r1, $i1);

        r25 = $r2;

        goto label18;

     label17:
        $r18 = new java.io.IOException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid constant type: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $i18 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r24);

        throw $r18;

     label18:
        specialinvoke r0.<javassist.bytecode.ConstPool: int addItem0(javassist.bytecode.ConstInfo)>(r25);

        return i0;
    }

    public void write(java.io.DataOutputStream) throws java.io.IOException
    {
        javassist.bytecode.ConstPool r0;
        java.io.DataOutputStream r1;
        javassist.bytecode.LongVector r2;
        int i0, $i1, i2;
        javassist.bytecode.ConstInfo $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.io.DataOutputStream;

        $i1 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        virtualinvoke r1.<java.io.DataOutputStream: void writeShort(int)>($i1);

        r2 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        i2 = 1;

     label1:
        if i2 >= i0 goto label2;

        $r3 = virtualinvoke r2.<javassist.bytecode.LongVector: javassist.bytecode.ConstInfo elementAt(int)>(i2);

        virtualinvoke $r3.<javassist.bytecode.ConstInfo: void write(java.io.DataOutputStream)>(r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }

    public void print()
    {
        javassist.bytecode.ConstPool r0;
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;

        r0 := @this: javassist.bytecode.ConstPool;

        $r1 = new java.io.PrintWriter;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r2, 1);

        virtualinvoke r0.<javassist.bytecode.ConstPool: void print(java.io.PrintWriter)>($r1);

        return;
    }

    public void print(java.io.PrintWriter)
    {
        javassist.bytecode.ConstPool r0;
        java.io.PrintWriter r1;
        int i0, i1;
        javassist.bytecode.LongVector $r2;
        javassist.bytecode.ConstInfo $r3;

        r0 := @this: javassist.bytecode.ConstPool;

        r1 := @parameter0: java.io.PrintWriter;

        i0 = r0.<javassist.bytecode.ConstPool: int numOfItems>;

        i1 = 1;

     label1:
        if i1 >= i0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r2 = r0.<javassist.bytecode.ConstPool: javassist.bytecode.LongVector items>;

        $r3 = virtualinvoke $r2.<javassist.bytecode.LongVector: javassist.bytecode.ConstInfo elementAt(int)>(i1);

        virtualinvoke $r3.<javassist.bytecode.ConstInfo: void print(java.io.PrintWriter)>(r1);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static void <clinit>()
    {
        <javassist.bytecode.ConstPool: int REF_invokeInterface> = 9;

        <javassist.bytecode.ConstPool: int REF_newInvokeSpecial> = 8;

        <javassist.bytecode.ConstPool: int REF_invokeSpecial> = 7;

        <javassist.bytecode.ConstPool: int REF_invokeStatic> = 6;

        <javassist.bytecode.ConstPool: int REF_invokeVirtual> = 5;

        <javassist.bytecode.ConstPool: int REF_putStatic> = 4;

        <javassist.bytecode.ConstPool: int REF_putField> = 3;

        <javassist.bytecode.ConstPool: int REF_getStatic> = 2;

        <javassist.bytecode.ConstPool: int REF_getField> = 1;

        <javassist.bytecode.ConstPool: int CONST_Package> = 20;

        <javassist.bytecode.ConstPool: int CONST_Module> = 19;

        <javassist.bytecode.ConstPool: int CONST_InvokeDynamic> = 18;

        <javassist.bytecode.ConstPool: int CONST_MethodType> = 16;

        <javassist.bytecode.ConstPool: int CONST_MethodHandle> = 15;

        <javassist.bytecode.ConstPool: int CONST_Utf8> = 1;

        <javassist.bytecode.ConstPool: int CONST_NameAndType> = 12;

        <javassist.bytecode.ConstPool: int CONST_Double> = 6;

        <javassist.bytecode.ConstPool: int CONST_Long> = 5;

        <javassist.bytecode.ConstPool: int CONST_Float> = 4;

        <javassist.bytecode.ConstPool: int CONST_Integer> = 3;

        <javassist.bytecode.ConstPool: int CONST_String> = 8;

        <javassist.bytecode.ConstPool: int CONST_InterfaceMethodref> = 11;

        <javassist.bytecode.ConstPool: int CONST_Methodref> = 10;

        <javassist.bytecode.ConstPool: int CONST_Fieldref> = 9;

        <javassist.bytecode.ConstPool: int CONST_Class> = 7;

        <javassist.bytecode.ConstPool: javassist.CtClass THIS> = null;

        return;
    }
}
