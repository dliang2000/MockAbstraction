public class com.github.luben.zstd.ZstdOutputStream extends java.io.FilterOutputStream
{
    private com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner;

    public void <init>(java.io.OutputStream, int, boolean, boolean) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        java.io.OutputStream r1;
        int i0;
        boolean z0, z1;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r2, $r3, $r5;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r2 = new com.github.luben.zstd.ZstdOutputStreamNoFinalizer;

        specialinvoke $r2.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: void <init>(java.io.OutputStream,int)>(r1, i0);

        r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner> = $r2;

        $r3 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r3.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setCloseFrameOnFlush(boolean)>(z0);

        $r5 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r5.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setChecksum(boolean)>(z1);

        return;
    }

    public void <init>(java.io.OutputStream, int, boolean) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        java.io.OutputStream r1;
        int i0;
        boolean z0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r2, $r3;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r2 = new com.github.luben.zstd.ZstdOutputStreamNoFinalizer;

        specialinvoke $r2.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: void <init>(java.io.OutputStream,int)>(r1, i0);

        r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner> = $r2;

        $r3 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r3.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setCloseFrameOnFlush(boolean)>(z0);

        return;
    }

    public void <init>(java.io.OutputStream, int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        java.io.OutputStream r1;
        int i0;
        com.github.luben.zstd.BufferPool $r2;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r3;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        $r2 = <com.github.luben.zstd.NoPool: com.github.luben.zstd.BufferPool INSTANCE>;

        specialinvoke r0.<com.github.luben.zstd.ZstdOutputStream: void <init>(java.io.OutputStream,com.github.luben.zstd.BufferPool)>(r1, $r2);

        $r3 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r3.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setLevel(int)>(i0);

        return;
    }

    public void <init>(java.io.OutputStream) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        java.io.OutputStream r1;
        com.github.luben.zstd.BufferPool $r2;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = <com.github.luben.zstd.NoPool: com.github.luben.zstd.BufferPool INSTANCE>;

        specialinvoke r0.<com.github.luben.zstd.ZstdOutputStream: void <init>(java.io.OutputStream,com.github.luben.zstd.BufferPool)>(r1, $r2);

        return;
    }

    public void <init>(java.io.OutputStream, com.github.luben.zstd.BufferPool, int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        java.io.OutputStream r1;
        com.github.luben.zstd.BufferPool r2;
        int i0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r3;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: com.github.luben.zstd.BufferPool;

        i0 := @parameter2: int;

        specialinvoke r0.<com.github.luben.zstd.ZstdOutputStream: void <init>(java.io.OutputStream,com.github.luben.zstd.BufferPool)>(r1, r2);

        $r3 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r3.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setLevel(int)>(i0);

        return;
    }

    public void <init>(java.io.OutputStream, com.github.luben.zstd.BufferPool) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        java.io.OutputStream r1;
        com.github.luben.zstd.BufferPool r2;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r3;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: com.github.luben.zstd.BufferPool;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r3 = new com.github.luben.zstd.ZstdOutputStreamNoFinalizer;

        specialinvoke $r3.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: void <init>(java.io.OutputStream,com.github.luben.zstd.BufferPool)>(r1, r2);

        r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner> = $r3;

        return;
    }

    public void setFinalize(boolean)
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        boolean z0;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        z0 := @parameter0: boolean;

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.github.luben.zstd.ZstdOutputStream r0;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        virtualinvoke r0.<com.github.luben.zstd.ZstdOutputStream: void close()>();

        return;
    }

    public static long recommendedCOutSize()
    {
        long $l0;

        $l0 = staticinvoke <com.github.luben.zstd.ZstdOutputStreamNoFinalizer: long recommendedCOutSize()>();

        return $l0;
    }

    public com.github.luben.zstd.ZstdOutputStream setChecksum(boolean) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        boolean z0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setChecksum(boolean)>(z0);

        return r0;
    }

    public com.github.luben.zstd.ZstdOutputStream setLevel(int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        int i0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setLevel(int)>(i0);

        return r0;
    }

    public com.github.luben.zstd.ZstdOutputStream setLong(int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        int i0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setLong(int)>(i0);

        return r0;
    }

    public com.github.luben.zstd.ZstdOutputStream setWorkers(int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        int i0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setWorkers(int)>(i0);

        return r0;
    }

    public com.github.luben.zstd.ZstdOutputStream setCloseFrameOnFlush(boolean) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        boolean z0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setCloseFrameOnFlush(boolean)>(z0);

        return r0;
    }

    public com.github.luben.zstd.ZstdOutputStream setDict(byte[]) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        byte[] r1;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r2;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r2.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setDict(byte[])>(r1);

        return r0;
    }

    public com.github.luben.zstd.ZstdOutputStream setDict(com.github.luben.zstd.ZstdDictCompress) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        com.github.luben.zstd.ZstdDictCompress r1;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r2;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: com.github.luben.zstd.ZstdDictCompress;

        $r2 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r2.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: com.github.luben.zstd.ZstdOutputStreamNoFinalizer setDict(com.github.luben.zstd.ZstdDictCompress)>(r1);

        return r0;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        byte[] r1;
        int i0, i1;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r2;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r2.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        int i0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: void write(int)>(i0);

        return;
    }

    public void flush() throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        com.github.luben.zstd.ZstdOutputStream r0;
        com.github.luben.zstd.ZstdOutputStreamNoFinalizer $r1;

        r0 := @this: com.github.luben.zstd.ZstdOutputStream;

        $r1 = r0.<com.github.luben.zstd.ZstdOutputStream: com.github.luben.zstd.ZstdOutputStreamNoFinalizer inner>;

        virtualinvoke $r1.<com.github.luben.zstd.ZstdOutputStreamNoFinalizer: void close()>();

        return;
    }
}
