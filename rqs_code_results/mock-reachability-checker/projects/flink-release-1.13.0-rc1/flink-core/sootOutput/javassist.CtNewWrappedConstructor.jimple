class javassist.CtNewWrappedConstructor extends javassist.CtNewWrappedMethod
{
    private static final int PASS_NONE;
    private static final int PASS_PARAMS;

    void <init>()
    {
        javassist.CtNewWrappedConstructor r0;

        r0 := @this: javassist.CtNewWrappedConstructor;

        specialinvoke r0.<javassist.CtNewWrappedMethod: void <init>()>();

        return;
    }

    public static javassist.CtConstructor wrapped(javassist.CtClass[], javassist.CtClass[], int, javassist.CtMethod, javassist.CtMethod$ConstParameter, javassist.CtClass) throws javassist.CannotCompileException
    {
        javassist.CtClass[] r0, r1;
        int i0;
        javassist.CtMethod r2;
        javassist.CtMethod$ConstParameter r3;
        javassist.CtClass r4;
        javassist.bytecode.Bytecode r5;
        javassist.CtConstructor $r6;
        javassist.bytecode.ClassFile $r7;
        javassist.bytecode.MethodInfo $r8;
        javassist.bytecode.CodeAttribute $r9;
        javassist.NotFoundException $r10;
        javassist.CannotCompileException $r11;

        r0 := @parameter0: javassist.CtClass[];

        r1 := @parameter1: javassist.CtClass[];

        i0 := @parameter2: int;

        r2 := @parameter3: javassist.CtMethod;

        r3 := @parameter4: javassist.CtMethod$ConstParameter;

        r4 := @parameter5: javassist.CtClass;

     label1:
        $r6 = new javassist.CtConstructor;

        specialinvoke $r6.<javassist.CtConstructor: void <init>(javassist.CtClass[],javassist.CtClass)>(r0, r4);

        virtualinvoke $r6.<javassist.CtConstructor: void setExceptionTypes(javassist.CtClass[])>(r1);

        $r7 = virtualinvoke r4.<javassist.CtClass: javassist.bytecode.ClassFile getClassFile2()>();

        r5 = staticinvoke <javassist.CtNewWrappedConstructor: javassist.bytecode.Bytecode makeBody(javassist.CtClass,javassist.bytecode.ClassFile,int,javassist.CtMethod,javassist.CtClass[],javassist.CtMethod$ConstParameter)>(r4, $r7, i0, r2, r0, r3);

        $r8 = virtualinvoke $r6.<javassist.CtConstructor: javassist.bytecode.MethodInfo getMethodInfo2()>();

        $r9 = virtualinvoke r5.<javassist.bytecode.Bytecode: javassist.bytecode.CodeAttribute toCodeAttribute()>();

        virtualinvoke $r8.<javassist.bytecode.MethodInfo: void setCodeAttribute(javassist.bytecode.CodeAttribute)>($r9);

     label2:
        return $r6;

     label3:
        $r10 := @caughtexception;

        $r11 = new javassist.CannotCompileException;

        specialinvoke $r11.<javassist.CannotCompileException: void <init>(javassist.NotFoundException)>($r10);

        throw $r11;

        catch javassist.NotFoundException from label1 to label2 with label3;
    }

    protected static javassist.bytecode.Bytecode makeBody(javassist.CtClass, javassist.bytecode.ClassFile, int, javassist.CtMethod, javassist.CtClass[], javassist.CtMethod$ConstParameter) throws javassist.CannotCompileException
    {
        javassist.CtClass r0, $r8;
        javassist.bytecode.ClassFile r1;
        int i0, i1, $i2, $i3, i4, i5, i6;
        javassist.CtMethod r2;
        javassist.CtClass[] r3;
        javassist.CtMethod$ConstParameter r4;
        javassist.bytecode.Bytecode $r6;
        javassist.bytecode.ConstPool $r7;
        java.lang.String $r9, r10;

        r0 := @parameter0: javassist.CtClass;

        r1 := @parameter1: javassist.bytecode.ClassFile;

        i0 := @parameter2: int;

        r2 := @parameter3: javassist.CtMethod;

        r3 := @parameter4: javassist.CtClass[];

        r4 := @parameter5: javassist.CtMethod$ConstParameter;

        i1 = virtualinvoke r1.<javassist.bytecode.ClassFile: int getSuperclassId()>();

        $r6 = new javassist.bytecode.Bytecode;

        $r7 = virtualinvoke r1.<javassist.bytecode.ClassFile: javassist.bytecode.ConstPool getConstPool()>();

        specialinvoke $r6.<javassist.bytecode.Bytecode: void <init>(javassist.bytecode.ConstPool,int,int)>($r7, 0, 0);

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void setMaxLocals(boolean,javassist.CtClass[],int)>(0, r3, 0);

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addAload(int)>(0);

        if i0 != 0 goto label1;

        i4 = 1;

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addInvokespecial(int,java.lang.String,java.lang.String)>(i1, "<init>", "()V");

        goto label6;

     label1:
        if i0 != 2 goto label2;

        $i3 = virtualinvoke $r6.<javassist.bytecode.Bytecode: int addLoadParameters(javassist.CtClass[],int)>(r3, 1);

        i4 = $i3 + 1;

        $r9 = staticinvoke <javassist.bytecode.Descriptor: java.lang.String ofConstructor(javassist.CtClass[])>(r3);

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addInvokespecial(int,java.lang.String,java.lang.String)>(i1, "<init>", $r9);

        goto label6;

     label2:
        i4 = staticinvoke <javassist.CtNewWrappedConstructor: int compileParameterList(javassist.bytecode.Bytecode,javassist.CtClass[],int)>($r6, r3, 1);

        if r4 != null goto label3;

        i5 = 2;

        r10 = staticinvoke <javassist.CtMethod$ConstParameter: java.lang.String defaultConstDescriptor()>();

        goto label4;

     label3:
        $i2 = virtualinvoke r4.<javassist.CtMethod$ConstParameter: int compile(javassist.bytecode.Bytecode)>($r6);

        i5 = $i2 + 2;

        r10 = virtualinvoke r4.<javassist.CtMethod$ConstParameter: java.lang.String constDescriptor()>();

     label4:
        if i4 >= i5 goto label5;

        i4 = i5;

     label5:
        virtualinvoke $r6.<javassist.bytecode.Bytecode: void addInvokespecial(int,java.lang.String,java.lang.String)>(i1, "<init>", r10);

     label6:
        if r2 != null goto label7;

        virtualinvoke $r6.<javassist.bytecode.Bytecode: void add(int)>(177);

        goto label8;

     label7:
        $r8 = <javassist.CtClass: javassist.CtClass voidType>;

        i6 = staticinvoke <javassist.CtNewWrappedConstructor: int makeBody0(javassist.CtClass,javassist.bytecode.ClassFile,javassist.CtMethod,boolean,javassist.CtClass[],javassist.CtClass,javassist.CtMethod$ConstParameter,javassist.bytecode.Bytecode)>(r0, r1, r2, 0, r3, $r8, r4, $r6);

        if i4 >= i6 goto label8;

        i4 = i6;

     label8:
        virtualinvoke $r6.<javassist.bytecode.Bytecode: void setMaxStack(int)>(i4);

        return $r6;
    }

    public static void <clinit>()
    {
        <javassist.CtNewWrappedConstructor: int PASS_PARAMS> = 2;

        <javassist.CtNewWrappedConstructor: int PASS_NONE> = 0;

        return;
    }
}
