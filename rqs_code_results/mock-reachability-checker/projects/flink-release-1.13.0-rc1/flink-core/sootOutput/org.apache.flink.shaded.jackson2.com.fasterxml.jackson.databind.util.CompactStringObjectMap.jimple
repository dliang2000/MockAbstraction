public final class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap extends java.lang.Object implements java.io.Serializable
{
    private static final long serialVersionUID;
    private static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY;
    private final int _hashMask;
    private final int _spillCount;
    private final java.lang.Object[] _hashArea;

    private void <init>(int, int, java.lang.Object[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap r0;
        int i0, i1;
        java.lang.Object[] r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.Object[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _hashMask> = i0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _spillCount> = i1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea> = r1;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap construct(java.util.Map)
    {
        java.util.Map r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, $i18;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        java.lang.String r3;
        boolean $z0, $z1;
        java.util.Set $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap $r5, $r10;
        java.lang.Object $r6, $r7, $r8, $r9, $r12;
        java.lang.Object[] r11;

        r0 := @parameter0: java.util.Map;

        $z0 = interfaceinvoke r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r10 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY>;

        return $r10;

     label1:
        $i4 = interfaceinvoke r0.<java.util.Map: int size()>();

        i0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: int findSize(int)>($i4);

        i1 = i0 - 1;

        $i5 = i0 >> 1;

        $i6 = i0 + $i5;

        i2 = $i6 * 2;

        r11 = newarray (java.lang.Object)[i2];

        i16 = 0;

        $r4 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        r3 = (java.lang.String) $r7;

        if r3 != null goto label3;

        goto label2;

     label3:
        $i7 = virtualinvoke r3.<java.lang.String: int hashCode()>();

        i3 = $i7 & i1;

        i17 = i3 + i3;

        $r8 = r11[i17];

        if $r8 == null goto label4;

        $i8 = i3 >> 1;

        $i9 = i0 + $i8;

        i17 = $i9 << 1;

        $r9 = r11[i17];

        if $r9 == null goto label4;

        $i10 = i0 >> 1;

        $i11 = i0 + $i10;

        $i12 = $i11 << 1;

        i17 = $i12 + i16;

        i16 = i16 + 2;

        $i13 = lengthof r11;

        if i17 < $i13 goto label4;

        $i14 = lengthof r11;

        $i15 = $i14 + 4;

        r11 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r11, $i15);

     label4:
        r11[i17] = r3;

        $i18 = i17 + 1;

        $r12 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11[$i18] = $r12;

        goto label2;

     label5:
        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: void <init>(int,int,java.lang.Object[])>(i1, i16, r11);

        return $r5;
    }

    private static final int findSize(int)
    {
        int i0, i1, $i2, i3;

        i0 := @parameter0: int;

        if i0 > 5 goto label1;

        return 8;

     label1:
        if i0 > 12 goto label2;

        return 16;

     label2:
        $i2 = i0 >> 2;

        i1 = i0 + $i2;

        i3 = 32;

     label3:
        if i3 >= i1 goto label4;

        i3 = i3 + i3;

        goto label3;

     label4:
        return i3;
    }

    public java.lang.Object find(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Object r2, $r5, $r6;
        java.lang.Object[] $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap;

        r1 := @parameter0: java.lang.String;

        $i2 = virtualinvoke r1.<java.lang.String: int hashCode()>();

        $i3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _hashMask>;

        i0 = $i2 & $i3;

        i1 = i0 << 1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        r2 = $r3[i1];

        if r2 == r1 goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        $i4 = i1 + 1;

        $r5 = $r4[$i4];

        return $r5;

     label2:
        $r6 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object _find2(java.lang.String,int,java.lang.Object)>(r1, i0, r2);

        return $r6;
    }

    private final java.lang.Object _find2(java.lang.String, int, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap r0;
        java.lang.String r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.Object[] $r2, $r3, $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5, $r7, r8, r9, r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r8 := @parameter2: java.lang.Object;

        if r8 != null goto label1;

        return null;

     label1:
        $i4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _hashMask>;

        i1 = $i4 + 1;

        $i5 = i0 >> 1;

        $i6 = i1 + $i5;

        i2 = $i6 << 1;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        r9 = $r2[i2];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        $i11 = i2 + 1;

        $r7 = $r6[$i11];

        return $r7;

     label2:
        if r9 == null goto label6;

        $i7 = i1 >> 1;

        $i8 = i1 + $i7;

        i12 = $i8 << 1;

        $i9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _spillCount>;

        i3 = i12 + $i9;

     label3:
        if i12 >= i3 goto label6;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        r10 = $r3[i12];

        if r10 == r1 goto label4;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label5;

     label4:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        $i10 = i12 + 1;

        $r5 = $r4[$i10];

        return $r5;

     label5:
        i12 = i12 + 2;

        goto label3;

     label6:
        return null;
    }

    public java.lang.Object findCaseInsensitive(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap r0;
        java.lang.String r1, r3;
        int i0, $i1, i2;
        java.lang.Object r2, $r7;
        java.lang.Object[] $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap;

        r1 := @parameter0: java.lang.String;

        i2 = 0;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        i0 = lengthof $r4;

     label1:
        if i2 >= i0 goto label3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        r2 = $r5[i2];

        if r2 == null goto label2;

        r3 = (java.lang.String) r2;

        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        $i1 = i2 + 1;

        $r7 = $r6[$i1];

        return $r7;

     label2:
        i2 = i2 + 2;

        goto label1;

     label3:
        return null;
    }

    public java.util.List keys()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap r0;
        int i0, $i1, i2;
        java.lang.Object r2;
        java.lang.Object[] $r3, $r5;
        java.util.ArrayList $r4;
        java.lang.String $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        i0 = lengthof $r3;

        $r4 = new java.util.ArrayList;

        $i1 = i0 >> 2;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;

        r2 = $r5[i2];

        if r2 == null goto label2;

        $r6 = (java.lang.String) r2;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        i2 = i2 + 2;

        goto label1;

     label3:
        return $r4;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap $r0;
        java.lang.Object[] $r1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: long serialVersionUID> = 1L;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap;

        $r1 = newarray (java.lang.Object)[4];

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: void <init>(int,int,java.lang.Object[])>(1, 0, $r1);

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY> = $r0;

        return;
    }
}
