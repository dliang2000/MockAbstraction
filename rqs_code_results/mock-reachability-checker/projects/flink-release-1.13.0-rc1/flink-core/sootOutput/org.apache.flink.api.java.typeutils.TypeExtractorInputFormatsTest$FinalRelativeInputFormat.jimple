public final class org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat extends org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$RelativeInputFormat
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$RelativeInputFormat: void <init>()>();

        return;
    }

    public org.apache.flink.api.java.tuple.Tuple3 nextRecord(org.apache.flink.api.java.tuple.Tuple3)
    {
        org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat r0;
        org.apache.flink.api.java.tuple.Tuple3 r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple3;

        return null;
    }

    public volatile java.lang.Object nextRecord(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat r0;
        java.lang.Object r1;
        org.apache.flink.api.java.tuple.Tuple3 $r2, $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.java.tuple.Tuple3) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.TypeExtractorInputFormatsTest$FinalRelativeInputFormat: org.apache.flink.api.java.tuple.Tuple3 nextRecord(org.apache.flink.api.java.tuple.Tuple3)>($r2);

        return $r3;
    }
}
