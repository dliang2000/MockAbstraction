public class org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue extends java.lang.Object implements org.apache.flink.api.common.functions.MapFunction
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.java.tuple.Tuple2 map(org.apache.flink.api.java.tuple.Tuple1)
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue r0;
        org.apache.flink.api.java.tuple.Tuple1 r1;
        org.apache.flink.api.java.tuple.Tuple2 $r2;
        java.lang.Object $r3, $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple1;

        $r2 = new org.apache.flink.api.java.tuple.Tuple2;

        $r4 = r1.<org.apache.flink.api.java.tuple.Tuple1: java.lang.Object f0>;

        $r3 = r1.<org.apache.flink.api.java.tuple.Tuple1: java.lang.Object f0>;

        specialinvoke $r2.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r4, $r3);

        return $r2;
    }

    public volatile java.lang.Object map(java.lang.Object) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue r0;
        java.lang.Object r1;
        org.apache.flink.api.java.tuple.Tuple1 $r2;
        org.apache.flink.api.java.tuple.Tuple2 $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.java.tuple.Tuple1) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue: org.apache.flink.api.java.tuple.Tuple2 map(org.apache.flink.api.java.tuple.Tuple1)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.TypeExtractorTest$DuplicateValue: long serialVersionUID> = 1L;

        return;
    }
}
