public abstract class org.apache.flink.shaded.guava18.com.google.common.io.ByteSink extends java.lang.Object
{

    protected void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSink r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.CharSink asCharSink(java.nio.charset.Charset)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSink r0;
        java.nio.charset.Charset r1;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSink$AsCharSink $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSink;

        r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.io.ByteSink$AsCharSink;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSink$AsCharSink: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.ByteSink,java.nio.charset.Charset,org.apache.flink.shaded.guava18.com.google.common.io.ByteSink$1)>(r0, r1, null);

        return $r2;
    }

    public abstract java.io.OutputStream openStream() throws java.io.IOException;

    public java.io.OutputStream openBufferedStream() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSink r0;
        java.io.OutputStream r1;
        boolean $z0;
        java.io.BufferedOutputStream $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSink;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSink: java.io.OutputStream openStream()>();

        $z0 = r1 instanceof java.io.BufferedOutputStream;

        if $z0 == 0 goto label1;

        $r2 = (java.io.BufferedOutputStream) r1;

        goto label2;

     label1:
        $r2 = new java.io.BufferedOutputStream;

        specialinvoke $r2.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(r1);

     label2:
        return $r2;
    }

    public void write(byte[]) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSink r0;
        byte[] r1;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r2;
        java.io.OutputStream $r5, r10;
        java.io.Closeable $r6;
        java.lang.Throwable $r7, $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSink;

        r1 := @parameter0: byte[];

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSink: java.io.OutputStream openStream()>();

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r5);

        r10 = (java.io.OutputStream) $r6;

        virtualinvoke r10.<java.io.OutputStream: void write(byte[])>(r1);

        virtualinvoke r10.<java.io.OutputStream: void flush()>();

     label2:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        goto label6;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r7 := @caughtexception;

     label5:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public long writeFrom(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSink r0;
        java.io.InputStream r1;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r2;
        long l0;
        java.io.OutputStream $r5, r10;
        java.io.Closeable $r6;
        java.lang.Throwable $r7, $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSink;

        r1 := @parameter0: java.io.InputStream;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSink: java.io.OutputStream openStream()>();

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r5);

        r10 = (java.io.OutputStream) $r6;

        l0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>(r1, r10);

        virtualinvoke r10.<java.io.OutputStream: void flush()>();

     label2:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return l0;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r7 := @caughtexception;

     label5:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label4;
    }
}
