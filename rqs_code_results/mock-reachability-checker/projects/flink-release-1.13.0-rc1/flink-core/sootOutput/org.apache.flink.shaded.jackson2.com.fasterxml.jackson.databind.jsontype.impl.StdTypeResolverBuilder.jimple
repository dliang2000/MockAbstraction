public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder extends java.lang.Object implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder
{
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs;
    protected java.lang.String _typeProperty;
    protected boolean _typeIdVisible;
    protected java.lang.Class _defaultImpl;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible> = 0;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As r2;
        java.lang.String r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible> = 0;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty> = r3;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder $r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r1;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: void <init>()>();

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id NONE>;

        $r2 = virtualinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>($r1, null);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("idType cannot be null");

        throw $r4;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver> = r2;

        $r3 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: java.lang.String getDefaultPropertyName()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty> = $r3;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.util.Collection r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r5, $r6, $r8, $r9;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r10, $r23;
        int[] $r11;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer $r12, $r26;
        java.lang.String $r13, $r15, $r18, $r25, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer $r16;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer $r19;
        java.lang.IllegalStateException $r20;
        java.lang.StringBuilder $r21, $r22, $r24;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: java.util.Collection;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id NONE>;

        if $r6 != $r5 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean allowPrimitiveTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        if $z1 != 0 goto label2;

        return null;

     label2:
        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig)>(r1);

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean)>(r1, r2, $r7, r3, 1, 0);

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id DEDUCTION>;

        if $r9 != $r8 goto label3;

        $r26 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        $r27 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        specialinvoke $r26.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>(r4, null, $r27);

        return $r26;

     label3:
        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As>;

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs>;

        $i0 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: int ordinal()>();

        $i1 = $r11[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label8;
            default: goto label9;
        };

     label4:
        $r19 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer;

        specialinvoke $r19.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r4, null);

        return $r19;

     label5:
        $r17 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        specialinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>(r4, null, $r18);

        return $r17;

     label6:
        $r16 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;

        specialinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r4, null);

        return $r16;

     label7:
        $r14 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer;

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        specialinvoke $r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>(r4, null, $r15);

        return $r14;

     label8:
        $r12 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        specialinvoke $r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExistingPropertyTypeSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty,java.lang.String)>(r4, null, $r13);

        return $r12;

     label9:
        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not know how to construct standard type serializer for inclusion type: ");

        $r23 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r25);

        throw $r20;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r6;
        java.util.Collection r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As $r11, $r18, $r25;
        int[] $r12;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer $r13;
        java.lang.String $r14, $r16, $r19, $r21, $r27;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer $r17;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer $r20;
        java.lang.IllegalStateException $r22;
        java.lang.StringBuilder $r23, $r24, $r26;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer $r28;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: java.util.Collection;

        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id NONE>;

        if $r8 != $r7 goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();

        if $z0 == 0 goto label2;

        $z5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean allowPrimitiveTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        if $z5 != 0 goto label2;

        return null;

     label2:
        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator verifyBaseTypeValidity(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,java.util.Collection,boolean,boolean)>(r1, r2, r4, r3, 0, 1);

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType defineDefaultImpl(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        $r10 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id DEDUCTION>;

        if $r10 != $r9 goto label3;

        $r28 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;

        specialinvoke $r28.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,java.util.Collection)>(r2, r5, r6, r1, r3);

        return $r28;

     label3:
        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As>;

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs>;

        $i0 = virtualinvoke $r11.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: int ordinal()>();

        $i1 = $r12[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label6;
            case 4: goto label7;
            case 5: goto label5;
            default: goto label8;
        };

     label4:
        $r20 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer;

        $r21 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        $z4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible>;

        specialinvoke $r20.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r5, $r21, $z4, r6);

        return $r20;

     label5:
        $r17 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        $z3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible>;

        $r18 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs>;

        specialinvoke $r17.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(r2, r5, $r19, $z3, r6, $r18);

        return $r17;

     label6:
        $r15 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        $z2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible>;

        specialinvoke $r15.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r5, $r16, $z2, r6);

        return $r15;

     label7:
        $r13 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer;

        $r14 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        $z1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible>;

        specialinvoke $r13.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2, r5, $r14, $z1, r6);

        return $r13;

     label8:
        $r22 = new java.lang.IllegalStateException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not know how to construct standard type serializer for inclusion type: ");

        $r25 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r27);

        throw $r22;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType defineDefaultImpl(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2, r13;
        java.lang.Class $r3, $r4, $r6, $r7, $r8, $r9, $r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r5, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature $r12;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        if $r3 != null goto label2;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature USE_BASE_TYPE_AS_DEFAULT_IMPL>;

        $z2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>($r12);

        if $z2 == 0 goto label1;

        $z3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isAbstract()>();

        if $z3 != 0 goto label1;

        r13 = r2;

        goto label7;

     label1:
        r13 = null;

        goto label7;

     label2:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        if $r4 == class "Ljava/lang/Void;" goto label3;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        if $r7 != class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/annotation/NoClass;" goto label4;

     label3:
        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        r13 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>($r6);

        goto label7;

     label4:
        $r8 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>($r8);

        if $z0 == 0 goto label5;

        r13 = r2;

        goto label7;

     label5:
        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        $z1 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSuperTypeOf(java.lang.Class)>($r9);

        if $z1 == 0 goto label6;

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r11 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        r13 = virtualinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(r2, $r11);

        goto label7;

     label6:
        r13 = null;

     label7:
        return r13;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("includeAs cannot be null");

        throw $r2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As _includeAs> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r1;
        boolean $z0;
        java.lang.String r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r2 := @parameter0: java.lang.String;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: java.lang.String getDefaultPropertyName()>();

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty> = r2;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: java.lang.Class;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl> = r1;

        return r0;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        z0 := @parameter0: boolean;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible> = z0;

        return r0;
    }

    public java.lang.Class getDefaultImpl()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.Class _defaultImpl>;

        return $r1;
    }

    public java.lang.String getTypeProperty()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: java.lang.String _typeProperty>;

        return $r1;
    }

    public boolean isTypeIdVisible()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: boolean _typeIdVisible>;

        return $z0;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, java.util.Collection, boolean, boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3;
        java.util.Collection r4;
        boolean z0, z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver $r5, $r19;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r6, $r7, $r15;
        int[] $r8;
        int $i0, $i1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver $r11;
        java.lang.IllegalStateException $r12, $r18;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.String $r17;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        r4 := @parameter3: java.util.Collection;

        z0 := @parameter4: boolean;

        z1 := @parameter5: boolean;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver>;

        if $r5 == null goto label1;

        $r19 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver>;

        return $r19;

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        if $r6 != null goto label2;

        $r18 = new java.lang.IllegalStateException;

        specialinvoke $r18.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot build, \'init()\' not yet called");

        throw $r18;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id>;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $i0 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: int ordinal()>();

        $i1 = $r8[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label7;
        };

     label3:
        $r11 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r2, r1, r3);

        return $r11;

     label4:
        $r10 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r2, r1, r3);

        return $r10;

     label5:
        $r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean)>(r1, r2, r4, z0, z1);

        return $r9;

     label6:
        return null;

     label7:
        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Do not know how to construct standard type id resolver for idType: ");

        $r15 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r12;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();

        return $r2;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator verifyBaseTypeValidity(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3, $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity r4, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id $r5, $r6, $r11, $r12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig)>(r1);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id CLASS>;

        if $r6 == $r5 goto label1;

        $r12 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id _idType>;

        $r11 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id MINIMAL_CLASS>;

        if $r12 != $r11 goto label3;

     label1:
        r4 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1, r2);

        $r7 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED>;

        if r4 != $r7 goto label2;

        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator reportInvalidBaseType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, r2, r3);

        return $r10;

     label2:
        $r8 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;

        if r4 != $r8 goto label3;

        $r9 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;

        return $r9;

     label3:
        return r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator reportInvalidBaseType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r8, $r9;
        java.lang.Class $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(r3);

        $r5[0] = $r6;

        $r7 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>($r7);

        $r5[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Configured `PolymorphicTypeValidator` (of type %s) denied resolution of all subtypes of base type %s", $r5);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;
    }

    protected boolean allowPrimitiveTypes(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        return 0;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0, $r1;
        boolean z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean)>(z0);

        return $r1;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0, $r2;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0, $r2;
        java.lang.String r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As;

        $r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(r1);

        return $r2;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder r0, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>(r1, r2);

        return $r3;
    }
}
