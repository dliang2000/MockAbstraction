public class javassist.convert.TransformReadField extends javassist.convert.Transformer
{
    protected java.lang.String fieldname;
    protected javassist.CtClass fieldClass;
    protected boolean isPrivate;
    protected java.lang.String methodClassname;
    protected java.lang.String methodName;

    public void <init>(javassist.convert.Transformer, javassist.CtField, java.lang.String, java.lang.String)
    {
        javassist.convert.TransformReadField r0;
        javassist.convert.Transformer r1;
        javassist.CtField r2;
        java.lang.String r3, r4, $r6;
        javassist.CtClass $r5;
        int $i0;
        boolean $z0;

        r0 := @this: javassist.convert.TransformReadField;

        r1 := @parameter0: javassist.convert.Transformer;

        r2 := @parameter1: javassist.CtField;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        specialinvoke r0.<javassist.convert.Transformer: void <init>(javassist.convert.Transformer)>(r1);

        $r5 = virtualinvoke r2.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        r0.<javassist.convert.TransformReadField: javassist.CtClass fieldClass> = $r5;

        $r6 = virtualinvoke r2.<javassist.CtField: java.lang.String getName()>();

        r0.<javassist.convert.TransformReadField: java.lang.String fieldname> = $r6;

        r0.<javassist.convert.TransformReadField: java.lang.String methodClassname> = r3;

        r0.<javassist.convert.TransformReadField: java.lang.String methodName> = r4;

        $i0 = virtualinvoke r2.<javassist.CtField: int getModifiers()>();

        $z0 = staticinvoke <javassist.Modifier: boolean isPrivate(int)>($i0);

        r0.<javassist.convert.TransformReadField: boolean isPrivate> = $z0;

        return;
    }

    static java.lang.String isField(javassist.ClassPool, javassist.bytecode.ConstPool, javassist.CtClass, java.lang.String, boolean, int)
    {
        javassist.ClassPool r0;
        javassist.bytecode.ConstPool r1;
        javassist.CtClass r2, r8;
        java.lang.String r3, $r4, $r5, $r6;
        boolean z0, $z1, $z2;
        int i0;
        javassist.NotFoundException $r7;

        r0 := @parameter0: javassist.ClassPool;

        r1 := @parameter1: javassist.bytecode.ConstPool;

        r2 := @parameter2: javassist.CtClass;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        i0 := @parameter5: int;

        $r4 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getFieldrefName(int)>(i0);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label1;

        return null;

     label1:
        $r5 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getFieldrefClassName(int)>(i0);

        r8 = virtualinvoke r0.<javassist.ClassPool: javassist.CtClass get(java.lang.String)>($r5);

        if r8 == r2 goto label2;

        if z0 != 0 goto label4;

        $z2 = staticinvoke <javassist.convert.TransformReadField: boolean isFieldInSuper(javassist.CtClass,javassist.CtClass,java.lang.String)>(r8, r2, r3);

        if $z2 == 0 goto label4;

     label2:
        $r6 = virtualinvoke r1.<javassist.bytecode.ConstPool: java.lang.String getFieldrefType(int)>(i0);

     label3:
        return $r6;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

     label6:
        return null;

        catch javassist.NotFoundException from label1 to label3 with label5;
    }

    static boolean isFieldInSuper(javassist.CtClass, javassist.CtClass, java.lang.String)
    {
        javassist.CtClass r0, r1, $r3;
        java.lang.String r2;
        boolean $z0, $z1;
        javassist.NotFoundException $r4;
        javassist.CtField r5;

        r0 := @parameter0: javassist.CtClass;

        r1 := @parameter1: javassist.CtClass;

        r2 := @parameter2: java.lang.String;

        $z0 = virtualinvoke r0.<javassist.CtClass: boolean subclassOf(javassist.CtClass)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r5 = virtualinvoke r0.<javassist.CtClass: javassist.CtField getField(java.lang.String)>(r2);

        $r3 = virtualinvoke r5.<javassist.CtField: javassist.CtClass getDeclaringClass()>();

        if $r3 != r1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r4 := @caughtexception;

        return 0;

        catch javassist.NotFoundException from label1 to label3 with label4;
    }

    public int transform(javassist.CtClass, int, javassist.bytecode.CodeIterator, javassist.bytecode.ConstPool) throws javassist.bytecode.BadBytecode
    {
        javassist.convert.TransformReadField r0;
        javassist.CtClass r1, $r8;
        javassist.bytecode.CodeIterator r2;
        javassist.bytecode.ConstPool r3;
        int i0, i1, i2, i3, $i4, $i5, i6, i7;
        java.lang.String r4, r5, $r7, $r12, $r13;
        javassist.ClassPool $r6;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r11;

        r0 := @this: javassist.convert.TransformReadField;

        r1 := @parameter0: javassist.CtClass;

        i6 := @parameter1: int;

        r2 := @parameter2: javassist.bytecode.CodeIterator;

        r3 := @parameter3: javassist.bytecode.ConstPool;

        i0 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int byteAt(int)>(i6);

        if i0 == 180 goto label1;

        if i0 != 178 goto label3;

     label1:
        $i4 = i6 + 1;

        i1 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int u16bitAt(int)>($i4);

        $r6 = virtualinvoke r1.<javassist.CtClass: javassist.ClassPool getClassPool()>();

        $r8 = r0.<javassist.convert.TransformReadField: javassist.CtClass fieldClass>;

        $r7 = r0.<javassist.convert.TransformReadField: java.lang.String fieldname>;

        $z0 = r0.<javassist.convert.TransformReadField: boolean isPrivate>;

        r4 = staticinvoke <javassist.convert.TransformReadField: java.lang.String isField(javassist.ClassPool,javassist.bytecode.ConstPool,javassist.CtClass,java.lang.String,boolean,int)>($r6, r3, $r8, $r7, $z0, i1);

        if r4 == null goto label3;

        if i0 != 178 goto label2;

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void move(int)>(i6);

        i7 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int insertGap(int)>(1);

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(1, i7);

        i6 = virtualinvoke r2.<javassist.bytecode.CodeIterator: int next()>();

     label2:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(Ljava/lang/Object;)");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = r0.<javassist.convert.TransformReadField: java.lang.String methodClassname>;

        i2 = virtualinvoke r3.<javassist.bytecode.ConstPool: int addClassInfo(java.lang.String)>($r12);

        $r13 = r0.<javassist.convert.TransformReadField: java.lang.String methodName>;

        i3 = virtualinvoke r3.<javassist.bytecode.ConstPool: int addMethodrefInfo(int,java.lang.String,java.lang.String)>(i2, $r13, r5);

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void writeByte(int,int)>(184, i6);

        $i5 = i6 + 1;

        virtualinvoke r2.<javassist.bytecode.CodeIterator: void write16bit(int,int)>(i3, $i5);

        return i6;

     label3:
        return i6;
    }
}
