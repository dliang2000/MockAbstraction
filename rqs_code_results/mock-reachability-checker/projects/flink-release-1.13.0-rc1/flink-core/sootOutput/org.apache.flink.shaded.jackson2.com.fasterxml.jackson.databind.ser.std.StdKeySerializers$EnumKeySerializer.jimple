public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer
{
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values;

    protected void <init>(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(r1, 0);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values> = r2;

        return;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer construct(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues)
    {
        java.lang.Class r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer $r2;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: void <init>(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues)>(r0, r1);

        return $r2;
    }

    public void serialize(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r3;
        java.lang.Enum r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r5, $r6;
        boolean $z0, $z1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString $r8;
        int $i0;
        java.lang.String $r9, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;

        $z0 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r5);

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r10);

        return;

     label1:
        r4 = (java.lang.Enum) r1;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUM_KEYS_USING_INDEX>;

        $z1 = virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r6);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r4.<java.lang.Enum: int ordinal()>();

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r9);

        return;

     label2:
        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.StdKeySerializers$EnumKeySerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues _values>;

        $r8 = virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.EnumValues: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum)>(r4);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.SerializableString)>($r8);

        return;
    }
}
