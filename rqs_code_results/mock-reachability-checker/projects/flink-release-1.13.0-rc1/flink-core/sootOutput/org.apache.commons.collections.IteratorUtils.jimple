public class org.apache.commons.collections.IteratorUtils extends java.lang.Object
{
    public static final org.apache.commons.collections.ResettableIterator EMPTY_ITERATOR;
    public static final org.apache.commons.collections.ResettableListIterator EMPTY_LIST_ITERATOR;
    public static final org.apache.commons.collections.OrderedIterator EMPTY_ORDERED_ITERATOR;
    public static final org.apache.commons.collections.MapIterator EMPTY_MAP_ITERATOR;
    public static final org.apache.commons.collections.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR;
    static java.lang.Class class$java$util$Iterator;

    public void <init>()
    {
        org.apache.commons.collections.IteratorUtils r0;

        r0 := @this: org.apache.commons.collections.IteratorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.commons.collections.ResettableIterator emptyIterator()
    {
        org.apache.commons.collections.ResettableIterator $r0;

        $r0 = <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.ResettableIterator EMPTY_ITERATOR>;

        return $r0;
    }

    public static org.apache.commons.collections.ResettableListIterator emptyListIterator()
    {
        org.apache.commons.collections.ResettableListIterator $r0;

        $r0 = <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.ResettableListIterator EMPTY_LIST_ITERATOR>;

        return $r0;
    }

    public static org.apache.commons.collections.OrderedIterator emptyOrderedIterator()
    {
        org.apache.commons.collections.OrderedIterator $r0;

        $r0 = <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.OrderedIterator EMPTY_ORDERED_ITERATOR>;

        return $r0;
    }

    public static org.apache.commons.collections.MapIterator emptyMapIterator()
    {
        org.apache.commons.collections.MapIterator $r0;

        $r0 = <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.MapIterator EMPTY_MAP_ITERATOR>;

        return $r0;
    }

    public static org.apache.commons.collections.OrderedMapIterator emptyOrderedMapIterator()
    {
        org.apache.commons.collections.OrderedMapIterator $r0;

        $r0 = <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR>;

        return $r0;
    }

    public static org.apache.commons.collections.ResettableIterator singletonIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections.iterators.SingletonIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections.iterators.SingletonIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.SingletonIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static java.util.ListIterator singletonListIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections.iterators.SingletonListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections.iterators.SingletonListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.SingletonListIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.apache.commons.collections.iterators.ObjectArrayIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = new org.apache.commons.collections.iterators.ObjectArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ObjectArrayIterator: void <init>(java.lang.Object[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections.iterators.ArrayIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections.iterators.ArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ArrayIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0;
        org.apache.commons.collections.iterators.ObjectArrayIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections.iterators.ObjectArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ObjectArrayIterator: void <init>(java.lang.Object[],int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        org.apache.commons.collections.iterators.ArrayIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections.iterators.ArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ArrayIterator: void <init>(java.lang.Object,int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object[], int, int)
    {
        java.lang.Object[] r0;
        int i0, i1;
        org.apache.commons.collections.iterators.ObjectArrayIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections.iterators.ObjectArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ObjectArrayIterator: void <init>(java.lang.Object[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableIterator arrayIterator(java.lang.Object, int, int)
    {
        java.lang.Object r0;
        int i0, i1;
        org.apache.commons.collections.iterators.ArrayIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections.iterators.ArrayIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ArrayIterator: void <init>(java.lang.Object,int,int)>(r0, i0, i1);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.apache.commons.collections.iterators.ObjectArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = new org.apache.commons.collections.iterators.ObjectArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ObjectArrayListIterator: void <init>(java.lang.Object[])>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.commons.collections.iterators.ArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.commons.collections.iterators.ArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ArrayListIterator: void <init>(java.lang.Object)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0;
        org.apache.commons.collections.iterators.ObjectArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections.iterators.ObjectArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ObjectArrayListIterator: void <init>(java.lang.Object[],int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0;
        org.apache.commons.collections.iterators.ArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r1 = new org.apache.commons.collections.iterators.ArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ArrayListIterator: void <init>(java.lang.Object,int)>(r0, i0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object[], int, int)
    {
        java.lang.Object[] r0;
        int i0, i1;
        org.apache.commons.collections.iterators.ObjectArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections.iterators.ObjectArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ObjectArrayListIterator: void <init>(java.lang.Object[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableListIterator arrayListIterator(java.lang.Object, int, int)
    {
        java.lang.Object r0;
        int i0, i1;
        org.apache.commons.collections.iterators.ArrayListIterator $r1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new org.apache.commons.collections.iterators.ArrayListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ArrayListIterator: void <init>(java.lang.Object,int,int)>(r0, i0, i1);

        return $r1;
    }

    public static java.util.Iterator unmodifiableIterator(java.util.Iterator)
    {
        java.util.Iterator r0, $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableIterator: java.util.Iterator decorate(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.util.ListIterator unmodifiableListIterator(java.util.ListIterator)
    {
        java.util.ListIterator r0, $r1;

        r0 := @parameter0: java.util.ListIterator;

        $r1 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableListIterator: java.util.ListIterator decorate(java.util.ListIterator)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.MapIterator unmodifiableMapIterator(org.apache.commons.collections.MapIterator)
    {
        org.apache.commons.collections.MapIterator r0, $r1;

        r0 := @parameter0: org.apache.commons.collections.MapIterator;

        $r1 = staticinvoke <org.apache.commons.collections.iterators.UnmodifiableMapIterator: org.apache.commons.collections.MapIterator decorate(org.apache.commons.collections.MapIterator)>(r0);

        return $r1;
    }

    public static java.util.Iterator chainedIterator(java.util.Iterator, java.util.Iterator)
    {
        java.util.Iterator r0, r1;
        org.apache.commons.collections.iterators.IteratorChain $r2;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.util.Iterator;

        $r2 = new org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke $r2.<org.apache.commons.collections.iterators.IteratorChain: void <init>(java.util.Iterator,java.util.Iterator)>(r0, r1);

        return $r2;
    }

    public static java.util.Iterator chainedIterator(java.util.Iterator[])
    {
        java.util.Iterator[] r0;
        org.apache.commons.collections.iterators.IteratorChain $r1;

        r0 := @parameter0: java.util.Iterator[];

        $r1 = new org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke $r1.<org.apache.commons.collections.iterators.IteratorChain: void <init>(java.util.Iterator[])>(r0);

        return $r1;
    }

    public static java.util.Iterator chainedIterator(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections.iterators.IteratorChain $r1;

        r0 := @parameter0: java.util.Collection;

        $r1 = new org.apache.commons.collections.iterators.IteratorChain;

        specialinvoke $r1.<org.apache.commons.collections.iterators.IteratorChain: void <init>(java.util.Collection)>(r0);

        return $r1;
    }

    public static java.util.Iterator collatedIterator(java.util.Comparator, java.util.Iterator, java.util.Iterator)
    {
        java.util.Comparator r0;
        java.util.Iterator r1, r2;
        org.apache.commons.collections.iterators.CollatingIterator $r3;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Iterator;

        r2 := @parameter2: java.util.Iterator;

        $r3 = new org.apache.commons.collections.iterators.CollatingIterator;

        specialinvoke $r3.<org.apache.commons.collections.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator,java.util.Iterator)>(r0, r1, r2);

        return $r3;
    }

    public static java.util.Iterator collatedIterator(java.util.Comparator, java.util.Iterator[])
    {
        java.util.Comparator r0;
        java.util.Iterator[] r1;
        org.apache.commons.collections.iterators.CollatingIterator $r2;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Iterator[];

        $r2 = new org.apache.commons.collections.iterators.CollatingIterator;

        specialinvoke $r2.<org.apache.commons.collections.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Iterator[])>(r0, r1);

        return $r2;
    }

    public static java.util.Iterator collatedIterator(java.util.Comparator, java.util.Collection)
    {
        java.util.Comparator r0;
        java.util.Collection r1;
        org.apache.commons.collections.iterators.CollatingIterator $r2;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.util.Collection;

        $r2 = new org.apache.commons.collections.iterators.CollatingIterator;

        specialinvoke $r2.<org.apache.commons.collections.iterators.CollatingIterator: void <init>(java.util.Comparator,java.util.Collection)>(r0, r1);

        return $r2;
    }

    public static java.util.Iterator objectGraphIterator(java.lang.Object, org.apache.commons.collections.Transformer)
    {
        java.lang.Object r0;
        org.apache.commons.collections.Transformer r1;
        org.apache.commons.collections.iterators.ObjectGraphIterator $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.apache.commons.collections.Transformer;

        $r2 = new org.apache.commons.collections.iterators.ObjectGraphIterator;

        specialinvoke $r2.<org.apache.commons.collections.iterators.ObjectGraphIterator: void <init>(java.lang.Object,org.apache.commons.collections.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.util.Iterator transformedIterator(java.util.Iterator, org.apache.commons.collections.Transformer)
    {
        java.util.Iterator r0;
        org.apache.commons.collections.Transformer r1;
        org.apache.commons.collections.iterators.TransformIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections.Transformer;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Transformer must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections.iterators.TransformIterator;

        specialinvoke $r2.<org.apache.commons.collections.iterators.TransformIterator: void <init>(java.util.Iterator,org.apache.commons.collections.Transformer)>(r0, r1);

        return $r2;
    }

    public static java.util.Iterator filteredIterator(java.util.Iterator, org.apache.commons.collections.Predicate)
    {
        java.util.Iterator r0;
        org.apache.commons.collections.Predicate r1;
        org.apache.commons.collections.iterators.FilterIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: org.apache.commons.collections.Predicate;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections.iterators.FilterIterator;

        specialinvoke $r2.<org.apache.commons.collections.iterators.FilterIterator: void <init>(java.util.Iterator,org.apache.commons.collections.Predicate)>(r0, r1);

        return $r2;
    }

    public static java.util.ListIterator filteredListIterator(java.util.ListIterator, org.apache.commons.collections.Predicate)
    {
        java.util.ListIterator r0;
        org.apache.commons.collections.Predicate r1;
        org.apache.commons.collections.iterators.FilterListIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.ListIterator;

        r1 := @parameter1: org.apache.commons.collections.Predicate;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("ListIterator must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Predicate must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections.iterators.FilterListIterator;

        specialinvoke $r2.<org.apache.commons.collections.iterators.FilterListIterator: void <init>(java.util.ListIterator,org.apache.commons.collections.Predicate)>(r0, r1);

        return $r2;
    }

    public static org.apache.commons.collections.ResettableIterator loopingIterator(java.util.Collection)
    {
        java.util.Collection r0;
        org.apache.commons.collections.iterators.LoopingIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Collection;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Collection must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections.iterators.LoopingIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.LoopingIterator: void <init>(java.util.Collection)>(r0);

        return $r1;
    }

    public static org.apache.commons.collections.ResettableListIterator loopingListIterator(java.util.List)
    {
        java.util.List r0;
        org.apache.commons.collections.iterators.LoopingListIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.List;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("List must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections.iterators.LoopingListIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.LoopingListIterator: void <init>(java.util.List)>(r0);

        return $r1;
    }

    public static java.util.Iterator asIterator(java.util.Enumeration)
    {
        java.util.Enumeration r0;
        org.apache.commons.collections.iterators.EnumerationIterator $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Enumeration;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Enumeration must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections.iterators.EnumerationIterator;

        specialinvoke $r1.<org.apache.commons.collections.iterators.EnumerationIterator: void <init>(java.util.Enumeration)>(r0);

        return $r1;
    }

    public static java.util.Iterator asIterator(java.util.Enumeration, java.util.Collection)
    {
        java.util.Enumeration r0;
        java.util.Collection r1;
        org.apache.commons.collections.iterators.EnumerationIterator $r2;
        java.lang.NullPointerException $r3, $r4;

        r0 := @parameter0: java.util.Enumeration;

        r1 := @parameter1: java.util.Collection;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Enumeration must not be null");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Collection must not be null");

        throw $r3;

     label2:
        $r2 = new org.apache.commons.collections.iterators.EnumerationIterator;

        specialinvoke $r2.<org.apache.commons.collections.iterators.EnumerationIterator: void <init>(java.util.Enumeration,java.util.Collection)>(r0, r1);

        return $r2;
    }

    public static java.util.Enumeration asEnumeration(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections.iterators.IteratorEnumeration $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections.iterators.IteratorEnumeration;

        specialinvoke $r1.<org.apache.commons.collections.iterators.IteratorEnumeration: void <init>(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.util.ListIterator toListIterator(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.commons.collections.iterators.ListIteratorWrapper $r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r2;

     label1:
        $r1 = new org.apache.commons.collections.iterators.ListIteratorWrapper;

        specialinvoke $r1.<org.apache.commons.collections.iterators.ListIteratorWrapper: void <init>(java.util.Iterator)>(r0);

        return $r1;
    }

    public static java.lang.Object[] toArray(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.List r1;
        java.lang.Object[] $r2;
        java.lang.NullPointerException $r3;

        r0 := @parameter0: java.util.Iterator;

        if r0 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r3;

     label1:
        r1 = staticinvoke <org.apache.commons.collections.IteratorUtils: java.util.List toList(java.util.Iterator,int)>(r0, 100);

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray()>();

        return $r2;
    }

    public static java.lang.Object[] toArray(java.util.Iterator, java.lang.Class)
    {
        java.util.Iterator r0;
        java.lang.Class r1;
        java.util.List r2;
        int $i0;
        java.lang.Object $r3;
        java.lang.Object[] $r4, $r5, $r6;
        java.lang.NullPointerException $r7, $r8;

        r0 := @parameter0: java.util.Iterator;

        r1 := @parameter1: java.lang.Class;

        if r0 != null goto label1;

        $r8 = new java.lang.NullPointerException;

        specialinvoke $r8.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r8;

     label1:
        if r1 != null goto label2;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Array class must not be null");

        throw $r7;

     label2:
        r2 = staticinvoke <org.apache.commons.collections.IteratorUtils: java.util.List toList(java.util.Iterator,int)>(r0, 100);

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, $i0);

        $r4 = (java.lang.Object[]) $r3;

        $r5 = (java.lang.Object[]) $r4;

        $r6 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        return $r6;
    }

    public static java.util.List toList(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.util.List $r1;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.commons.collections.IteratorUtils: java.util.List toList(java.util.Iterator,int)>(r0, 10);

        return $r1;
    }

    public static java.util.List toList(java.util.Iterator, int)
    {
        java.util.Iterator r0;
        int i0;
        java.util.ArrayList $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.NullPointerException $r5;

        r0 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Iterator must not be null");

        throw $r5;

     label1:
        if i0 >= 1 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Estimated size must be greater than 0");

        throw $r4;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>(i0);

     label3:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        goto label3;

     label4:
        return $r2;
    }

    public static java.util.Iterator getIterator(java.lang.Object)
    {
        java.lang.Object r0, $r8;
        java.util.Iterator r1, $r16, $r23, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Class $r2, $r4, $r5, $r9, $r28;
        java.lang.Class[] $r3;
        org.apache.commons.collections.ResettableIterator $r6, $r25;
        java.lang.Object[] $r7, $r20, $r21;
        org.apache.commons.collections.iterators.ArrayIterator $r10;
        org.apache.commons.collections.iterators.EnumerationIterator $r11, $r17;
        java.util.Dictionary $r12;
        java.util.Enumeration $r13, $r18;
        java.util.Map $r14;
        java.util.Collection $r15, $r22;
        org.apache.commons.collections.iterators.ObjectArrayIterator $r19;
        java.lang.Exception $r26;
        java.lang.reflect.Method r27;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label01;

        $r25 = staticinvoke <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.ResettableIterator emptyIterator()>();

        return $r25;

     label01:
        $z0 = r0 instanceof java.util.Iterator;

        if $z0 == 0 goto label02;

        $r24 = (java.util.Iterator) r0;

        return $r24;

     label02:
        $z1 = r0 instanceof java.util.Collection;

        if $z1 == 0 goto label03;

        $r22 = (java.util.Collection) r0;

        $r23 = interfaceinvoke $r22.<java.util.Collection: java.util.Iterator iterator()>();

        return $r23;

     label03:
        $z2 = r0 instanceof java.lang.Object[];

        if $z2 == 0 goto label04;

        $r19 = new org.apache.commons.collections.iterators.ObjectArrayIterator;

        $r20 = (java.lang.Object[]) r0;

        $r21 = (java.lang.Object[]) $r20;

        specialinvoke $r19.<org.apache.commons.collections.iterators.ObjectArrayIterator: void <init>(java.lang.Object[])>($r21);

        return $r19;

     label04:
        $z3 = r0 instanceof java.util.Enumeration;

        if $z3 == 0 goto label05;

        $r17 = new org.apache.commons.collections.iterators.EnumerationIterator;

        $r18 = (java.util.Enumeration) r0;

        specialinvoke $r17.<org.apache.commons.collections.iterators.EnumerationIterator: void <init>(java.util.Enumeration)>($r18);

        return $r17;

     label05:
        $z4 = r0 instanceof java.util.Map;

        if $z4 == 0 goto label06;

        $r14 = (java.util.Map) r0;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Collection values()>();

        $r16 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

        return $r16;

     label06:
        $z5 = r0 instanceof java.util.Dictionary;

        if $z5 == 0 goto label07;

        $r11 = new org.apache.commons.collections.iterators.EnumerationIterator;

        $r12 = (java.util.Dictionary) r0;

        $r13 = virtualinvoke $r12.<java.util.Dictionary: java.util.Enumeration elements()>();

        specialinvoke $r11.<org.apache.commons.collections.iterators.EnumerationIterator: void <init>(java.util.Enumeration)>($r13);

        return $r11;

     label07:
        if r0 == null goto label08;

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z7 = virtualinvoke $r9.<java.lang.Class: boolean isArray()>();

        if $z7 == 0 goto label08;

        $r10 = new org.apache.commons.collections.iterators.ArrayIterator;

        specialinvoke $r10.<org.apache.commons.collections.iterators.ArrayIterator: void <init>(java.lang.Object)>(r0);

        return $r10;

     label08:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = (java.lang.Class[]) null;

        r27 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("iterator", $r3);

        $r4 = <org.apache.commons.collections.IteratorUtils: java.lang.Class class$java$util$Iterator>;

        if $r4 != null goto label09;

        $r28 = staticinvoke <org.apache.commons.collections.IteratorUtils: java.lang.Class class$(java.lang.String)>("java.util.Iterator");

        <org.apache.commons.collections.IteratorUtils: java.lang.Class class$java$util$Iterator> = $r28;

        goto label10;

     label09:
        $r28 = <org.apache.commons.collections.IteratorUtils: java.lang.Class class$java$util$Iterator>;

     label10:
        $r5 = virtualinvoke r27.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z6 = virtualinvoke $r28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z6 == 0 goto label12;

        $r7 = (java.lang.Object[]) null;

        $r8 = virtualinvoke r27.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r7);

        r1 = (java.util.Iterator) $r8;

        if r1 == null goto label12;

     label11:
        return r1;

     label12:
        goto label14;

     label13:
        $r26 := @caughtexception;

     label14:
        $r6 = staticinvoke <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.ResettableIterator singletonIterator(java.lang.Object)>(r0);

        return $r6;

        catch java.lang.Exception from label08 to label11 with label13;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.String r0, $r5;
        java.lang.Class $r2;
        java.lang.ClassNotFoundException $r3;
        java.lang.NoClassDefFoundError $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.NoClassDefFoundError;

        $r5 = virtualinvoke $r3.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.commons.collections.ResettableIterator $r0;
        org.apache.commons.collections.ResettableListIterator $r1;
        org.apache.commons.collections.OrderedIterator $r2;
        org.apache.commons.collections.MapIterator $r3;
        org.apache.commons.collections.OrderedMapIterator $r4;

        $r0 = <org.apache.commons.collections.iterators.EmptyIterator: org.apache.commons.collections.ResettableIterator RESETTABLE_INSTANCE>;

        <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.ResettableIterator EMPTY_ITERATOR> = $r0;

        $r1 = <org.apache.commons.collections.iterators.EmptyListIterator: org.apache.commons.collections.ResettableListIterator RESETTABLE_INSTANCE>;

        <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.ResettableListIterator EMPTY_LIST_ITERATOR> = $r1;

        $r2 = <org.apache.commons.collections.iterators.EmptyOrderedIterator: org.apache.commons.collections.OrderedIterator INSTANCE>;

        <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.OrderedIterator EMPTY_ORDERED_ITERATOR> = $r2;

        $r3 = <org.apache.commons.collections.iterators.EmptyMapIterator: org.apache.commons.collections.MapIterator INSTANCE>;

        <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.MapIterator EMPTY_MAP_ITERATOR> = $r3;

        $r4 = <org.apache.commons.collections.iterators.EmptyOrderedMapIterator: org.apache.commons.collections.OrderedMapIterator INSTANCE>;

        <org.apache.commons.collections.IteratorUtils: org.apache.commons.collections.OrderedMapIterator EMPTY_ORDERED_MAP_ITERATOR> = $r4;

        return;
    }
}
