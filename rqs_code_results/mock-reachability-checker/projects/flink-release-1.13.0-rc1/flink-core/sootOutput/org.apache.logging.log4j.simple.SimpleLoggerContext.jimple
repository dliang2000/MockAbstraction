public class org.apache.logging.log4j.simple.SimpleLoggerContext extends java.lang.Object implements org.apache.logging.log4j.spi.LoggerContext
{
    private static final java.lang.String SYSTEM_OUT;
    private static final java.lang.String SYSTEM_ERR;
    protected static final java.lang.String DEFAULT_DATE_TIME_FORMAT;
    protected static final java.lang.String SYSTEM_PREFIX;
    private final org.apache.logging.log4j.util.PropertiesUtil props;
    private final boolean showLogName;
    private final boolean showShortName;
    private final boolean showDateTime;
    private final boolean showContextMap;
    private final java.lang.String dateTimeFormat;
    private final org.apache.logging.log4j.Level defaultLevel;
    private final java.io.PrintStream stream;
    private final org.apache.logging.log4j.spi.LoggerRegistry loggerRegistry;

    public void <init>()
    {
        org.apache.logging.log4j.simple.SimpleLoggerContext r0;
        java.lang.String r1, r2, $r13, $r14, $r20;
        org.apache.logging.log4j.spi.LoggerRegistry $r3;
        org.apache.logging.log4j.util.PropertiesUtil $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.logging.log4j.Level $r10, $r11;
        java.io.FileOutputStream $r15;
        java.io.PrintStream $r16, r21;
        java.io.FileNotFoundException $r19;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLoggerContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.logging.log4j.spi.LoggerRegistry;

        specialinvoke $r3.<org.apache.logging.log4j.spi.LoggerRegistry: void <init>()>();

        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.spi.LoggerRegistry loggerRegistry> = $r3;

        $r4 = new org.apache.logging.log4j.util.PropertiesUtil;

        specialinvoke $r4.<org.apache.logging.log4j.util.PropertiesUtil: void <init>(java.lang.String)>("log4j2.simplelog.properties");

        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props> = $r4;

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        $z0 = virtualinvoke $r5.<org.apache.logging.log4j.util.PropertiesUtil: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.logging.log4j.simplelog.showContextMap", 0);

        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showContextMap> = $z0;

        $r6 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        $z1 = virtualinvoke $r6.<org.apache.logging.log4j.util.PropertiesUtil: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.logging.log4j.simplelog.showlogname", 0);

        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showLogName> = $z1;

        $r7 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        $z2 = virtualinvoke $r7.<org.apache.logging.log4j.util.PropertiesUtil: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.logging.log4j.simplelog.showShortLogname", 1);

        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showShortName> = $z2;

        $r8 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        $z3 = virtualinvoke $r8.<org.apache.logging.log4j.util.PropertiesUtil: boolean getBooleanProperty(java.lang.String,boolean)>("org.apache.logging.log4j.simplelog.showdatetime", 0);

        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showDateTime> = $z3;

        $r9 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        r1 = virtualinvoke $r9.<org.apache.logging.log4j.util.PropertiesUtil: java.lang.String getStringProperty(java.lang.String)>("org.apache.logging.log4j.simplelog.level");

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r11 = staticinvoke <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level toLevel(java.lang.String,org.apache.logging.log4j.Level)>(r1, $r10);

        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.Level defaultLevel> = $r11;

        $z4 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showDateTime>;

        if $z4 == 0 goto label1;

        $r17 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        $r20 = virtualinvoke $r17.<org.apache.logging.log4j.util.PropertiesUtil: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.apache.logging.log4j.simplelog.dateTimeFormat", "yyyy/MM/dd HH:mm:ss:SSS zzz");

        goto label2;

     label1:
        $r20 = null;

     label2:
        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: java.lang.String dateTimeFormat> = $r20;

        $r12 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        r2 = virtualinvoke $r12.<org.apache.logging.log4j.util.PropertiesUtil: java.lang.String getStringProperty(java.lang.String,java.lang.String)>("org.apache.logging.log4j.simplelog.logFile", "system.err");

        $r13 = "system.err";

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z5 == 0 goto label3;

        r21 = <java.lang.System: java.io.PrintStream err>;

        goto label7;

     label3:
        $r14 = "system.out";

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z6 == 0 goto label4;

        r21 = <java.lang.System: java.io.PrintStream out>;

        goto label7;

     label4:
        $r15 = new java.io.FileOutputStream;

        specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.lang.String)>(r2);

        $r16 = new java.io.PrintStream;

        specialinvoke $r16.<java.io.PrintStream: void <init>(java.io.OutputStream)>($r15);

        r21 = $r16;

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        r21 = <java.lang.System: java.io.PrintStream err>;

     label7:
        r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: java.io.PrintStream stream> = r21;

        return;

        catch java.io.FileNotFoundException from label4 to label5 with label6;
    }

    public org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String)
    {
        org.apache.logging.log4j.simple.SimpleLoggerContext r0;
        java.lang.String r1;
        org.apache.logging.log4j.spi.ExtendedLogger $r2;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLoggerContext;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String,org.apache.logging.log4j.message.MessageFactory)>(r1, null);

        return $r2;
    }

    public org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory)
    {
        org.apache.logging.log4j.simple.SimpleLoggerContext r0;
        java.lang.String r1, $r9;
        org.apache.logging.log4j.message.MessageFactory r2;
        org.apache.logging.log4j.spi.ExtendedLogger r3, $r13;
        org.apache.logging.log4j.spi.LoggerRegistry $r5, $r11, $r12;
        org.apache.logging.log4j.simple.SimpleLogger $r6;
        java.io.PrintStream $r7;
        org.apache.logging.log4j.util.PropertiesUtil $r8;
        boolean $z0, $z1, $z2, $z3;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLoggerContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.message.MessageFactory;

        $r5 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.spi.LoggerRegistry loggerRegistry>;

        r3 = virtualinvoke $r5.<org.apache.logging.log4j.spi.LoggerRegistry: org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String,org.apache.logging.log4j.message.MessageFactory)>(r1, r2);

        if r3 == null goto label1;

        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void checkMessageFactory(org.apache.logging.log4j.spi.ExtendedLogger,org.apache.logging.log4j.message.MessageFactory)>(r3, r2);

        return r3;

     label1:
        $r6 = new org.apache.logging.log4j.simple.SimpleLogger;

        $r10 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.Level defaultLevel>;

        $z3 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showLogName>;

        $z2 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showShortName>;

        $z1 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showDateTime>;

        $z0 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: boolean showContextMap>;

        $r9 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: java.lang.String dateTimeFormat>;

        $r8 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.util.PropertiesUtil props>;

        $r7 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: java.io.PrintStream stream>;

        specialinvoke $r6.<org.apache.logging.log4j.simple.SimpleLogger: void <init>(java.lang.String,org.apache.logging.log4j.Level,boolean,boolean,boolean,boolean,java.lang.String,org.apache.logging.log4j.message.MessageFactory,org.apache.logging.log4j.util.PropertiesUtil,java.io.PrintStream)>(r1, $r10, $z3, $z2, $z1, $z0, $r9, r2, $r8, $r7);

        $r11 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.spi.LoggerRegistry loggerRegistry>;

        virtualinvoke $r11.<org.apache.logging.log4j.spi.LoggerRegistry: void putIfAbsent(java.lang.String,org.apache.logging.log4j.message.MessageFactory,org.apache.logging.log4j.spi.ExtendedLogger)>(r1, r2, $r6);

        $r12 = r0.<org.apache.logging.log4j.simple.SimpleLoggerContext: org.apache.logging.log4j.spi.LoggerRegistry loggerRegistry>;

        $r13 = virtualinvoke $r12.<org.apache.logging.log4j.spi.LoggerRegistry: org.apache.logging.log4j.spi.ExtendedLogger getLogger(java.lang.String,org.apache.logging.log4j.message.MessageFactory)>(r1, r2);

        return $r13;
    }

    public boolean hasLogger(java.lang.String)
    {
        org.apache.logging.log4j.simple.SimpleLoggerContext r0;
        java.lang.String r1;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLoggerContext;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public boolean hasLogger(java.lang.String, org.apache.logging.log4j.message.MessageFactory)
    {
        org.apache.logging.log4j.simple.SimpleLoggerContext r0;
        java.lang.String r1;
        org.apache.logging.log4j.message.MessageFactory r2;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLoggerContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.message.MessageFactory;

        return 0;
    }

    public boolean hasLogger(java.lang.String, java.lang.Class)
    {
        org.apache.logging.log4j.simple.SimpleLoggerContext r0;
        java.lang.String r1;
        java.lang.Class r2;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLoggerContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        return 0;
    }

    public java.lang.Object getExternalContext()
    {
        org.apache.logging.log4j.simple.SimpleLoggerContext r0;

        r0 := @this: org.apache.logging.log4j.simple.SimpleLoggerContext;

        return null;
    }

    public static void <clinit>()
    {
        <org.apache.logging.log4j.simple.SimpleLoggerContext: java.lang.String SYSTEM_PREFIX> = "org.apache.logging.log4j.simplelog.";

        <org.apache.logging.log4j.simple.SimpleLoggerContext: java.lang.String DEFAULT_DATE_TIME_FORMAT> = "yyyy/MM/dd HH:mm:ss:SSS zzz";

        <org.apache.logging.log4j.simple.SimpleLoggerContext: java.lang.String SYSTEM_ERR> = "system.err";

        <org.apache.logging.log4j.simple.SimpleLoggerContext: java.lang.String SYSTEM_OUT> = "system.out";

        return;
    }
}
