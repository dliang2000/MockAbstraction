public class javassist.util.proxy.DefineClassHelper extends java.lang.Object
{
    private static final javassist.util.proxy.DefineClassHelper$Helper privileged;

    public static java.lang.Class toClass(java.lang.String, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain, byte[]) throws javassist.CannotCompileException
    {
        java.lang.String r0;
        java.lang.Class r1, $r7;
        java.lang.ClassLoader r2;
        java.security.ProtectionDomain r3;
        byte[] r4;
        java.lang.Throwable r5, $r17;
        int $i0;
        javassist.util.proxy.DefineClassHelper$Helper $r6;
        java.lang.Exception $r8;
        javassist.CannotCompileException $r9, $r10, $r13;
        java.lang.RuntimeException $r11;
        java.lang.ClassFormatError $r12;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.ClassLoader;

        r3 := @parameter3: java.security.ProtectionDomain;

        r4 := @parameter4: byte[];

     label1:
        $r6 = <javassist.util.proxy.DefineClassHelper: javassist.util.proxy.DefineClassHelper$Helper privileged>;

        $i0 = lengthof r4;

        $r7 = virtualinvoke $r6.<javassist.util.proxy.DefineClassHelper$Helper: java.lang.Class defineClass(java.lang.String,byte[],int,int,java.lang.Class,java.lang.ClassLoader,java.security.ProtectionDomain)>(r0, r4, 0, $i0, r1, r2, r3);

     label2:
        return $r7;

     label3:
        $r11 := @caughtexception;

        throw $r11;

     label4:
        $r10 := @caughtexception;

        throw $r10;

     label5:
        $r12 := @caughtexception;

        r5 = virtualinvoke $r12.<java.lang.ClassFormatError: java.lang.Throwable getCause()>();

        $r13 = new javassist.CannotCompileException;

        if r5 != null goto label6;

        $r17 = $r12;

        goto label7;

     label6:
        $r17 = r5;

     label7:
        specialinvoke $r13.<javassist.CannotCompileException: void <init>(java.lang.Throwable)>($r17);

        throw $r13;

     label8:
        $r8 := @caughtexception;

        $r9 = new javassist.CannotCompileException;

        specialinvoke $r9.<javassist.CannotCompileException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch javassist.CannotCompileException from label1 to label2 with label4;
        catch java.lang.ClassFormatError from label1 to label2 with label5;
        catch java.lang.Exception from label1 to label2 with label8;
    }

    public static java.lang.Class toClass(java.lang.Class, byte[]) throws javassist.CannotCompileException
    {
        java.lang.Class r0, $r3, $r7;
        byte[] r1;
        java.lang.invoke.MethodHandles$Lookup r2, r18;
        java.lang.Module $r4, $r5;
        java.lang.Exception $r8;
        javassist.CannotCompileException $r9;
        java.lang.StringBuilder $r10, $r12, $r13, $r15, $r16;
        java.lang.String $r11, $r14, $r17;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: byte[];

     label1:
        $r3 = class "Ljavassist/util/proxy/DefineClassHelper;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Module getModule()>();

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Module getModule()>();

        virtualinvoke $r4.<java.lang.Module: java.lang.Module addReads(java.lang.Module)>($r5);

        r18 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>();

        r2 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup privateLookupIn(java.lang.Class,java.lang.invoke.MethodHandles$Lookup)>(r0, r18);

        $r7 = virtualinvoke r2.<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>(r1);

     label2:
        return $r7;

     label3:
        $r8 := @caughtexception;

        $r9 = new javassist.CannotCompileException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r14 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no permission to define the class");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<javassist.CannotCompileException: void <init>(java.lang.String)>($r17);

        throw $r9;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static java.lang.Class toClass(java.lang.invoke.MethodHandles$Lookup, byte[]) throws javassist.CannotCompileException
    {
        java.lang.invoke.MethodHandles$Lookup r0;
        byte[] r1;
        java.lang.Class $r3;
        java.lang.Exception $r4;
        javassist.CannotCompileException $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.invoke.MethodHandles$Lookup;

        r1 := @parameter1: byte[];

     label1:
        $r3 = virtualinvoke r0.<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>(r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new javassist.CannotCompileException;

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r5.<javassist.CannotCompileException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    static java.lang.Class toPublicClass(java.lang.String, byte[]) throws javassist.CannotCompileException
    {
        java.lang.String r0;
        byte[] r1;
        java.lang.Class $r2;
        java.lang.Throwable $r3;
        javassist.CannotCompileException $r4;
        java.lang.invoke.MethodHandles$Lookup r5, r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

     label1:
        r5 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.MethodHandles$Lookup lookup()>();

        r6 = virtualinvoke r5.<java.lang.invoke.MethodHandles$Lookup: java.lang.invoke.MethodHandles$Lookup dropLookupMode(int)>(2);

        $r2 = virtualinvoke r6.<java.lang.invoke.MethodHandles$Lookup: java.lang.Class defineClass(byte[])>(r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new javassist.CannotCompileException;

        specialinvoke $r4.<javassist.CannotCompileException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void <init>()
    {
        javassist.util.proxy.DefineClassHelper r0;

        r0 := @this: javassist.util.proxy.DefineClassHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static javassist.util.proxy.DefineClassHelper$Helper access$400()
    {
        javassist.util.proxy.DefineClassHelper$Helper $r0;

        $r0 = <javassist.util.proxy.DefineClassHelper: javassist.util.proxy.DefineClassHelper$Helper privileged>;

        return $r0;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i2;
        javassist.util.proxy.DefineClassHelper$Helper $r2;
        javassist.util.proxy.DefineClassHelper$Java11 r3;
        javassist.util.proxy.DefineClassHelper$Java9 r4;
        javassist.util.proxy.DefineClassHelper$Java7 r5;
        javassist.util.proxy.DefineClassHelper$JavaOther r6;

        $i0 = <javassist.bytecode.ClassFile: int MAJOR_VERSION>;

        if $i0 <= 54 goto label1;

        r3 = new javassist.util.proxy.DefineClassHelper$Java11;

        $r2 = r3;

        specialinvoke r3.<javassist.util.proxy.DefineClassHelper$Java11: void <init>(javassist.util.proxy.DefineClassHelper$1)>(null);

        goto label4;

     label1:
        $i1 = <javassist.bytecode.ClassFile: int MAJOR_VERSION>;

        if $i1 < 53 goto label2;

        r4 = new javassist.util.proxy.DefineClassHelper$Java9;

        $r2 = r4;

        specialinvoke r4.<javassist.util.proxy.DefineClassHelper$Java9: void <init>()>();

        goto label4;

     label2:
        $i2 = <javassist.bytecode.ClassFile: int MAJOR_VERSION>;

        if $i2 < 51 goto label3;

        r5 = new javassist.util.proxy.DefineClassHelper$Java7;

        $r2 = r5;

        specialinvoke r5.<javassist.util.proxy.DefineClassHelper$Java7: void <init>(javassist.util.proxy.DefineClassHelper$1)>(null);

        goto label4;

     label3:
        r6 = new javassist.util.proxy.DefineClassHelper$JavaOther;

        $r2 = r6;

        specialinvoke r6.<javassist.util.proxy.DefineClassHelper$JavaOther: void <init>(javassist.util.proxy.DefineClassHelper$1)>(null);

     label4:
        <javassist.util.proxy.DefineClassHelper: javassist.util.proxy.DefineClassHelper$Helper privileged> = $r2;

        return;
    }
}
