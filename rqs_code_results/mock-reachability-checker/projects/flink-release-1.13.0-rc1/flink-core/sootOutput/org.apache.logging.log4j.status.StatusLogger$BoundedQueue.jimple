class org.apache.logging.log4j.status.StatusLogger$BoundedQueue extends java.util.concurrent.ConcurrentLinkedQueue
{
    private static final long serialVersionUID;
    private final int size;
    final org.apache.logging.log4j.status.StatusLogger this$0;

    void <init>(org.apache.logging.log4j.status.StatusLogger, int)
    {
        org.apache.logging.log4j.status.StatusLogger$BoundedQueue r0;
        org.apache.logging.log4j.status.StatusLogger r1;
        int i0;

        r0 := @this: org.apache.logging.log4j.status.StatusLogger$BoundedQueue;

        r1 := @parameter0: org.apache.logging.log4j.status.StatusLogger;

        i0 := @parameter1: int;

        r0.<org.apache.logging.log4j.status.StatusLogger$BoundedQueue: org.apache.logging.log4j.status.StatusLogger this$0> = r1;

        specialinvoke r0.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<org.apache.logging.log4j.status.StatusLogger$BoundedQueue: int size> = i0;

        return;
    }

    public boolean add(java.lang.Object)
    {
        org.apache.logging.log4j.status.StatusLogger$BoundedQueue r0;
        java.lang.Object r1;
        org.apache.logging.log4j.status.StatusLogger $r2, $r4;
        java.util.Queue $r3, $r5;
        int $i0, $i1, $i2;
        boolean $z1;

        r0 := @this: org.apache.logging.log4j.status.StatusLogger$BoundedQueue;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r1);

     label1:
        $r2 = r0.<org.apache.logging.log4j.status.StatusLogger$BoundedQueue: org.apache.logging.log4j.status.StatusLogger this$0>;

        $r3 = staticinvoke <org.apache.logging.log4j.status.StatusLogger: java.util.Queue access$000(org.apache.logging.log4j.status.StatusLogger)>($r2);

        $i0 = interfaceinvoke $r3.<java.util.Queue: int size()>();

        $i1 = r0.<org.apache.logging.log4j.status.StatusLogger$BoundedQueue: int size>;

        if $i0 <= $i1 goto label2;

        $r4 = r0.<org.apache.logging.log4j.status.StatusLogger$BoundedQueue: org.apache.logging.log4j.status.StatusLogger this$0>;

        $r5 = staticinvoke <org.apache.logging.log4j.status.StatusLogger: java.util.Queue access$000(org.apache.logging.log4j.status.StatusLogger)>($r4);

        interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

        goto label1;

     label2:
        $i2 = r0.<org.apache.logging.log4j.status.StatusLogger$BoundedQueue: int size>;

        if $i2 <= 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public static void <clinit>()
    {
        <org.apache.logging.log4j.status.StatusLogger$BoundedQueue: long serialVersionUID> = -3945953719763255337L;

        return;
    }
}
