class org.apache.flink.api.java.typeutils.TypeExtractorTest$8 extends org.apache.flink.api.common.functions.RichFlatJoinFunction
{
    private static final long serialVersionUID;
    final org.apache.flink.api.java.typeutils.TypeExtractorTest this$0;

    void <init>(org.apache.flink.api.java.typeutils.TypeExtractorTest)
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$8 r0;
        org.apache.flink.api.java.typeutils.TypeExtractorTest r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$8;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.TypeExtractorTest;

        r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$8: org.apache.flink.api.java.typeutils.TypeExtractorTest this$0> = r1;

        specialinvoke r0.<org.apache.flink.api.common.functions.RichFlatJoinFunction: void <init>()>();

        return;
    }

    public void join(org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple, java.lang.String, org.apache.flink.util.Collector) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$8 r0;
        org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple r1;
        java.lang.String r2;
        org.apache.flink.util.Collector r3;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$8;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.util.Collector;

        interfaceinvoke r3.<org.apache.flink.util.Collector: void collect(java.lang.Object)>(null);

        return;
    }

    public volatile void join(java.lang.Object, java.lang.Object, org.apache.flink.util.Collector) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$8 r0;
        java.lang.Object r1, r2;
        org.apache.flink.util.Collector r3;
        java.lang.String $r4;
        org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$8;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.util.Collector;

        $r5 = (org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple) r1;

        $r4 = (java.lang.String) r2;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$8: void join(org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple,java.lang.String,org.apache.flink.util.Collector)>($r5, $r4, r3);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.TypeExtractorTest$8: long serialVersionUID> = 1L;

        return;
    }
}
