public abstract class org.apache.logging.log4j.spi.AbstractLogger extends java.lang.Object implements org.apache.logging.log4j.spi.ExtendedLogger, org.apache.logging.log4j.spi.LocationAwareLogger, java.io.Serializable
{
    public static final org.apache.logging.log4j.Marker FLOW_MARKER;
    public static final org.apache.logging.log4j.Marker ENTRY_MARKER;
    public static final org.apache.logging.log4j.Marker EXIT_MARKER;
    public static final org.apache.logging.log4j.Marker EXCEPTION_MARKER;
    public static final org.apache.logging.log4j.Marker THROWING_MARKER;
    public static final org.apache.logging.log4j.Marker CATCHING_MARKER;
    public static final java.lang.Class DEFAULT_MESSAGE_FACTORY_CLASS;
    public static final java.lang.Class DEFAULT_FLOW_MESSAGE_FACTORY_CLASS;
    private static final long serialVersionUID;
    private static final java.lang.String FQCN;
    private static final java.lang.String THROWING;
    private static final java.lang.String CATCHING;
    protected final java.lang.String name;
    private final org.apache.logging.log4j.message.MessageFactory2 messageFactory;
    private final org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory;
    private static java.lang.ThreadLocal recursionDepthHolder;

    public void <init>()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Class $r1;
        java.lang.String $r2;
        org.apache.logging.log4j.message.MessageFactory2 $r3;
        org.apache.logging.log4j.message.FlowMessageFactory $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.String name> = $r2;

        $r3 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 createDefaultMessageFactory()>();

        r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory> = $r3;

        $r4 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory createDefaultFlowMessageFactory()>();

        r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory> = $r4;

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.message.MessageFactory2 $r2;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 createDefaultMessageFactory()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void <init>(java.lang.String,org.apache.logging.log4j.message.MessageFactory)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, org.apache.logging.log4j.message.MessageFactory)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.message.MessageFactory r2;
        org.apache.logging.log4j.message.FlowMessageFactory $r3;
        org.apache.logging.log4j.message.MessageFactory2 $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.message.MessageFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.String name> = r1;

        if r2 != null goto label1;

        $r5 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 createDefaultMessageFactory()>();

        goto label2;

     label1:
        $r5 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 narrow(org.apache.logging.log4j.message.MessageFactory)>(r2);

     label2:
        r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory> = $r5;

        $r3 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory createDefaultFlowMessageFactory()>();

        r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory> = $r3;

        return;
    }

    public static void checkMessageFactory(org.apache.logging.log4j.spi.ExtendedLogger, org.apache.logging.log4j.message.MessageFactory)
    {
        org.apache.logging.log4j.spi.ExtendedLogger r0;
        org.apache.logging.log4j.message.MessageFactory r1, r3;
        java.lang.String r2, $r8;
        java.lang.Class $r4, $r5, $r7;
        boolean $z0, $z1;
        org.apache.logging.log4j.status.StatusLogger $r6, $r9;

        r0 := @parameter0: org.apache.logging.log4j.spi.ExtendedLogger;

        r1 := @parameter1: org.apache.logging.log4j.message.MessageFactory;

        r2 = interfaceinvoke r0.<org.apache.logging.log4j.spi.ExtendedLogger: java.lang.String getName()>();

        r3 = interfaceinvoke r0.<org.apache.logging.log4j.spi.ExtendedLogger: org.apache.logging.log4j.message.MessageFactory getMessageFactory()>();

        if r1 == null goto label1;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $r9 = staticinvoke <org.apache.logging.log4j.status.StatusLogger: org.apache.logging.log4j.status.StatusLogger getLogger()>();

        virtualinvoke $r9.<org.apache.logging.log4j.status.StatusLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>("The Logger {} was created with the message factory {} and is now requested with the message factory {}, which may create log events with unexpected formatting.", r2, r3, r1);

        goto label2;

     label1:
        if r1 != null goto label2;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class DEFAULT_MESSAGE_FACTORY_CLASS>;

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r6 = staticinvoke <org.apache.logging.log4j.status.StatusLogger: org.apache.logging.log4j.status.StatusLogger getLogger()>();

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class DEFAULT_MESSAGE_FACTORY_CLASS>;

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<org.apache.logging.log4j.status.StatusLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>("The Logger {} was created with the message factory {} and is now requested with a null message factory (defaults to {}), which may create log events with unexpected formatting.", r2, r3, $r8);

     label2:
        return;
    }

    public void catching(org.apache.logging.log4j.Level, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.Throwable r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void catching(java.lang.String,org.apache.logging.log4j.Level,java.lang.Throwable)>($r3, r1, r2);

        return;
    }

    protected void catching(java.lang.String, org.apache.logging.log4j.Level, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Marker $r4, $r5;
        boolean $z0;
        org.apache.logging.log4j.message.Message $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker CATCHING_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r2, $r4, null, null);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker CATCHING_MARKER>;

        $r6 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.Message catchingMsg(java.lang.Throwable)>(r3);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, $r5, $r6, r3);

     label1:
        return;
    }

    public void catching(java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Throwable r1;
        org.apache.logging.log4j.Marker $r2, $r6;
        org.apache.logging.log4j.Level $r3, $r5;
        boolean $z0;
        java.lang.String $r4;
        org.apache.logging.log4j.message.Message $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Throwable;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker CATCHING_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, $r2, null, null);

        if $z0 == 0 goto label1;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker CATCHING_MARKER>;

        $r7 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.Message catchingMsg(java.lang.Throwable)>(r1);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r5, $r6, $r7, r1);

     label1:
        return;
    }

    protected org.apache.logging.log4j.message.Message catchingMsg(java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Throwable r1;
        org.apache.logging.log4j.message.MessageFactory2 $r2;
        org.apache.logging.log4j.message.Message $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r3 = interfaceinvoke $r2.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>("Catching");

        return $r3;
    }

    private static java.lang.Class createClassForProperty(java.lang.String, java.lang.Class, java.lang.Class)
    {
        java.lang.String r0, r3, $r8;
        java.lang.Class r1, r2, $r5, $r6;
        boolean $z0;
        org.apache.logging.log4j.util.PropertiesUtil $r4;
        java.lang.Throwable $r7;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Class;

     label1:
        $z0 = <org.apache.logging.log4j.util.Constants: boolean ENABLE_THREADLOCALS>;

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        goto label3;

     label2:
        $r8 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

     label3:
        $r4 = staticinvoke <org.apache.logging.log4j.util.PropertiesUtil: org.apache.logging.log4j.util.PropertiesUtil getProperties()>();

        r3 = virtualinvoke $r4.<org.apache.logging.log4j.util.PropertiesUtil: java.lang.String getStringProperty(java.lang.String,java.lang.String)>(r0, $r8);

        $r5 = staticinvoke <org.apache.logging.log4j.util.LoaderUtil: java.lang.Class loadClass(java.lang.String)>(r3);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/logging/log4j/message/MessageFactory;");

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        return r2;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    private static java.lang.Class createFlowClassForProperty(java.lang.String, java.lang.Class)
    {
        java.lang.String r0, $r3, r7;
        java.lang.Class r1, $r4, $r5;
        org.apache.logging.log4j.util.PropertiesUtil $r2;
        java.lang.Throwable $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

     label1:
        $r2 = staticinvoke <org.apache.logging.log4j.util.PropertiesUtil: org.apache.logging.log4j.util.PropertiesUtil getProperties()>();

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        r7 = virtualinvoke $r2.<org.apache.logging.log4j.util.PropertiesUtil: java.lang.String getStringProperty(java.lang.String,java.lang.String)>(r0, $r3);

        $r4 = staticinvoke <org.apache.logging.log4j.util.LoaderUtil: java.lang.Class loadClass(java.lang.String)>(r7);

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/apache/logging/log4j/message/FlowMessageFactory;");

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static org.apache.logging.log4j.message.MessageFactory2 createDefaultMessageFactory()
    {
        java.lang.Class $r0;
        java.lang.Object $r1;
        org.apache.logging.log4j.message.MessageFactory2 $r2;
        java.lang.ReflectiveOperationException $r3;
        java.lang.IllegalStateException $r4;
        org.apache.logging.log4j.message.MessageFactory r5;

     label1:
        $r0 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class DEFAULT_MESSAGE_FACTORY_CLASS>;

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.Object newInstance()>();

        r5 = (org.apache.logging.log4j.message.MessageFactory) $r1;

        $r2 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 narrow(org.apache.logging.log4j.message.MessageFactory)>(r5);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    private static org.apache.logging.log4j.message.MessageFactory2 narrow(org.apache.logging.log4j.message.MessageFactory)
    {
        org.apache.logging.log4j.message.MessageFactory r0;
        boolean $z0;
        org.apache.logging.log4j.spi.MessageFactory2Adapter $r1;
        org.apache.logging.log4j.message.MessageFactory2 $r2;

        r0 := @parameter0: org.apache.logging.log4j.message.MessageFactory;

        $z0 = r0 instanceof org.apache.logging.log4j.message.MessageFactory2;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.logging.log4j.message.MessageFactory2) r0;

        return $r2;

     label1:
        $r1 = new org.apache.logging.log4j.spi.MessageFactory2Adapter;

        specialinvoke $r1.<org.apache.logging.log4j.spi.MessageFactory2Adapter: void <init>(org.apache.logging.log4j.message.MessageFactory)>(r0);

        return $r1;
    }

    private static org.apache.logging.log4j.message.FlowMessageFactory createDefaultFlowMessageFactory()
    {
        java.lang.Class $r1;
        java.lang.Object $r2;
        org.apache.logging.log4j.message.FlowMessageFactory $r3;
        java.lang.ReflectiveOperationException $r4;
        java.lang.IllegalStateException $r5;

     label1:
        $r1 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class DEFAULT_FLOW_MESSAGE_FACTORY_CLASS>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (org.apache.logging.log4j.message.FlowMessageFactory) $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label3;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        if r2 == null goto label1;

        $r8 = interfaceinvoke r2.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, r2, $r8);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        if r1 == null goto label1;

        $r6 = interfaceinvoke r1.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, $r2, null, r1, $r6);

        return;
    }

    public void debug(org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void debug(java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void debug(java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public transient void debug(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void debug(org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void debug(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        org.apache.logging.log4j.util.Supplier[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public transient void debug(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        org.apache.logging.log4j.util.Supplier[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void debug(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r5, r1, r2, r3, r4);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, r1, r2, r3, r4, r5);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r9;
        java.lang.Object r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r11;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r12;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r13;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void debug(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r14;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
        org.apache.logging.log4j.Level $r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r14 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r13 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void debug(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r5, null, r1, r2, r3, r4);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, null, r1, r2, r3, r4, r5);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, null, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, null, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, null, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r11;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, null, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void debug(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r13;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    protected transient org.apache.logging.log4j.message.EntryMessage enter(java.lang.String, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r2;
        org.apache.logging.log4j.util.Supplier[] r3;
        org.apache.logging.log4j.Marker $r4, $r7;
        org.apache.logging.log4j.Level $r5, $r6;
        boolean $z0;
        org.apache.logging.log4j.message.EntryMessage $r8, r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        r9 = null;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, null, null);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $r8 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String,org.apache.logging.log4j.util.Supplier[])>(r2, r3);

        r9 = $r8;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r6, $r7, $r8, null);

     label1:
        return r9;
    }

    protected transient org.apache.logging.log4j.message.EntryMessage enter(java.lang.String, java.lang.String, org.apache.logging.log4j.util.MessageSupplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r2;
        org.apache.logging.log4j.util.MessageSupplier[] r3;
        org.apache.logging.log4j.Marker $r4, $r7;
        org.apache.logging.log4j.Level $r5, $r6;
        boolean $z0;
        org.apache.logging.log4j.message.EntryMessage $r8, r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.MessageSupplier[];

        r9 = null;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, null, null);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $r8 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String,org.apache.logging.log4j.util.MessageSupplier[])>(r2, r3);

        r9 = $r8;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r6, $r7, $r8, null);

     label1:
        return r9;
    }

    protected transient org.apache.logging.log4j.message.EntryMessage enter(java.lang.String, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r2;
        java.lang.Object[] r3;
        org.apache.logging.log4j.Marker $r4, $r7;
        org.apache.logging.log4j.Level $r5, $r6;
        boolean $z0;
        org.apache.logging.log4j.message.EntryMessage $r8, r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        r9 = null;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, null, null);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $r8 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String,java.lang.Object[])>(r2, r3);

        r9 = $r8;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r6, $r7, $r8, null);

     label1:
        return r9;
    }

    protected org.apache.logging.log4j.message.EntryMessage enter(java.lang.String, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        org.apache.logging.log4j.Marker $r3, $r6;
        org.apache.logging.log4j.Level $r4, $r5;
        boolean $z0;
        org.apache.logging.log4j.message.FlowMessageFactory $r7;
        org.apache.logging.log4j.message.Message $r8;
        org.apache.logging.log4j.message.EntryMessage $r9, r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r10 = null;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, null);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $r7 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r8 = interfaceinvoke r2.<org.apache.logging.log4j.util.MessageSupplier: org.apache.logging.log4j.message.Message get()>();

        $r9 = interfaceinvoke $r7.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.EntryMessage newEntryMessage(org.apache.logging.log4j.message.Message)>($r8);

        r10 = $r9;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r5, $r6, $r9, null);

     label1:
        return r10;
    }

    protected org.apache.logging.log4j.message.EntryMessage enter(java.lang.String, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.message.Message r2;
        org.apache.logging.log4j.Marker $r3, $r7;
        org.apache.logging.log4j.Level $r4, $r6;
        boolean $z0;
        org.apache.logging.log4j.message.FlowMessageFactory $r5;
        org.apache.logging.log4j.message.EntryMessage $r8, r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r9 = null;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, null);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $r5 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r8 = interfaceinvoke $r5.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.EntryMessage newEntryMessage(org.apache.logging.log4j.message.Message)>(r2);

        r9 = $r8;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r6, $r7, $r8, null);

     label1:
        return r9;
    }

    public void entry()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r1 = (java.lang.Object[]) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void entry(java.lang.String,java.lang.Object[])>($r2, $r1);

        return;
    }

    public transient void entry(java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object[] r1;
        java.lang.String $r2;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object[];

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void entry(java.lang.String,java.lang.Object[])>($r2, r1);

        return;
    }

    protected transient void entry(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Marker $r3, $r6, $r10;
        org.apache.logging.log4j.Level $r4, $r5, $r9;
        boolean $z0;
        org.apache.logging.log4j.message.EntryMessage $r7, $r11;
        org.apache.logging.log4j.util.Supplier[] $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, null);

        if $z0 == 0 goto label2;

        if r2 != null goto label1;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $r8 = (org.apache.logging.log4j.util.Supplier[]) null;

        $r11 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String,org.apache.logging.log4j.util.Supplier[])>(null, $r8);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r9, $r10, $r11, null);

        goto label2;

     label1:
        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER>;

        $r7 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String,java.lang.Object[])>(null, r2);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r5, $r6, $r7, null);

     label2:
        return;
    }

    protected transient org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r23;
        java.lang.Object[] r2;
        int i0, $i1, i2;
        java.lang.Object r4;
        java.lang.StringBuilder $r5;
        org.apache.logging.log4j.message.SimpleMessage $r8, $r18;
        org.apache.logging.log4j.message.FlowMessageFactory $r9, $r16, $r19, $r21;
        org.apache.logging.log4j.message.EntryMessage $r10, $r17, $r20, $r22;
        boolean $z0, $z1;
        org.apache.logging.log4j.message.Message $r12;
        org.apache.logging.log4j.message.ParameterizedMessage $r15;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        if r2 != null goto label01;

        $i1 = 0;

        goto label02;

     label01:
        $i1 = lengthof r2;

     label02:
        i0 = $i1;

        if $i1 != 0 goto label04;

        $z1 = staticinvoke <org.apache.logging.log4j.util.Strings: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label03;

        $r21 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r22 = interfaceinvoke $r21.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.EntryMessage newEntryMessage(org.apache.logging.log4j.message.Message)>(null);

        return $r22;

     label03:
        $r19 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r18 = new org.apache.logging.log4j.message.SimpleMessage;

        specialinvoke $r18.<org.apache.logging.log4j.message.SimpleMessage: void <init>(java.lang.String)>(r1);

        $r20 = interfaceinvoke $r19.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.EntryMessage newEntryMessage(org.apache.logging.log4j.message.Message)>($r18);

        return $r20;

     label04:
        if r1 == null goto label05;

        $r16 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r15 = new org.apache.logging.log4j.message.ParameterizedMessage;

        specialinvoke $r15.<org.apache.logging.log4j.message.ParameterizedMessage: void <init>(java.lang.String,java.lang.Object[])>(r1, r2);

        $r17 = interfaceinvoke $r16.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.EntryMessage newEntryMessage(org.apache.logging.log4j.message.Message)>($r15);

        return $r17;

     label05:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("params(");

        i2 = 0;

     label06:
        if i2 >= i0 goto label10;

        if i2 <= 0 goto label07;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label07:
        r4 = r2[i2];

        $z0 = r4 instanceof org.apache.logging.log4j.message.Message;

        if $z0 == 0 goto label08;

        $r12 = (org.apache.logging.log4j.message.Message) r4;

        $r23 = interfaceinvoke $r12.<org.apache.logging.log4j.message.Message: java.lang.String getFormattedMessage()>();

        goto label09;

     label08:
        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

     label09:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        i2 = i2 + 1;

        goto label06;

     label10:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r9 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r8 = new org.apache.logging.log4j.message.SimpleMessage;

        specialinvoke $r8.<org.apache.logging.log4j.message.SimpleMessage: void <init>(java.lang.CharSequence)>($r5);

        $r10 = interfaceinvoke $r9.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.EntryMessage newEntryMessage(org.apache.logging.log4j.message.Message)>($r8);

        return $r10;
    }

    protected transient org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String, org.apache.logging.log4j.util.MessageSupplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r11;
        org.apache.logging.log4j.util.MessageSupplier[] r2;
        int i0, $i1, $i2, i3;
        java.lang.Object[] r3;
        org.apache.logging.log4j.message.EntryMessage $r4;
        org.apache.logging.log4j.util.MessageSupplier $r5;
        org.apache.logging.log4j.message.Message $r6, $r9;
        java.lang.Object $r7, $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier[];

        if r2 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = lengthof r2;

     label2:
        i0 = $i2;

        r3 = newarray (java.lang.Object)[$i2];

        i3 = 0;

     label3:
        if i3 >= i0 goto label6;

        $r5 = r2[i3];

        $r6 = interfaceinvoke $r5.<org.apache.logging.log4j.util.MessageSupplier: org.apache.logging.log4j.message.Message get()>();

        r3[i3] = $r6;

        $i1 = i3;

        $r7 = r3[i3];

        if $r7 == null goto label4;

        $r8 = r3[i3];

        $r9 = (org.apache.logging.log4j.message.Message) $r8;

        $r11 = interfaceinvoke $r9.<org.apache.logging.log4j.message.Message: java.lang.String getFormattedMessage()>();

        goto label5;

     label4:
        $r11 = null;

     label5:
        r3[$i1] = $r11;

        i3 = i3 + 1;

        goto label3;

     label6:
        $r4 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String,java.lang.Object[])>(r1, r3);

        return $r4;
    }

    protected transient org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r10;
        org.apache.logging.log4j.util.Supplier[] r2;
        int i0, $i1, i2;
        java.lang.Object[] r3;
        org.apache.logging.log4j.message.EntryMessage $r4;
        org.apache.logging.log4j.util.Supplier $r5;
        java.lang.Object $r6, $r7, $r8;
        boolean $z0;
        org.apache.logging.log4j.message.Message $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        if r2 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = lengthof r2;

     label2:
        i0 = $i1;

        r3 = newarray (java.lang.Object)[$i1];

        i2 = 0;

     label3:
        if i2 >= i0 goto label5;

        $r5 = r2[i2];

        $r6 = interfaceinvoke $r5.<org.apache.logging.log4j.util.Supplier: java.lang.Object get()>();

        r3[i2] = $r6;

        $r7 = r3[i2];

        $z0 = $r7 instanceof org.apache.logging.log4j.message.Message;

        if $z0 == 0 goto label4;

        $r8 = r3[i2];

        $r9 = (org.apache.logging.log4j.message.Message) $r8;

        $r10 = interfaceinvoke $r9.<org.apache.logging.log4j.message.Message: java.lang.String getFormattedMessage()>();

        r3[i2] = $r10;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        $r4 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage entryMsg(java.lang.String,java.lang.Object[])>(r1, r3);

        return $r4;
    }

    public void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        if r2 == null goto label1;

        $r8 = interfaceinvoke r2.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, r2, $r8);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        if r1 == null goto label1;

        $r6 = interfaceinvoke r1.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, $r2, null, r1, $r6);

        return;
    }

    public void error(org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void error(java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void error(java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public transient void error(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void error(org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void error(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        org.apache.logging.log4j.util.Supplier[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public transient void error(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        org.apache.logging.log4j.util.Supplier[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void error(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r5, r1, r2, r3, r4);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, r1, r2, r3, r4, r5);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r9;
        java.lang.Object r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r11;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r12;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r13;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void error(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r14;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
        org.apache.logging.log4j.Level $r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r14 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r13 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void error(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r5, null, r1, r2, r3, r4);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, null, r1, r2, r3, r4, r5);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, null, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, null, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, null, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r11;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, null, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void error(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r13;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void exit()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String $r1;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.Object exit(java.lang.String,java.lang.Object)>($r1, null);

        return;
    }

    public java.lang.Object exit(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.Object exit(java.lang.String,java.lang.Object)>($r2, r1);

        return $r3;
    }

    protected java.lang.Object exit(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.CharSequence $r3;
        org.apache.logging.log4j.Marker $r4, $r7;
        org.apache.logging.log4j.Level $r5, $r6;
        boolean $z0;
        org.apache.logging.log4j.message.Message $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $r3 = (java.lang.CharSequence) null;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, $r4, $r3, null);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $r8 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.Message exitMsg(java.lang.String,java.lang.Object)>(null, r2);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r6, $r7, $r8, null);

     label1:
        return r2;
    }

    protected java.lang.Object exit(java.lang.String, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r2;
        java.lang.Object r3;
        java.lang.CharSequence $r4;
        org.apache.logging.log4j.Marker $r5, $r8;
        org.apache.logging.log4j.Level $r6, $r7;
        boolean $z0;
        org.apache.logging.log4j.message.Message $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $r4 = (java.lang.CharSequence) null;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r6, $r5, $r4, null);

        if $z0 == 0 goto label1;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $r9 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.Message exitMsg(java.lang.String,java.lang.Object)>(r2, r3);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r7, $r8, $r9, null);

     label1:
        return r3;
    }

    protected org.apache.logging.log4j.message.Message exitMsg(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r7, $r14, $r20;
        java.lang.Object r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r11, $r12, $r13, $r16, $r18, $r19;
        org.apache.logging.log4j.message.MessageFactory2 $r4, $r10, $r17, $r22;
        org.apache.logging.log4j.message.Message $r8, $r15, $r21, $r23;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r2 != null goto label2;

        if r1 != null goto label1;

        $r22 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r23 = interfaceinvoke $r22.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>("Exit");

        return $r23;

     label1:
        $r17 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exit: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = interfaceinvoke $r17.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>($r20);

        return $r21;

     label2:
        if r1 != null goto label3;

        $r10 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exit with(");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = interfaceinvoke $r10.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>($r14);

        return $r15;

     label3:
        $r4 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exit: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = interfaceinvoke $r4.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object)>($r7, r2);

        return $r8;
    }

    public void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        if r2 == null goto label1;

        $r8 = interfaceinvoke r2.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, r2, $r8);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        if r1 == null goto label1;

        $r6 = interfaceinvoke r1.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, $r2, null, r1, $r6);

        return;
    }

    public void fatal(org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void fatal(java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void fatal(java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public transient void fatal(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void fatal(org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void fatal(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        org.apache.logging.log4j.util.Supplier[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public transient void fatal(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        org.apache.logging.log4j.util.Supplier[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void fatal(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r5, r1, r2, r3, r4);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, r1, r2, r3, r4, r5);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r9;
        java.lang.Object r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r11;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r12;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r13;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void fatal(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r14;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
        org.apache.logging.log4j.Level $r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r14 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r13 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r5, null, r1, r2, r3, r4);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, null, r1, r2, r3, r4, r5);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, null, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, null, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, null, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r11;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, null, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void fatal(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r13;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public org.apache.logging.log4j.message.MessageFactory getMessageFactory()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.MessageFactory2 $r1;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        return $r1;
    }

    public java.lang.String getName()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String $r1;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.String name>;

        return $r1;
    }

    public void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        if r2 == null goto label1;

        $r8 = interfaceinvoke r2.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, r2, $r8);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        if r1 == null goto label1;

        $r6 = interfaceinvoke r1.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, $r2, null, r1, $r6);

        return;
    }

    public void info(org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void info(java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void info(java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public transient void info(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void info(org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void info(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        org.apache.logging.log4j.util.Supplier[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public transient void info(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        org.apache.logging.log4j.util.Supplier[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void info(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r5, r1, r2, r3, r4);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, r1, r2, r3, r4, r5);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r9;
        java.lang.Object r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r11;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r12;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r13;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void info(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r14;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
        org.apache.logging.log4j.Level $r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r14 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r13 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void info(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r5, null, r1, r2, r3, r4);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, null, r1, r2, r3, r4, r5);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, null, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, null, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, null, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r11;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, null, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void info(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r13;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public boolean isDebugEnabled()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>($r1, null, null);

        return $z0;
    }

    public boolean isDebugEnabled(org.apache.logging.log4j.Marker)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r2, r1, null, null);

        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r1, null, null, null);

        return $z0;
    }

    public boolean isEnabled(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r1, r2, null, null);

        return $z0;
    }

    public boolean isErrorEnabled()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r1, null, null, null);

        return $z0;
    }

    public boolean isErrorEnabled(org.apache.logging.log4j.Marker)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r2, r1, null, null);

        return $z0;
    }

    public boolean isFatalEnabled()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r1, null, null, null);

        return $z0;
    }

    public boolean isFatalEnabled(org.apache.logging.log4j.Marker)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r2, r1, null, null);

        return $z0;
    }

    public boolean isInfoEnabled()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r1, null, null, null);

        return $z0;
    }

    public boolean isInfoEnabled(org.apache.logging.log4j.Marker)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r2, r1, null, null);

        return $z0;
    }

    public boolean isTraceEnabled()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r1, null, null, null);

        return $z0;
    }

    public boolean isTraceEnabled(org.apache.logging.log4j.Marker)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r2, r1, null, null);

        return $z0;
    }

    public boolean isWarnEnabled()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level $r1;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r1, null, null, null);

        return $z0;
    }

    public boolean isWarnEnabled(org.apache.logging.log4j.Marker)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.Level $r2;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r2, r1, null, null);

        return $z0;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        org.apache.logging.log4j.message.Message r3;
        java.lang.String $r4;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: org.apache.logging.log4j.message.Message;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        if r3 == null goto label1;

        $r9 = interfaceinvoke r3.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r9 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, r1, r2, r3, $r9);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        org.apache.logging.log4j.message.Message r3;
        java.lang.Throwable r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: org.apache.logging.log4j.message.Message;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, r1, r2, r3, r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.CharSequence r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.CharSequence;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, r1, r2, r3, $r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.CharSequence r3;
        java.lang.Throwable r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.CharSequence;

        r4 := @parameter3: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>(r1, r2, r3, r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, r1, r2, r3, r4);

     label1:
        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.Object r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, r1, r2, r3, $r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.Object r3;
        java.lang.Throwable r4;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r1, r2, r3, r4);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, r1, r2, r3, r4);

     label1:
        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r5;
        java.lang.Throwable $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, r1, r2, r3, $r4);

        return;
    }

    public transient void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r5;
        java.lang.Object[] r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, r1, r2, r3, r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r5;
        java.lang.Throwable r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, r1, r2, r3, r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.String $r3;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        if r2 == null goto label1;

        $r7 = interfaceinvoke r2.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r7 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, r1, null, r2, $r7);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.Throwable r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.CharSequence r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.CharSequence;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r3, r1, null, r2, null);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.CharSequence r2;
        java.lang.Throwable r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.Object r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, r1, null, r2, null);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r4;
        java.lang.Throwable $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, r1, null, r2, $r3);

        return;
    }

    public transient void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r4;
        java.lang.Object[] r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r4;
        java.lang.Throwable r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, r1, null, r2, $r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        org.apache.logging.log4j.util.Supplier r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, r1, r2, r3, $r4);

        return;
    }

    public transient void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r5;
        org.apache.logging.log4j.util.Supplier[] r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.logging.log4j.util.Supplier[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r5, r1, r2, r3, r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        org.apache.logging.log4j.util.Supplier r3;
        java.lang.Throwable r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, r1, r2, r3, r4);

        return;
    }

    public transient void log(org.apache.logging.log4j.Level, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r4;
        org.apache.logging.log4j.util.Supplier[] r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        org.apache.logging.log4j.util.MessageSupplier r3;
        java.lang.Throwable $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: org.apache.logging.log4j.util.MessageSupplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, r1, r2, r3, $r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        org.apache.logging.log4j.util.MessageSupplier r3;
        java.lang.Throwable r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: org.apache.logging.log4j.util.MessageSupplier;

        r4 := @parameter3: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, r1, r2, r3, r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, r1, null, r2, $r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r5;
        java.lang.Object r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, r1, r2, r3, r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r6;
        java.lang.Object r4, r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, r1, r2, r3, r4, r5);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r7;
        java.lang.Object r4, r5, r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r8;
        java.lang.Object r4, r5, r6, r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r9;
        java.lang.Object r4, r5, r6, r7, r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r10;
        java.lang.Object r4, r5, r6, r7, r8, r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r11;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r12;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10, r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r13;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10, r11, r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r14;
        java.lang.Object r4, r5, r6, r7, r8, r9, r10, r11, r12, r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        r13 := @parameter12: java.lang.Object;

        $r14 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r4;
        java.lang.Object r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, r1, null, r2, r3);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r5;
        java.lang.Object r3, r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, r1, null, r2, r3, r4);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4, r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, r1, null, r2, r3, r4, r5);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5, r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, r1, null, r2, r3, r4, r5, r6);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6, r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, r1, null, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r9;
        java.lang.Object r3, r4, r5, r6, r7, r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, r1, null, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, r1, null, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r11;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, r1, null, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r12;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, r1, null, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void log(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r13;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, r1, null, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.message.Message r4;
        java.lang.Throwable r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.message.Message;

        r5 := @parameter4: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.util.MessageSupplier r4;
        java.lang.Throwable r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.util.MessageSupplier;

        r5 := @parameter4: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r4;
        java.lang.Throwable r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.CharSequence r4;
        java.lang.Throwable r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.CharSequence;

        r5 := @parameter4: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.util.Supplier r4;
        java.lang.Throwable r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.util.Supplier;

        r5 := @parameter4: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>(r2, r3, r4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>(r1, r2, r3, r4);

     label1:
        return;
    }

    public transient void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.util.Supplier[] r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.logging.log4j.util.Supplier[];

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String)>(r2, r3, r4);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public transient void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object[] r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7, r8);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7, r8, r9);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7, r8, r9, r10);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11, r12;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11, r12, r13;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        r13 := @parameter12: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        r13 := @parameter12: java.lang.Object;

        r14 := @parameter13: java.lang.Object;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14);

     label1:
        return;
    }

    public void logIfEnabled(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Throwable r5;
        boolean $z0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Throwable;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>(r2, r3, r4, r5);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>(r1, r2, r3, r4, r5);

     label1:
        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.CharSequence r4;
        java.lang.Throwable r5;
        org.apache.logging.log4j.message.MessageFactory2 $r6;
        org.apache.logging.log4j.message.Message $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.CharSequence;

        r5 := @parameter4: java.lang.Throwable;

        $r6 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r7 = interfaceinvoke $r6.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.CharSequence)>(r4);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, $r7, r5);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r4;
        java.lang.Throwable r5;
        org.apache.logging.log4j.message.MessageFactory2 $r6;
        org.apache.logging.log4j.message.Message $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Throwable;

        $r6 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r7 = interfaceinvoke $r6.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.Object)>(r4);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, $r7, r5);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.util.MessageSupplier r4;
        java.lang.Throwable r5, $r12;
        org.apache.logging.log4j.message.Message r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.util.MessageSupplier;

        r5 := @parameter4: java.lang.Throwable;

        r6 = staticinvoke <org.apache.logging.log4j.util.LambdaUtil: org.apache.logging.log4j.message.Message get(org.apache.logging.log4j.util.MessageSupplier)>(r4);

        if r5 != null goto label1;

        if r6 == null goto label1;

        $r12 = interfaceinvoke r6.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r12 = r5;

     label2:
        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r6, $r12);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.util.Supplier r4;
        java.lang.Throwable r5, $r13;
        org.apache.logging.log4j.message.Message r6;
        org.apache.logging.log4j.message.MessageFactory2 $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.util.Supplier;

        r5 := @parameter4: java.lang.Throwable;

        $r7 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r6 = staticinvoke <org.apache.logging.log4j.util.LambdaUtil: org.apache.logging.log4j.message.Message getMessage(org.apache.logging.log4j.util.Supplier,org.apache.logging.log4j.message.MessageFactory)>(r4, $r7);

        if r5 != null goto label1;

        if r6 == null goto label1;

        $r13 = interfaceinvoke r6.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r13 = r5;

     label2:
        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r6, $r13);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Throwable r5;
        org.apache.logging.log4j.message.MessageFactory2 $r6;
        org.apache.logging.log4j.message.Message $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Throwable;

        $r6 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r7 = interfaceinvoke $r6.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>(r4);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, $r7, r5);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.message.Message r5;
        org.apache.logging.log4j.message.MessageFactory2 $r6;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        $r6 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r5 = interfaceinvoke $r6.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>(r4);

        $r7 = interfaceinvoke r5.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r5, $r7);

        return;
    }

    protected transient void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object[] r5;
        org.apache.logging.log4j.message.Message r6;
        org.apache.logging.log4j.message.MessageFactory2 $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object[];

        $r7 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r6 = interfaceinvoke $r7.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object[])>(r4, r5);

        $r8 = interfaceinvoke r6.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r6, $r8);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5;
        org.apache.logging.log4j.message.Message r6;
        org.apache.logging.log4j.message.MessageFactory2 $r7;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        $r7 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r6 = interfaceinvoke $r7.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object)>(r4, r5);

        $r8 = interfaceinvoke r6.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r6, $r8);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6;
        org.apache.logging.log4j.message.Message r7;
        org.apache.logging.log4j.message.MessageFactory2 $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r7 = interfaceinvoke $r8.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object)>(r4, r5, r6);

        $r9 = interfaceinvoke r7.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r7, $r9);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7;
        org.apache.logging.log4j.message.Message r8;
        org.apache.logging.log4j.message.MessageFactory2 $r9;
        java.lang.Throwable $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r8 = interfaceinvoke $r9.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7);

        $r10 = interfaceinvoke r8.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r8, $r10);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8;
        org.apache.logging.log4j.message.Message r9;
        org.apache.logging.log4j.message.MessageFactory2 $r10;
        java.lang.Throwable $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r9 = interfaceinvoke $r10.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7, r8);

        $r11 = interfaceinvoke r9.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r9, $r11);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9;
        org.apache.logging.log4j.message.Message r10;
        org.apache.logging.log4j.message.MessageFactory2 $r11;
        java.lang.Throwable $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r10 = interfaceinvoke $r11.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7, r8, r9);

        $r12 = interfaceinvoke r10.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r10, $r12);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.message.Message r11;
        org.apache.logging.log4j.message.MessageFactory2 $r12;
        java.lang.Throwable $r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r11 = interfaceinvoke $r12.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7, r8, r9, r10);

        $r13 = interfaceinvoke r11.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r11, $r13);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.message.Message r12;
        org.apache.logging.log4j.message.MessageFactory2 $r13;
        java.lang.Throwable $r14;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r12 = interfaceinvoke $r13.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7, r8, r9, r10, r11);

        $r14 = interfaceinvoke r12.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r12, $r14);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11, r12;
        org.apache.logging.log4j.message.Message r13;
        org.apache.logging.log4j.message.MessageFactory2 $r14;
        java.lang.Throwable $r15;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r14 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r13 = interfaceinvoke $r14.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7, r8, r9, r10, r11, r12);

        $r15 = interfaceinvoke r13.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r13, $r15);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11, r12, r13;
        org.apache.logging.log4j.message.Message r14;
        org.apache.logging.log4j.message.MessageFactory2 $r15;
        java.lang.Throwable $r16;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        r13 := @parameter12: java.lang.Object;

        $r15 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r14 = interfaceinvoke $r15.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13);

        $r16 = interfaceinvoke r14.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r14, $r16);

        return;
    }

    protected void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        java.lang.Object r5, r6, r7, r8, r9, r10, r11, r12, r13, r14;
        org.apache.logging.log4j.message.Message r15;
        org.apache.logging.log4j.message.MessageFactory2 $r16;
        java.lang.Throwable $r17;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        r13 := @parameter12: java.lang.Object;

        r14 := @parameter13: java.lang.Object;

        $r16 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        r15 = interfaceinvoke $r16.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14);

        $r17 = interfaceinvoke r15.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r15, $r17);

        return;
    }

    protected transient void logMessage(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, r4;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.util.Supplier[] r5;
        org.apache.logging.log4j.message.Message r6;
        org.apache.logging.log4j.message.MessageFactory2 $r7;
        java.lang.Object[] $r8;
        java.lang.Throwable $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.logging.log4j.util.Supplier[];

        $r7 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r8 = staticinvoke <org.apache.logging.log4j.util.LambdaUtil: java.lang.Object[] getAll(org.apache.logging.log4j.util.Supplier[])>(r5);

        r6 = interfaceinvoke $r7.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object[])>(r4, $r8);

        $r9 = interfaceinvoke r6.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r6, $r9);

        return;
    }

    public void logMessage(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.StackTraceElement r4;
        org.apache.logging.log4j.message.Message r5;
        java.lang.Throwable r6, $r9;
        java.lang.Exception $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.StackTraceElement;

        r5 := @parameter4: org.apache.logging.log4j.message.Message;

        r6 := @parameter5: java.lang.Throwable;

     label1:
        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void incrementRecursionDepth()>();

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void log(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.StackTraceElement,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r4, r5, r6);

     label2:
        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void decrementRecursionDepth()>();

        staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: void release(org.apache.logging.log4j.message.Message)>(r5);

        goto label7;

     label3:
        $r10 := @caughtexception;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void handleLogMessageException(java.lang.Exception,java.lang.String,org.apache.logging.log4j.message.Message)>($r10, r3, r5);

     label4:
        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void decrementRecursionDepth()>();

        staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: void release(org.apache.logging.log4j.message.Message)>(r5);

        goto label7;

     label5:
        $r9 := @caughtexception;

     label6:
        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void decrementRecursionDepth()>();

        staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: void release(org.apache.logging.log4j.message.Message)>(r5);

        throw $r9;

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void log(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3;
        java.lang.StackTraceElement r4;
        org.apache.logging.log4j.message.Message r5;
        java.lang.Throwable r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.StackTraceElement;

        r5 := @parameter4: org.apache.logging.log4j.message.Message;

        r6 := @parameter5: java.lang.Throwable;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r3, r1, r2, r5, r6);

        return;
    }

    public transient void printf(org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        org.apache.logging.log4j.Marker r2;
        java.lang.String r3, $r7;
        java.lang.Object[] r4;
        boolean $z0;
        org.apache.logging.log4j.message.StringFormattedMessage $r6;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: org.apache.logging.log4j.Marker;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>(r1, r2, r3, r4);

        if $z0 == 0 goto label1;

        $r6 = new org.apache.logging.log4j.message.StringFormattedMessage;

        specialinvoke $r6.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r3, r4);

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = interfaceinvoke $r6.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r7, r1, r2, $r6, $r8);

     label1:
        return;
    }

    public transient void printf(org.apache.logging.log4j.Level, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.String r2, $r6;
        java.lang.Object[] r3;
        boolean $z0;
        org.apache.logging.log4j.message.StringFormattedMessage $r5;
        java.lang.Throwable $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>(r1, null, r2, r3);

        if $z0 == 0 goto label1;

        $r5 = new org.apache.logging.log4j.message.StringFormattedMessage;

        specialinvoke $r5.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(r2, r3);

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = interfaceinvoke $r5.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r6, r1, null, $r5, $r7);

     label1:
        return;
    }

    private void logMessageSafely(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.message.Message r4;
        java.lang.Throwable r5, $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.message.Message;

        r5 := @parameter4: java.lang.Throwable;

     label1:
        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageTrackRecursion(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, r3, r4, r5);

     label2:
        staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: void release(org.apache.logging.log4j.message.Message)>(r4);

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        staticinvoke <org.apache.logging.log4j.message.ReusableMessageFactory: void release(org.apache.logging.log4j.message.Message)>(r4);

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void logMessageTrackRecursion(java.lang.String, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        org.apache.logging.log4j.Marker r3;
        org.apache.logging.log4j.message.Message r4;
        java.lang.Throwable r5, $r8;
        java.lang.StackTraceElement $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: org.apache.logging.log4j.Marker;

        r4 := @parameter3: org.apache.logging.log4j.message.Message;

        r5 := @parameter4: java.lang.Throwable;

     label1:
        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void incrementRecursionDepth()>();

        $r7 = specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.StackTraceElement getLocation(java.lang.String)>(r1);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void tryLogMessage(java.lang.String,java.lang.StackTraceElement,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, $r7, r2, r3, r4, r5);

     label2:
        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void decrementRecursionDepth()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: void decrementRecursionDepth()>();

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static int[] getRecursionDepthHolder()
    {
        java.lang.ThreadLocal $r0, $r2;
        java.lang.Object $r1;
        int[] r3;

        $r0 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.ThreadLocal recursionDepthHolder>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (int[]) $r1;

        if r3 != null goto label1;

        r3 = newarray (int)[1];

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.ThreadLocal recursionDepthHolder>;

        virtualinvoke $r2.<java.lang.ThreadLocal: void set(java.lang.Object)>(r3);

     label1:
        return r3;
    }

    private static void incrementRecursionDepth()
    {
        int[] $r0;
        int $i0, $i1;

        $r0 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: int[] getRecursionDepthHolder()>();

        $i0 = $r0[0];

        $i1 = $i0 + 1;

        $r0[0] = $i1;

        return;
    }

    private static void decrementRecursionDepth()
    {
        int[] r0;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalStateException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: int[] getRecursionDepthHolder()>();

        $i0 = r0[0];

        $i1 = $i0 - 1;

        r0[0] = $i1;

        $i2 = r0[0];

        if $i2 >= 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recursion depth became negative: ");

        $i3 = r0[0];

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        return;
    }

    public static int getRecursionDepth()
    {
        int[] $r0;
        int $i0;

        $r0 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: int[] getRecursionDepthHolder()>();

        $i0 = $r0[0];

        return $i0;
    }

    private void tryLogMessage(java.lang.String, java.lang.StackTraceElement, org.apache.logging.log4j.Level, org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        java.lang.StackTraceElement r2;
        org.apache.logging.log4j.Level r3;
        org.apache.logging.log4j.Marker r4;
        org.apache.logging.log4j.message.Message r5;
        java.lang.Throwable r6;
        java.lang.Exception $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.StackTraceElement;

        r3 := @parameter2: org.apache.logging.log4j.Level;

        r4 := @parameter3: org.apache.logging.log4j.Marker;

        r5 := @parameter4: org.apache.logging.log4j.message.Message;

        r6 := @parameter5: java.lang.Throwable;

     label1:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void log(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.StackTraceElement,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r3, r4, r1, r2, r5, r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void handleLogMessageException(java.lang.Exception,java.lang.String,org.apache.logging.log4j.message.Message)>($r8, r1, r5);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.StackTraceElement getLocation(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.StackTraceElement $r2;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean requiresLocation()>();

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.logging.log4j.util.StackLocatorUtil: java.lang.StackTraceElement calcLocation(java.lang.String)>(r1);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    private void handleLogMessageException(java.lang.Exception, java.lang.String, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Exception r1;
        java.lang.String r2, r4, $r10, $r14, $r19;
        org.apache.logging.log4j.message.Message r3;
        boolean $z0;
        java.lang.StringBuilder $r6;
        int $i1, $i2;
        java.lang.Class $r9, $r13;
        org.apache.logging.log4j.status.StatusLogger $r18;
        org.apache.logging.log4j.LoggingException $r20;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Exception;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.message.Message;

        $z0 = r1 instanceof org.apache.logging.log4j.LoggingException;

        if $z0 == 0 goto label1;

        $r20 = (org.apache.logging.log4j.LoggingException) r1;

        throw $r20;

     label1:
        r4 = interfaceinvoke r3.<org.apache.logging.log4j.message.Message: java.lang.String getFormat()>();

        if r4 != null goto label2;

        $i2 = 4;

        goto label3;

     label2:
        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

     label3:
        $r6 = new java.lang.StringBuilder;

        $i1 = $i2 + 100;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(int)>($i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" caught ");

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" logging ");

        $r13 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = staticinvoke <org.apache.logging.log4j.status.StatusLogger: org.apache.logging.log4j.status.StatusLogger getLogger()>();

        $r19 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<org.apache.logging.log4j.status.StatusLogger: void warn(java.lang.String,java.lang.Throwable)>($r19, r1);

        return;
    }

    public java.lang.Throwable throwing(java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Throwable r1, $r4;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Throwable;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;

        $r4 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.Throwable throwing(java.lang.String,org.apache.logging.log4j.Level,java.lang.Throwable)>($r3, $r2, r1);

        return $r4;
    }

    public java.lang.Throwable throwing(org.apache.logging.log4j.Level, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Level r1;
        java.lang.Throwable r2, $r4;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Level;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.Throwable throwing(java.lang.String,org.apache.logging.log4j.Level,java.lang.Throwable)>($r3, r1, r2);

        return $r4;
    }

    protected java.lang.Throwable throwing(java.lang.String, org.apache.logging.log4j.Level, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1;
        org.apache.logging.log4j.Level r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Marker $r4, $r5;
        boolean $z0;
        org.apache.logging.log4j.message.Message $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.Level;

        r3 := @parameter2: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker THROWING_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>(r2, $r4, null, null);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker THROWING_MARKER>;

        $r6 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.Message throwingMsg(java.lang.Throwable)>(r3);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(r1, r2, $r5, $r6, r3);

     label1:
        return r3;
    }

    protected org.apache.logging.log4j.message.Message throwingMsg(java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Throwable r1;
        org.apache.logging.log4j.message.MessageFactory2 $r2;
        org.apache.logging.log4j.message.Message $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.MessageFactory2 messageFactory>;

        $r3 = interfaceinvoke $r2.<org.apache.logging.log4j.message.MessageFactory2: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>("Throwing");

        return $r3;
    }

    public void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        if r2 == null goto label1;

        $r8 = interfaceinvoke r2.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, r2, $r8);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        if r1 == null goto label1;

        $r6 = interfaceinvoke r1.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, $r2, null, r1, $r6);

        return;
    }

    public void trace(org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void trace(java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void trace(java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public transient void trace(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void trace(org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void trace(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        org.apache.logging.log4j.util.Supplier[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public transient void trace(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        org.apache.logging.log4j.util.Supplier[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void trace(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r5, r1, r2, r3, r4);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, r1, r2, r3, r4, r5);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r9;
        java.lang.Object r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r11;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r12;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r13;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void trace(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r14;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
        org.apache.logging.log4j.Level $r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r14 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r13 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void trace(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r5, null, r1, r2, r3, r4);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, null, r1, r2, r3, r4, r5);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, null, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, null, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, null, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r11;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, null, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void trace(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r13;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public org.apache.logging.log4j.message.EntryMessage traceEntry()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object[] $r1;
        java.lang.String $r2;
        org.apache.logging.log4j.message.EntryMessage $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r1 = (java.lang.Object[]) null;

        $r3 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage enter(java.lang.String,java.lang.String,java.lang.Object[])>($r2, null, $r1);

        return $r3;
    }

    public transient org.apache.logging.log4j.message.EntryMessage traceEntry(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r3;
        java.lang.Object[] r2;
        org.apache.logging.log4j.message.EntryMessage $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage enter(java.lang.String,java.lang.String,java.lang.Object[])>($r3, r1, r2);

        return $r4;
    }

    public transient org.apache.logging.log4j.message.EntryMessage traceEntry(org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier[] r1;
        java.lang.String $r2;
        org.apache.logging.log4j.message.EntryMessage $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier[];

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage enter(java.lang.String,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r2, null, r1);

        return $r3;
    }

    public transient org.apache.logging.log4j.message.EntryMessage traceEntry(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r3;
        org.apache.logging.log4j.util.Supplier[] r2;
        org.apache.logging.log4j.message.EntryMessage $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage enter(java.lang.String,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r3, r1, r2);

        return $r4;
    }

    public org.apache.logging.log4j.message.EntryMessage traceEntry(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.String $r2;
        org.apache.logging.log4j.message.EntryMessage $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.EntryMessage enter(java.lang.String,org.apache.logging.log4j.message.Message)>($r2, r1);

        return $r3;
    }

    public void traceExit()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String $r1;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        $r1 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.Object exit(java.lang.String,java.lang.String,java.lang.Object)>($r1, null, null);

        return;
    }

    public java.lang.Object traceExit(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1, $r3;
        java.lang.String $r2;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.Object exit(java.lang.String,java.lang.String,java.lang.Object)>($r2, null, r1);

        return $r3;
    }

    public java.lang.Object traceExit(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r3;
        java.lang.Object r2, $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: java.lang.Object exit(java.lang.String,java.lang.String,java.lang.Object)>($r3, r1, r2);

        return $r4;
    }

    public void traceExit(org.apache.logging.log4j.message.EntryMessage)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.EntryMessage r1;
        org.apache.logging.log4j.Marker $r2, $r7;
        org.apache.logging.log4j.Level $r3, $r6;
        boolean $z0;
        org.apache.logging.log4j.message.FlowMessageFactory $r4;
        java.lang.String $r5;
        org.apache.logging.log4j.message.ExitMessage $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.EntryMessage;

        if r1 == null goto label1;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r2 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, $r2, r1, null);

        if $z0 == 0 goto label1;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $r4 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r8 = interfaceinvoke $r4.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.ExitMessage newExitMessage(org.apache.logging.log4j.message.EntryMessage)>(r1);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, $r6, $r7, $r8, null);

     label1:
        return;
    }

    public java.lang.Object traceExit(org.apache.logging.log4j.message.EntryMessage, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.EntryMessage r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Marker $r3, $r8;
        org.apache.logging.log4j.Level $r4, $r7;
        boolean $z0;
        org.apache.logging.log4j.message.FlowMessageFactory $r5;
        java.lang.String $r6;
        org.apache.logging.log4j.message.ExitMessage $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.EntryMessage;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label1;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, null);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $r5 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r9 = interfaceinvoke $r5.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.ExitMessage newExitMessage(java.lang.Object,org.apache.logging.log4j.message.EntryMessage)>(r2, r1);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r6, $r7, $r8, $r9, null);

     label1:
        return r2;
    }

    public java.lang.Object traceExit(org.apache.logging.log4j.message.Message, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Marker $r3, $r8;
        org.apache.logging.log4j.Level $r4, $r7;
        boolean $z0;
        org.apache.logging.log4j.message.FlowMessageFactory $r5;
        java.lang.String $r6;
        org.apache.logging.log4j.message.ExitMessage $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label1;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $z0 = virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, null);

        if $z0 == 0 goto label1;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER>;

        $r5 = r0.<org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.message.FlowMessageFactory flowMessageFactory>;

        $r9 = interfaceinvoke $r5.<org.apache.logging.log4j.message.FlowMessageFactory: org.apache.logging.log4j.message.ExitMessage newExitMessage(java.lang.Object,org.apache.logging.log4j.message.Message)>(r2, r1);

        specialinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logMessageSafely(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r6, $r7, $r8, $r9, null);

     label1:
        return r2;
    }

    public void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;
        java.lang.Throwable $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        if r2 == null goto label1;

        $r8 = interfaceinvoke r2.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r8 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, r1, r2, $r8);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.message.Message r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.message.Message;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.CharSequence r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.CharSequence;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2, null);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.Object r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.message.Message)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;
        java.lang.Throwable $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        if r1 == null goto label1;

        $r6 = interfaceinvoke r1.<org.apache.logging.log4j.message.Message: java.lang.Throwable getThrowable()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r3, $r2, null, r1, $r6);

        return;
    }

    public void warn(org.apache.logging.log4j.message.Message, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.message.Message r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.message.Message;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(java.lang.CharSequence)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void warn(java.lang.CharSequence, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.CharSequence r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.CharSequence,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        org.apache.logging.log4j.Level $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r3, $r2, null, r1, null);

        return;
    }

    public void warn(java.lang.Object, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.Object r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.Object,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(java.lang.String)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public transient void warn(java.lang.String, java.lang.Object[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(java.lang.String, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void warn(org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.Supplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.Supplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public transient void warn(org.apache.logging.log4j.Marker, java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        org.apache.logging.log4j.util.Supplier[] r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.logging.log4j.util.Supplier[];

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.Supplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.Supplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.Supplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public transient void warn(java.lang.String, org.apache.logging.log4j.util.Supplier[])
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        org.apache.logging.log4j.util.Supplier[] r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.logging.log4j.util.Supplier[];

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,org.apache.logging.log4j.util.Supplier[])>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable $r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r3 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, $r3);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        org.apache.logging.log4j.util.MessageSupplier r2;
        java.lang.Throwable r3;
        org.apache.logging.log4j.Level $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: org.apache.logging.log4j.util.MessageSupplier;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.util.MessageSupplier)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable $r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        $r2 = (java.lang.Throwable) null;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, $r2);

        return;
    }

    public void warn(org.apache.logging.log4j.util.MessageSupplier, java.lang.Throwable)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.util.MessageSupplier r1;
        java.lang.Throwable r2;
        org.apache.logging.log4j.Level $r3;
        java.lang.String $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.util.MessageSupplier;

        r2 := @parameter1: java.lang.Throwable;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.util.MessageSupplier,java.lang.Throwable)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r5;
        java.lang.Object r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r5, $r4, r1, r2, r3);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r6;
        java.lang.Object r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r6, $r5, r1, r2, r3, r4);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r7;
        java.lang.Object r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, r1, r2, r3, r4, r5);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r8;
        java.lang.Object r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r9;
        java.lang.Object r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r10;
        java.lang.Object r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r11;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r12;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r13;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    public void warn(org.apache.logging.log4j.Marker, java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        org.apache.logging.log4j.Marker r1;
        java.lang.String r2, $r14;
        java.lang.Object r3, r4, r5, r6, r7, r8, r9, r10, r11, r12;
        org.apache.logging.log4j.Level $r13;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: org.apache.logging.log4j.Marker;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        r12 := @parameter11: java.lang.Object;

        $r14 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r13 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r14, $r13, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12);

        return;
    }

    public void warn(java.lang.String, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r4;
        java.lang.Object r2;
        org.apache.logging.log4j.Level $r3;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r3 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object)>($r4, $r3, null, r1, r2);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r5;
        java.lang.Object r2, r3;
        org.apache.logging.log4j.Level $r4;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        $r5 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object)>($r5, $r4, null, r1, r2, r3);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r6;
        java.lang.Object r2, r3, r4;
        org.apache.logging.log4j.Level $r5;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        $r6 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r5 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>($r6, $r5, null, r1, r2, r3, r4);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r7;
        java.lang.Object r2, r3, r4, r5;
        org.apache.logging.log4j.Level $r6;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r7, $r6, null, r1, r2, r3, r4, r5);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r8;
        java.lang.Object r2, r3, r4, r5, r6;
        org.apache.logging.log4j.Level $r7;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        $r8 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r7 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r8, $r7, null, r1, r2, r3, r4, r5, r6);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r9;
        java.lang.Object r2, r3, r4, r5, r6, r7;
        org.apache.logging.log4j.Level $r8;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        $r9 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r9, $r8, null, r1, r2, r3, r4, r5, r6, r7);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r10;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8;
        org.apache.logging.log4j.Level $r9;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        $r10 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r10, $r9, null, r1, r2, r3, r4, r5, r6, r7, r8);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r11;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9;
        org.apache.logging.log4j.Level $r10;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        $r11 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r10 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r11, $r10, null, r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r12;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10;
        org.apache.logging.log4j.Level $r11;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r11 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r12, $r11, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10);

        return;
    }

    public void warn(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;
        java.lang.String r1, $r13;
        java.lang.Object r2, r3, r4, r5, r6, r7, r8, r9, r10, r11;
        org.apache.logging.log4j.Level $r12;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: java.lang.Object;

        r6 := @parameter5: java.lang.Object;

        r7 := @parameter6: java.lang.Object;

        r8 := @parameter7: java.lang.Object;

        r9 := @parameter8: java.lang.Object;

        r10 := @parameter9: java.lang.Object;

        r11 := @parameter10: java.lang.Object;

        $r13 = <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN>;

        $r12 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;

        virtualinvoke r0.<org.apache.logging.log4j.spi.AbstractLogger: void logIfEnabled(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r13, $r12, null, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11);

        return;
    }

    protected boolean requiresLocation()
    {
        org.apache.logging.log4j.spi.AbstractLogger r0;

        r0 := @this: org.apache.logging.log4j.spi.AbstractLogger;

        return 0;
    }

    static void <clinit>()
    {
        org.apache.logging.log4j.Marker $r0, $r1, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17;
        org.apache.logging.log4j.Marker[] $r2, $r6, $r11, $r15;
        java.lang.Class $r18, $r19, $r20;
        java.lang.String $r21;
        java.lang.ThreadLocal $r22;

        <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String CATCHING> = "Catching";

        <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String THROWING> = "Throwing";

        <org.apache.logging.log4j.spi.AbstractLogger: long serialVersionUID> = 2L;

        $r0 = staticinvoke <org.apache.logging.log4j.MarkerManager: org.apache.logging.log4j.Marker getMarker(java.lang.String)>("FLOW");

        <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker FLOW_MARKER> = $r0;

        $r1 = staticinvoke <org.apache.logging.log4j.MarkerManager: org.apache.logging.log4j.Marker getMarker(java.lang.String)>("ENTER");

        $r2 = newarray (org.apache.logging.log4j.Marker)[1];

        $r3 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker FLOW_MARKER>;

        $r2[0] = $r3;

        $r4 = interfaceinvoke $r1.<org.apache.logging.log4j.Marker: org.apache.logging.log4j.Marker setParents(org.apache.logging.log4j.Marker[])>($r2);

        <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker ENTRY_MARKER> = $r4;

        $r5 = staticinvoke <org.apache.logging.log4j.MarkerManager: org.apache.logging.log4j.Marker getMarker(java.lang.String)>("EXIT");

        $r6 = newarray (org.apache.logging.log4j.Marker)[1];

        $r7 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker FLOW_MARKER>;

        $r6[0] = $r7;

        $r8 = interfaceinvoke $r5.<org.apache.logging.log4j.Marker: org.apache.logging.log4j.Marker setParents(org.apache.logging.log4j.Marker[])>($r6);

        <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXIT_MARKER> = $r8;

        $r9 = staticinvoke <org.apache.logging.log4j.MarkerManager: org.apache.logging.log4j.Marker getMarker(java.lang.String)>("EXCEPTION");

        <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXCEPTION_MARKER> = $r9;

        $r10 = staticinvoke <org.apache.logging.log4j.MarkerManager: org.apache.logging.log4j.Marker getMarker(java.lang.String)>("THROWING");

        $r11 = newarray (org.apache.logging.log4j.Marker)[1];

        $r12 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXCEPTION_MARKER>;

        $r11[0] = $r12;

        $r13 = interfaceinvoke $r10.<org.apache.logging.log4j.Marker: org.apache.logging.log4j.Marker setParents(org.apache.logging.log4j.Marker[])>($r11);

        <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker THROWING_MARKER> = $r13;

        $r14 = staticinvoke <org.apache.logging.log4j.MarkerManager: org.apache.logging.log4j.Marker getMarker(java.lang.String)>("CATCHING");

        $r15 = newarray (org.apache.logging.log4j.Marker)[1];

        $r16 = <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker EXCEPTION_MARKER>;

        $r15[0] = $r16;

        $r17 = interfaceinvoke $r14.<org.apache.logging.log4j.Marker: org.apache.logging.log4j.Marker setParents(org.apache.logging.log4j.Marker[])>($r15);

        <org.apache.logging.log4j.spi.AbstractLogger: org.apache.logging.log4j.Marker CATCHING_MARKER> = $r17;

        $r18 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class createClassForProperty(java.lang.String,java.lang.Class,java.lang.Class)>("log4j2.messageFactory", class "Lorg/apache/logging/log4j/message/ReusableMessageFactory;", class "Lorg/apache/logging/log4j/message/ParameterizedMessageFactory;");

        <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class DEFAULT_MESSAGE_FACTORY_CLASS> = $r18;

        $r19 = staticinvoke <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class createFlowClassForProperty(java.lang.String,java.lang.Class)>("log4j2.flowMessageFactory", class "Lorg/apache/logging/log4j/message/DefaultFlowMessageFactory;");

        <org.apache.logging.log4j.spi.AbstractLogger: java.lang.Class DEFAULT_FLOW_MESSAGE_FACTORY_CLASS> = $r19;

        $r20 = class "Lorg/apache/logging/log4j/spi/AbstractLogger;";

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();

        <org.apache.logging.log4j.spi.AbstractLogger: java.lang.String FQCN> = $r21;

        $r22 = new java.lang.ThreadLocal;

        specialinvoke $r22.<java.lang.ThreadLocal: void <init>()>();

        <org.apache.logging.log4j.spi.AbstractLogger: java.lang.ThreadLocal recursionDepthHolder> = $r22;

        return;
    }
}
