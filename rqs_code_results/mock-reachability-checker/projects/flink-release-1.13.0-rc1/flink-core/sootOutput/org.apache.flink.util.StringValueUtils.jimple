public final class org.apache.flink.util.StringValueUtils extends java.lang.Object
{

    public static void toLowerCase(org.apache.flink.types.StringValue)
    {
        org.apache.flink.types.StringValue r0;
        char[] r1;
        int i0, i3;
        char $c1, $c2;

        r0 := @parameter0: org.apache.flink.types.StringValue;

        r1 = virtualinvoke r0.<org.apache.flink.types.StringValue: char[] getCharArray()>();

        i0 = virtualinvoke r0.<org.apache.flink.types.StringValue: int length()>();

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        $c1 = r1[i3];

        $c2 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c1);

        r1[i3] = $c2;

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    public static void replaceNonWordChars(org.apache.flink.types.StringValue, char)
    {
        org.apache.flink.types.StringValue r0;
        char c0, c2;
        char[] r1;
        int i1, i3;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.flink.types.StringValue;

        c0 := @parameter1: char;

        r1 = virtualinvoke r0.<org.apache.flink.types.StringValue: char[] getCharArray()>();

        i1 = virtualinvoke r0.<org.apache.flink.types.StringValue: int length()>();

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        c2 = r1[i3];

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c2);

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c2);

        if $z1 != 0 goto label2;

        if c2 == 95 goto label2;

        r1[i3] = c0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }

    private void <init>()
    {
        org.apache.flink.util.StringValueUtils r0;

        r0 := @this: org.apache.flink.util.StringValueUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
