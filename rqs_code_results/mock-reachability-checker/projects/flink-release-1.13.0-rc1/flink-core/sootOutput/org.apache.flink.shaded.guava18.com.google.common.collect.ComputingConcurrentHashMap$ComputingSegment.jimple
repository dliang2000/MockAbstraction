final class org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment extends org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Segment
{

    void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap, int, int)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap r1;
        int i0, i1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$Segment: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap,int,int)>(r1, i0, i1);

        return;
    }

    java.lang.Object getOrCompute(java.lang.Object, int, org.apache.flink.shaded.guava18.com.google.common.base.Function) throws java.util.concurrent.ExecutionException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment r0;
        java.lang.Object r1, r5, r7, $r11, r27, r30, r31;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        org.apache.flink.shaded.guava18.com.google.common.base.Function r2;
        java.util.concurrent.atomic.AtomicReferenceArray r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry r4, r26;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference r6, $r12, $r16, $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z7, z8, $z9;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference $r13, r29;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap $r14, $r17, $r18;
        org.apache.flink.shaded.guava18.com.google.common.base.Equivalence $r15;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause $r19, $r22;
        java.util.Queue $r20, $r21;
        java.lang.Throwable $r24, $r25;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.guava18.com.google.common.base.Function;

     label01:
        r26 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int)>(r1, i0);

        if r26 == null goto label03;

        r27 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object getLiveValue(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>(r26);

        if r27 == null goto label03;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void recordRead(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>(r26);

     label02:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postReadCleanup()>();

        return r27;

     label03:
        if r26 == null goto label04;

        $r23 = interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>();

        $z7 = interfaceinvoke $r23.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference: boolean isComputingReference()>();

        if $z7 != 0 goto label21;

     label04:
        z8 = 1;

        r29 = null;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void lock()>();

     label05:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void preWriteCleanup()>();

        $i2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: int count>;

        i6 = $i2 - 1;

        r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.util.concurrent.atomic.AtomicReferenceArray table>;

        $i3 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: int length()>();

        $i4 = $i3 - 1;

        i1 = i0 & $i4;

        $r11 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(i1);

        r4 = (org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry) $r11;

        r26 = r4;

     label06:
        if r26 == null goto label14;

        r5 = interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: java.lang.Object getKey()>();

        $i5 = interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: int getHash()>();

        if $i5 != i0 goto label13;

        if r5 == null goto label13;

        $r14 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap map>;

        $r15 = $r14.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap: org.apache.flink.shaded.guava18.com.google.common.base.Equivalence keyEquivalence>;

        $z1 = virtualinvoke $r15.<org.apache.flink.shaded.guava18.com.google.common.base.Equivalence: boolean equivalent(java.lang.Object,java.lang.Object)>(r1, r5);

        if $z1 == 0 goto label13;

        r6 = interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>();

        $z2 = interfaceinvoke r6.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference: boolean isComputingReference()>();

        if $z2 == 0 goto label07;

        z8 = 0;

        goto label14;

     label07:
        $r16 = interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>();

        r7 = interfaceinvoke $r16.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference: java.lang.Object get()>();

        if r7 != null goto label08;

        $r22 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause COLLECTED>;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void enqueueNotification(java.lang.Object,int,java.lang.Object,org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause)>(r5, i0, r7, $r22);

        goto label12;

     label08:
        $r17 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap map>;

        $z3 = virtualinvoke $r17.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap: boolean expires()>();

        if $z3 == 0 goto label09;

        $r18 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap map>;

        $z4 = virtualinvoke $r18.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap: boolean isExpired(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>(r26);

        if $z4 == 0 goto label09;

        $r19 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause EXPIRED>;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void enqueueNotification(java.lang.Object,int,java.lang.Object,org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause)>(r5, i0, r7, $r19);

        goto label12;

     label09:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void recordLockedRead(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>(r26);

     label10:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void unlock()>();

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postWriteCleanup()>();

     label11:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postReadCleanup()>();

        return r7;

     label12:
        $r20 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.util.Queue evictionQueue>;

        interfaceinvoke $r20.<java.util.Queue: boolean remove(java.lang.Object)>(r26);

        $r21 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.util.Queue expirationQueue>;

        interfaceinvoke $r21.<java.util.Queue: boolean remove(java.lang.Object)>(r26);

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: int count> = i6;

        goto label14;

     label13:
        r26 = interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext()>();

        goto label06;

     label14:
        if z8 == 0 goto label16;

        $r13 = new org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        specialinvoke $r13.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: void <init>(org.apache.flink.shaded.guava18.com.google.common.base.Function)>(r2);

        r29 = $r13;

        if r26 != null goto label15;

        r26 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(java.lang.Object,int,org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>(r1, i0, r4);

        interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: void setValueReference(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference)>($r13);

        virtualinvoke r3.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(i1, r26);

        goto label16;

     label15:
        interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: void setValueReference(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference)>($r13);

     label16:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void unlock()>();

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postWriteCleanup()>();

        goto label19;

     label17:
        $r25 := @caughtexception;

     label18:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void unlock()>();

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postWriteCleanup()>();

        throw $r25;

     label19:
        if z8 == 0 goto label21;

        r30 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object compute(java.lang.Object,int,org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry,org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference)>(r1, i0, r26, r29);

     label20:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postReadCleanup()>();

        return r30;

     label21:
        $z0 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r26);

        if $z0 != 0 goto label22;

        $z9 = 1;

        goto label23;

     label22:
        $z9 = 0;

     label23:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z9, "Recursive computation");

        $r12 = interfaceinvoke r26.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference()>();

        r31 = interfaceinvoke $r12.<org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference: java.lang.Object waitForValue()>();

        if r31 == null goto label01;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void recordRead(org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry)>(r26);

     label24:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postReadCleanup()>();

        return r31;

     label25:
        $r24 := @caughtexception;

     label26:
        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void postReadCleanup()>();

        throw $r24;

        catch java.lang.Throwable from label05 to label10 with label17;
        catch java.lang.Throwable from label12 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label03 to label11 with label25;
        catch java.lang.Throwable from label12 to label20 with label25;
        catch java.lang.Throwable from label21 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }

    java.lang.Object compute(java.lang.Object, int, org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry, org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference) throws java.util.concurrent.ExecutionException
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment r0;
        java.lang.Object r1, r10, r12, r13;
        int i0;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause $r7;
        java.lang.Throwable $r8, $r9;
        byte $b2, $b4;
        long l3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ReferenceEntry;

        r3 := @parameter3: org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        r10 = null;

        staticinvoke <java.lang.System: long nanoTime()>();

        l3 = 0L;

     label01:
        entermonitor r2;

     label02:
        r10 = virtualinvoke r3.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: java.lang.Object compute(java.lang.Object,int)>(r1, i0);

        l3 = staticinvoke <java.lang.System: long nanoTime()>();

        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r9 := @caughtexception;

        exitmonitor r2;

     label05:
        throw $r9;

     label06:
        if r10 == null goto label07;

        r12 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>(r1, i0, r10, 1);

        if r12 == null goto label07;

        $r7 = <org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause: org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause REPLACED>;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: void enqueueNotification(java.lang.Object,int,java.lang.Object,org.apache.flink.shaded.guava18.com.google.common.collect.MapMaker$RemovalCause)>(r1, i0, r10, $r7);

     label07:
        r13 = r10;

     label08:
        $b4 = l3 cmp 0L;

        if $b4 != 0 goto label09;

        staticinvoke <java.lang.System: long nanoTime()>();

     label09:
        if r10 != null goto label10;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: boolean clearValue(java.lang.Object,int,org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference)>(r1, i0, r3);

     label10:
        return r13;

     label11:
        $r8 := @caughtexception;

     label12:
        $b2 = l3 cmp 0L;

        if $b2 != 0 goto label13;

        staticinvoke <java.lang.System: long nanoTime()>();

     label13:
        if r10 != null goto label14;

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: boolean clearValue(java.lang.Object,int,org.apache.flink.shaded.guava18.com.google.common.collect.MapMakerInternalMap$ValueReference)>(r1, i0, r3);

     label14:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label01 to label08 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }
}
