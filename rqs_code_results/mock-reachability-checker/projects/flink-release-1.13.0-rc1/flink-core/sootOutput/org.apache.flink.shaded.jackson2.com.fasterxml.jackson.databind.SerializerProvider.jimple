public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext
{
    protected static final boolean CACHE_UNKNOWN_MAPPINGS;
    public static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER;
    protected static final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config;
    protected final java.lang.Class _serializationView;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache;
    protected transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer;
    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers;
    protected java.text.DateFormat _dateFormat;
    protected final boolean _stdNullValueSerializer;

    public void <init>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: void <init>()>();

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r1;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = null;

        $r4 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache;

        specialinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer> = 1;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r7, $r16;
        java.lang.Class $r14;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes $r15;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r17;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: void <init>()>();

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r4;

        $r5 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r5;

        $r6 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r6;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config> = r2;

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = $r7;

        $r8 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r8;

        $r9 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r9;

        $r10 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r10;

        $r11 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r11;

        $r13 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        $r12 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;

        if $r13 != $r12 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer> = $z0;

        $r14 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: java.lang.Class getActiveView()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = $r14;

        $r15 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes getAttributes()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = $r15;

        $r16 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r17 = virtualinvoke $r16.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = $r17;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r2, $r4, $r6, $r7, $r8, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext: void <init>()>();

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r2;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.std.NullSerializer instance>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r3;

        $r4 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r4;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = null;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers> = null;

        $r5 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache;

        specialinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: void <init>()>();

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache> = $r5;

        $r6 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer> = $r6;

        $r7 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = $r7;

        $r8 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = $r8;

        $r9 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = $r9;

        $z0 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer> = $z0;

        return;
    }

    public void setDefaultKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null JsonSerializer");

        throw $r2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = r1;

        return;
    }

    public void setNullValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null JsonSerializer");

        throw $r2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer> = r1;

        return;
    }

    public void setNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null JsonSerializer");

        throw $r2;

     label1:
        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer> = r1;

        return;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        return $r1;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();

        return $r2;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.Class) throws java.lang.IllegalArgumentException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1, $r5;
        java.lang.Class r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.Class;

        $z0 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(r2);

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();

        $r5 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructSpecializedType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.Class,boolean)>(r1, r2, 1);

        return $r5;
    }

    public final java.lang.Class getActiveView()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView>;

        return $r1;
    }

    public final java.lang.Class getSerializationView()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Class _serializationView>;

        return $r1;
    }

    public final boolean canOverrideAccessModifiers()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();

        return $z0;
    }

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.MapperFeature)>(r1);

        return $z0;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)>(r1);

        return $r3;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class)>(r1);

        return $r3;
    }

    public java.util.Locale getLocale()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        java.util.Locale $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: java.util.Locale getLocale()>();

        return $r2;
    }

    public java.util.TimeZone getTimeZone()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        java.util.TimeZone $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: java.util.TimeZone getTimeZone()>();

        return $r2;
    }

    public java.lang.Object getAttribute(java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Object r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes: java.lang.Object getAttribute(java.lang.Object)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider setAttribute(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Object r1, r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes withPerCallAttribute(java.lang.Object,java.lang.Object)>(r1, r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.ContextAttributes _attributes> = $r4;

        return r0;
    }

    public final boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>(r1);

        return $z0;
    }

    public final boolean hasSerializationFeatures(int)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        int i0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $z0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: boolean hasSerializationFeatures(int)>(i0);

        return $z0;
    }

    public final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider()>();

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        return null;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.'annotation'.ObjectIdGenerator);

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r8, r9, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r8 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r8 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        r8 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r7);

        if r8 != null goto label1;

        r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(r1);

        return r9;

     label1:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r8, r2);

        return $r10;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4;
        java.lang.Class $r5;
        java.lang.Object[] $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r7, r8, $r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        if r1 != null goto label1;

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void reportMappingProblem(java.lang.String,java.lang.Object[])>("Null passed for `valueType` of `findValueSerializer()`", $r6);

     label1:
        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r7 != null goto label2;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r7 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r7 != null goto label2;

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r7 != null goto label2;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>($r5);

        return r8;

     label2:
        $r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r7, r2);

        return $r9;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r3, $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r7 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r7 != null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r7 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r7 != null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r6 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        r7 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r6);

        if r7 != null goto label1;

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(r1);

        if r7 != null goto label1;

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(r1);

     label1:
        return r7;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r3;
        java.lang.Class $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r5 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r5 != null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r5 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r5 != null goto label1;

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r5 != null goto label1;

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>($r4);

     label1:
        return r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4;
        java.lang.Class $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r6, r7, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r6 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r6 != null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r6 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r6 != null goto label1;

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r6 != null goto label1;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>($r5);

        return r7;

     label1:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r6, r2);

        return $r8;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findPrimaryPropertySerializer(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r8, r9, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r8 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r8 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        r8 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r7);

        if r8 != null goto label1;

        r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(r1);

        return r9;

     label1:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r8, r2);

        return $r10;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4;
        java.lang.Class $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r6, r7, $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r6 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r6 != null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r6 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r6 != null goto label1;

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r6 != null goto label1;

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>($r5);

        return r7;

     label1:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r6, r2);

        return $r8;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r8, r9, $r10;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r8 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r8 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r7 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        r8 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r7);

        if r8 != null goto label1;

        r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(r1);

        if r8 != null goto label1;

        r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(r1);

        return r9;

     label1:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r8, r2);

        return $r10;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer $r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r11, r12, r13;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r14, r15;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r11 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)>(r1);

        if r11 == null goto label1;

        return r11;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r12 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class)>(r1);

        if r12 == null goto label2;

        return r12;

     label2:
        r13 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r8 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        r14 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r7, $r8);

        if r14 == null goto label3;

        r15 = virtualinvoke r14.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2);

        $r10 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;

        specialinvoke $r10.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r15, r13);

        r13 = $r10;

     label3:
        if z0 == 0 goto label4;

        $r9 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r9.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: void addTypedSerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r13);

     label4:
        return r13;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, boolean, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        boolean z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r4, $r7;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r9, r10, r11;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer r12, r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r9 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r9 == null goto label1;

        return r9;

     label1:
        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r10 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        if r10 == null goto label2;

        return r10;

     label2:
        r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r12 = virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r5, r1);

        if r12 == null goto label3;

        r13 = virtualinvoke r12.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r2);

        $r8 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;

        specialinvoke $r8.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r13, r11);

        r11 = $r8;

     label3:
        if z0 == 0 goto label4;

        $r7 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: void addTypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r1, r11);

     label4:
        return r11;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer findTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r2, r1);

        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3, $r4, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;

        r3 = virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r0, r1, $r4);

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, r2);

        return $r6;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(java.lang.Class, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        $r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>($r4, r2);

        return $r5;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullKeySerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        return $r1;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer>;

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.UnknownSerializer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        if r1 != class "Ljava/lang/Object;" goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;

        return $r3;

     label1:
        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void <init>(java.lang.Class)>(r1);

        return $r2;
    }

    public boolean isUnknownTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r1, $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r3;
        boolean $z0;
        java.lang.Class $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer>;

        if r1 == $r2 goto label1;

        if r1 != null goto label2;

     label1:
        return 1;

     label2:
        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r4 != class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/databind/ser/impl/UnknownSerializer;" goto label3;

        return 1;

     label3:
        return 0;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer serializerInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.Annotated, java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

    public abstract java.lang.Object includeFilterInstance(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

    public abstract boolean includeFilterSuppressNulls(java.lang.Object) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r3 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        if r3 == null goto label1;

        $z0 = r3 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer) r3;

        r3 = interfaceinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r0, r1);

     label1:
        return r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r3 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        if r3 == null goto label1;

        $z0 = r3 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer) r3;

        r3 = interfaceinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ContextualSerializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createContextual(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r0, r1);

     label1:
        return r3;
    }

    public final void defaultSerializeValue(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        java.lang.Class r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        if r1 != null goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();

        goto label3;

     label1:
        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(null, r2, r0);

        goto label3;

     label2:
        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r3, 1, null);

        virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r0);

     label3:
        return;
    }

    public final void defaultSerializeField(java.lang.String, java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.String r1;
        java.lang.Object r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r3;
        java.lang.Class r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(r1);

        if r2 != null goto label2;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;

        if $z0 == 0 goto label1;

        virtualinvoke r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();

        goto label3;

     label1:
        $r6 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        virtualinvoke $r6.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(null, r3, r0);

        goto label3;

     label2:
        r4 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r4, 1, null);

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r2, r3, r0);

     label3:
        return;
    }

    public final void defaultSerializeDateValue(long, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        long l0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r2;
        boolean $z0;
        java.text.DateFormat $r3;
        java.util.Date $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r2);

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>(l0);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>(l0);

        $r5 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r5);

     label2:
        return;
    }

    public final void defaultSerializeDateValue(java.util.Date, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.util.Date r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r3;
        boolean $z0;
        java.text.DateFormat $r4;
        java.lang.String $r5;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>($l0);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();

        $r5 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>($r5);

     label2:
        return;
    }

    public void defaultSerializeDateKey(long, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        long l0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r2;
        boolean $z0;
        java.text.DateFormat $r3;
        java.util.Date $r4;
        java.lang.String $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        l0 := @parameter0: long;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r2);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r6);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>(l0);

        $r5 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r5);

     label2:
        return;
    }

    public void defaultSerializeDateKey(java.util.Date, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.util.Date r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature $r3;
        boolean $z0;
        java.text.DateFormat $r4;
        java.lang.String $r5, $r6;
        long $l0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.util.Date;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        $r3 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationFeature)>($r3);

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r6);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat()>();

        $r5 = virtualinvoke $r4.<java.text.DateFormat: java.lang.String format(java.util.Date)>(r1);

        virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>($r5);

     label2:
        return;
    }

    public final void defaultSerializeNull(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator;

        $z0 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean _stdNullValueSerializer>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();

        goto label2;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer>;

        virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(null, r1, r0);

     label2:
        return;
    }

    public transient void reportMappingProblem(java.lang.String, java.lang.Object[]) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.String r1;
        java.lang.Object[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String,java.lang.Object[])>(r1, r2);

        throw $r3;
    }

    public transient java.lang.Object reportBadTypeDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, java.lang.String, java.lang.Object[]) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r1;
        java.lang.Object[] r2, $r3;
        java.lang.String $r4, r8, r9, r10;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException $r6;
        java.lang.Class $r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r8 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r9 = "N/A";

        if r1 == null goto label1;

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();

        r9 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>($r7);

     label1:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r9;

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(r8, r2);

        $r3[1] = $r4;

        r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid type definition for type %s: %s", $r3);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)>($r5, r10, r1, null);

        throw $r6;
    }

    public transient java.lang.Object reportBadPropertyDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, java.lang.String, java.lang.Object[]) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition r2;
        java.lang.Object[] r3, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException $r6;
        java.lang.Class $r7;
        java.lang.String $r8, r9, r10, r11, r12, r13;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;

        r9 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.Object[];

        r10 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(r9, r3);

        r11 = "N/A";

        if r2 == null goto label1;

        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();

        r11 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _quotedString(java.lang.String)>($r8);

     label1:
        r12 = "N/A";

        if r1 == null goto label2;

        $r7 = virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();

        r12 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nameOf(java.lang.Class)>($r7);

     label2:
        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r11;

        $r4[1] = r12;

        $r4[2] = r10;

        r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid definition for property %s (of type %s): %s", $r4);

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanDescription,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)>($r5, r13, r1, r2);

        throw $r6;
    }

    public java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.String r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r3, r2, r1);

        throw $r4;
    }

    public java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.Throwable) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r5, r2, r1);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);

        throw r4;
    }

    public java.lang.Object reportBadDefinition(java.lang.Class, java.lang.String, java.lang.Throwable) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        java.lang.String r2;
        java.lang.Throwable r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Throwable;

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        $r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(r1);

        r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r5, r2, $r6);

        virtualinvoke r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidDefinitionException: java.lang.Throwable initCause(java.lang.Throwable)>(r3);

        throw r4;
    }

    public transient void reportMappingProblem(java.lang.Throwable, java.lang.String, java.lang.Object[]) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Throwable r1;
        java.lang.Object[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r4;
        java.lang.String r5, r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Throwable;

        r5 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object[];

        r6 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(r5, r2);

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)>($r3, r6, r1);

        throw $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException invalidTypeIdException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.lang.String, java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        java.lang.String r2, r3, r4, $r6, $r7;
        java.lang.Object[] $r5;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidTypeIdException $r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r2;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        $r5[1] = $r6;

        r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Could not resolve type id \'%s\' as a subtype of %s", $r5);

        $r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _colonConcat(java.lang.String,java.lang.String)>(r4, r3);

        $r8 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidTypeIdException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.exc.InvalidTypeIdException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonParser,java.lang.String,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(null, $r7, r1, r2);

        return $r8;
    }

    public transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String, java.lang.Object[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.String r1, $r4;
        java.lang.Object[] r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object[];

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(r1, r2);

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String)>($r3, $r4);

        return $r5;
    }

    protected transient org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Throwable, java.lang.String, java.lang.Object[])
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Throwable r1;
        java.lang.String r2, $r5;
        java.lang.Object[] r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.Object[];

        $r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator getGenerator()>();

        $r5 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.String _format(java.lang.String,java.lang.Object[])>(r2, r3);

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException 'from'(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.core.JsonGenerator,java.lang.String,java.lang.Throwable)>($r4, $r5, r1);

        return $r6;
    }

    protected void _reportIncompatibleRootType(java.lang.Object, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Object r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.lang.Class r3, $r8, $r9;
        boolean $z0, $z1;
        java.lang.Object[] $r4;
        java.lang.String $r5, $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class wrapperType(java.lang.Class)>($r8);

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r2;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String classNameOf(java.lang.Object)>(r1);

        $r4[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Incompatible types: declared root type (%s) vs %s", $r4);

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r2, $r6);

        return;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r4;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers>;

        r4 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r4 != null goto label1;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        r4 = virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class)>(r1);

        if r4 != null goto label1;

        r4 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class)>(r1);

     label1:
        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean isUnknownTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer)>(r4);

        if $z0 == 0 goto label2;

        return null;

     label2:
        return r4;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.lang.Class r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r5;
        java.lang.IllegalArgumentException $r6;
        java.lang.String $r7;
        java.lang.Object[] $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        $r4 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r2 = virtualinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class)>(r1);

     label1:
        r9 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r9 = null;

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r6);

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object[])>($r6, $r7, $r8);

     label4:
        if r9 == null goto label5;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r5.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: void addAndResolveNonTypedSerializer(java.lang.Class,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r2, r9, r0);

     label5:
        return r9;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.lang.Object[] $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

     label1:
        r7 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r7 = null;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>($r4);

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: void reportMappingProblem(java.lang.Throwable,java.lang.String,java.lang.Object[])>($r4, $r5, $r6);

     label4:
        if r7 == null goto label5;

        $r3 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache>;

        virtualinvoke $r3.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerCache: void addAndResolveNonTypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r1, r7, r0);

     label5:
        return r7;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.SerializerFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer createSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r0, r1);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r1, $r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty r2;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty;

        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer) r1;

        interfaceinvoke $r4.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r0);

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.BeanProperty)>(r1, r2);

        return $r3;
    }

    protected org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer r1;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer;

        $z0 = r1 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer) r1;

        interfaceinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider)>(r0);

     label1:
        return r1;
    }

    protected final java.text.DateFormat _dateFormat()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        java.text.DateFormat $r1, $r4, $r5, r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r2;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat>;

        if $r1 == null goto label1;

        $r5 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat>;

        return $r5;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig _config>;

        r6 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig: java.text.DateFormat getDateFormat()>();

        $r3 = virtualinvoke r6.<java.text.DateFormat: java.lang.Object clone()>();

        $r4 = (java.text.DateFormat) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: java.text.DateFormat _dateFormat> = $r4;

        return $r4;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DatabindContext setAttribute(java.lang.Object, java.lang.Object)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0, $r3;
        java.lang.Object r1, r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider setAttribute(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public volatile org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig getConfig()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig getConfig()>();

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.FailingSerializer $r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.UnknownSerializer $r1;

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: boolean CACHE_UNKNOWN_MAPPINGS> = 0;

        $r0 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.FailingSerializer;

        specialinvoke $r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.FailingSerializer: void <init>(java.lang.String)>("Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)");

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER> = $r0;

        $r1 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.UnknownSerializer;

        specialinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ser.impl.UnknownSerializer: void <init>()>();

        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializerProvider: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER> = $r1;

        return;
    }
}
