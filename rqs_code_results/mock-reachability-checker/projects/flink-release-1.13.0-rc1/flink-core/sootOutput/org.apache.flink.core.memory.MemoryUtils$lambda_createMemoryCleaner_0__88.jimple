public final class org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88 extends java.lang.Object implements java.lang.Runnable
{
    long cap0;
    java.lang.Runnable cap1;

    public static java.lang.Runnable bootstrap$(long, java.lang.Runnable)
    {
        long $l0;
        java.lang.Runnable $r0;
        org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88 $r1;

        $l0 := @parameter0: long;

        $r0 := @parameter1: java.lang.Runnable;

        $r1 = new org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88;

        specialinvoke $r1.<org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88: void <init>(long,java.lang.Runnable)>($l0, $r0);

        return $r1;
    }

    public void <init>(long, java.lang.Runnable)
    {
        org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88 $r0;
        long $l0;
        java.lang.Runnable $r1;

        $r0 := @this: org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.lang.Runnable;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88: long cap0> = $l0;

        $r0.<org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88: java.lang.Runnable cap1> = $r1;

        return;
    }

    public void run()
    {
        org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88 $r0;
        long $l0;
        java.lang.Runnable $r1;

        $r0 := @this: org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88;

        $l0 = $r0.<org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88: long cap0>;

        $r1 = $r0.<org.apache.flink.core.memory.MemoryUtils$lambda_createMemoryCleaner_0__88: java.lang.Runnable cap1>;

        staticinvoke <org.apache.flink.core.memory.MemoryUtils: void lambda$createMemoryCleaner$0(long,java.lang.Runnable)>($l0, $r1);

        return;
    }
}
