public class org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy extends org.powermock.reflect.internal.matcherstrategies.FieldMatcherStrategy
{
    final java.lang.Class[] annotations;

    public void <init>(java.lang.Class[])
    {
        org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy r0;
        java.lang.Class[] r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy;

        r1 := @parameter0: java.lang.Class[];

        specialinvoke r0.<org.powermock.reflect.internal.matcherstrategies.FieldMatcherStrategy: void <init>()>();

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("You must specify atleast one annotation.");

        throw $r2;

     label2:
        r0.<org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy: java.lang.Class[] annotations> = r1;

        return;
    }

    public boolean matches(java.lang.reflect.Field)
    {
        org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy r0;
        java.lang.reflect.Field r1;
        java.lang.Class[] r2;
        int i0, i1;
        java.lang.Class r3;
        boolean $z0;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy;

        r1 := @parameter0: java.lang.reflect.Field;

        r2 = r0.<org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy: java.lang.Class[] annotations>;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z0 = virtualinvoke r1.<java.lang.reflect.Field: boolean isAnnotationPresent(java.lang.Class)>(r3);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public void notFound(java.lang.Class, boolean) throws org.powermock.reflect.exceptions.FieldNotFoundException
    {
        org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy r0;
        java.lang.Class r1;
        boolean z0;
        org.powermock.reflect.exceptions.FieldNotFoundException $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r5, $r8, $r11;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy;

        r1 := @parameter0: java.lang.Class;

        z0 := @parameter1: boolean;

        $r2 = new org.powermock.reflect.exceptions.FieldNotFoundException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No field that has any of the annotation types \"");

        $r5 = specialinvoke r0.<org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy: java.lang.String getAnnotationNames()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" could be found in the class hierarchy of ");

        $r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.powermock.reflect.exceptions.FieldNotFoundException: void <init>(java.lang.String)>($r11);

        throw $r2;
    }

    public java.lang.String toString()
    {
        org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("annotations ");

        $r3 = specialinvoke r0.<org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy: java.lang.String getAnnotationNames()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private java.lang.String getAnnotationNames()
    {
        org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy r0;
        java.lang.StringBuilder $r2;
        java.lang.Class[] $r3, $r5, $r9;
        int $i0, $i1, $i2, i3;
        java.lang.String $r4, $r7;
        java.lang.Class $r6;

        r0 := @this: org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label1:
        $r3 = r0.<org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy: java.lang.Class[] annotations>;

        $i0 = lengthof $r3;

        if i3 >= $i0 goto label3;

        $r5 = r0.<org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy: java.lang.Class[] annotations>;

        $r6 = $r5[i3];

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = r0.<org.powermock.reflect.internal.matcherstrategies.FieldAnnotationMatcherStrategy: java.lang.Class[] annotations>;

        $i1 = lengthof $r9;

        $i2 = $i1 - 1;

        if i3 == $i2 goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
