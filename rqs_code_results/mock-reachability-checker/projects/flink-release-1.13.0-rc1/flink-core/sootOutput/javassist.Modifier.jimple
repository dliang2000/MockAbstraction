public class javassist.Modifier extends java.lang.Object
{
    public static final int PUBLIC;
    public static final int PRIVATE;
    public static final int PROTECTED;
    public static final int STATIC;
    public static final int FINAL;
    public static final int SYNCHRONIZED;
    public static final int VOLATILE;
    public static final int VARARGS;
    public static final int TRANSIENT;
    public static final int NATIVE;
    public static final int INTERFACE;
    public static final int ABSTRACT;
    public static final int STRICT;
    public static final int ANNOTATION;
    public static final int ENUM;

    public void <init>()
    {
        javassist.Modifier r0;

        r0 := @this: javassist.Modifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isPublic(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isPrivate(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isProtected(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 4;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isPackage(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 7;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isStatic(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 8;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isFinal(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 16;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isSynchronized(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 32;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isVolatile(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 64;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isTransient(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNative(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 256;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isInterface(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 512;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isAnnotation(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 8192;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isEnum(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 16384;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isAbstract(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 1024;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isStrict(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 2048;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isVarArgs(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 128;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int setPublic(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & -7;

        $i2 = $i1 | 1;

        return $i2;
    }

    public static int setProtected(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & -4;

        $i2 = $i1 | 4;

        return $i2;
    }

    public static int setPrivate(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 & -6;

        $i2 = $i1 | 2;

        return $i2;
    }

    public static int setPackage(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = i0 & -8;

        return $i1;
    }

    public static int clear(int, int)
    {
        int i0, i1, $i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 ^ -1;

        $i3 = i0 & $i2;

        return $i3;
    }

    public static java.lang.String toString(int)
    {
        int i0;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.lang.reflect.Modifier: java.lang.String toString(int)>(i0);

        return $r0;
    }

    public static void <clinit>()
    {
        <javassist.Modifier: int ENUM> = 16384;

        <javassist.Modifier: int ANNOTATION> = 8192;

        <javassist.Modifier: int STRICT> = 2048;

        <javassist.Modifier: int ABSTRACT> = 1024;

        <javassist.Modifier: int INTERFACE> = 512;

        <javassist.Modifier: int NATIVE> = 256;

        <javassist.Modifier: int TRANSIENT> = 128;

        <javassist.Modifier: int VARARGS> = 128;

        <javassist.Modifier: int VOLATILE> = 64;

        <javassist.Modifier: int SYNCHRONIZED> = 32;

        <javassist.Modifier: int FINAL> = 16;

        <javassist.Modifier: int STATIC> = 8;

        <javassist.Modifier: int PROTECTED> = 4;

        <javassist.Modifier: int PRIVATE> = 2;

        <javassist.Modifier: int PUBLIC> = 1;

        return;
    }
}
