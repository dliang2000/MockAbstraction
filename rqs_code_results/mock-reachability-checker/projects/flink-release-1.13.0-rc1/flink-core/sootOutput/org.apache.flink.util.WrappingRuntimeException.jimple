public class org.apache.flink.util.WrappingRuntimeException extends org.apache.flink.util.FlinkRuntimeException
{
    private static final long serialVersionUID;

    public void <init>(java.lang.Throwable)
    {
        org.apache.flink.util.WrappingRuntimeException r0;
        java.lang.Throwable r1, $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.util.WrappingRuntimeException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.lang.Throwable) $r2;

        specialinvoke r0.<org.apache.flink.util.FlinkRuntimeException: void <init>(java.lang.Throwable)>($r3);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.apache.flink.util.WrappingRuntimeException r0;
        java.lang.String r1;
        java.lang.Throwable r2, $r4;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.util.WrappingRuntimeException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r2);

        $r4 = (java.lang.Throwable) $r3;

        specialinvoke r0.<org.apache.flink.util.FlinkRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, $r4);

        return;
    }

    public java.lang.Throwable unwrap()
    {
        org.apache.flink.util.WrappingRuntimeException r0, $r2;
        java.lang.Throwable r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.util.WrappingRuntimeException;

        r1 = virtualinvoke r0.<org.apache.flink.util.WrappingRuntimeException: java.lang.Throwable getCause()>();

        $z0 = r1 instanceof org.apache.flink.util.WrappingRuntimeException;

        if $z0 == 0 goto label1;

        $r2 = (org.apache.flink.util.WrappingRuntimeException) r1;

        $r3 = virtualinvoke $r2.<org.apache.flink.util.WrappingRuntimeException: java.lang.Throwable unwrap()>();

        goto label2;

     label1:
        $r3 = r1;

     label2:
        return $r3;
    }

    public static java.lang.RuntimeException wrapIfNecessary(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        boolean $z0;
        org.apache.flink.util.WrappingRuntimeException $r1;
        java.lang.RuntimeException $r2;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label1;

        $r2 = (java.lang.RuntimeException) r0;

        return $r2;

     label1:
        $r1 = new org.apache.flink.util.WrappingRuntimeException;

        specialinvoke $r1.<org.apache.flink.util.WrappingRuntimeException: void <init>(java.lang.Throwable)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.flink.util.WrappingRuntimeException: long serialVersionUID> = 1L;

        return;
    }
}
