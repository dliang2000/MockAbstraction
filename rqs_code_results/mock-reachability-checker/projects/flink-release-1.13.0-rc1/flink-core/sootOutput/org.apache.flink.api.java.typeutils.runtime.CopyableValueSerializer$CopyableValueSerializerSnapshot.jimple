public final class org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot extends org.apache.flink.api.common.typeutils.GenericTypeSerializerSnapshot
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.GenericTypeSerializerSnapshot: void <init>()>();

        return;
    }

    void <init>(java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot r0;
        java.lang.Class r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.GenericTypeSerializerSnapshot: void <init>(java.lang.Class)>(r1);

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot r0;
        java.lang.Class r1;
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        r1 := @parameter0: java.lang.Class;

        $r2 = new org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        specialinvoke $r2.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: void <init>(java.lang.Class)>(r1);

        return $r2;
    }

    protected java.lang.Class getTypeClass(org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot r0;
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer r1;
        java.lang.Class $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer;

        $r2 = staticinvoke <org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer: java.lang.Class access$000(org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer)>(r1);

        return $r2;
    }

    protected java.lang.Class serializerClass()
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        return class "Lorg/apache/flink/api/java/typeutils/runtime/CopyableValueSerializer;";
    }

    protected volatile java.lang.Class getTypeClass(org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer $r2;
        java.lang.Class $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r2 = (org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer$CopyableValueSerializerSnapshot: java.lang.Class getTypeClass(org.apache.flink.api.java.typeutils.runtime.CopyableValueSerializer)>($r2);

        return $r3;
    }
}
