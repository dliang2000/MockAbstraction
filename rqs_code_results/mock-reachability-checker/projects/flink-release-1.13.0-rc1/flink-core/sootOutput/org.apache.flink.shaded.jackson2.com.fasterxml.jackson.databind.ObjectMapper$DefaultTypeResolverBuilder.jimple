public class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder implements java.io.Serializable
{
    private static final long serialVersionUID;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator;

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r1, $r4;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r2, $r6;
        java.lang.Object $r3, $r5;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: void <init>()>();

        $r3 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: java.lang.Object _requireNonNull(java.lang.Object,java.lang.String)>(r1, "Can not pass `null` DefaultTyping");

        $r4 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) $r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor> = $r4;

        $r5 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: java.lang.Object _requireNonNull(java.lang.Object,java.lang.String)>(r2, "Can not pass `null` PolymorphicTypeValidator");

        $r6 = (org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator) $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator> = $r6;

        return;
    }

    private static java.lang.Object _requireNonNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        return r0;
    }

    public static org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder construct(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder $r2;

        r0 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;

        r1 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;

        $r2 = new org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;

        specialinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(r0, r1);

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator subTypeValidator(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.cfg.MapperConfig;

        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subtypeValidator>;

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.util.Collection r3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: java.util.Collection;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: boolean useForType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(r1, r2, r3);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, java.util.Collection)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r2;
        java.util.Collection r3;
        boolean $z0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r3 := @parameter2: java.util.Collection;

        $z0 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: boolean useForType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r2);

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.SerializationConfig,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(r1, r2, r3);

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public boolean useForType(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping $r1;
        int[] $r2;
        int $i0, $i1;
        java.lang.Class $r3, $r4, $r5, $r6;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r7;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder;

        r7 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        $z0 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isPrimitive()>();

        if $z0 == 0 goto label01;

        return 0;

     label01:
        $r2 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$3: int[] $SwitchMap$com$fasterxml$jackson$databind$ObjectMapper$DefaultTyping>;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor>;

        $i0 = virtualinvoke $r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label08;
            case 4: goto label13;
            case 5: goto label14;
            default: goto label14;
        };

     label02:
        $z8 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();

        if $z8 == 0 goto label03;

        r7 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        goto label02;

     label03:
        $z10 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z10 == 0 goto label04;

        r7 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getReferencedType()>();

        goto label03;

     label04:
        $z5 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();

        if $z5 != 0 goto label05;

        $z6 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isConcrete()>();

        if $z6 != 0 goto label06;

        $r5 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/TreeNode;";

        $r6 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z7 = virtualinvoke $r5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r6);

        if $z7 != 0 goto label06;

     label05:
        $z11 = 1;

        goto label07;

     label06:
        $z11 = 0;

     label07:
        return $z11;

     label08:
        $z1 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();

        if $z1 == 0 goto label09;

        r7 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        goto label08;

     label09:
        $z2 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();

        if $z2 == 0 goto label10;

        r7 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getReferencedType()>();

        goto label09;

     label10:
        $z3 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();

        if $z3 != 0 goto label11;

        $r3 = class "Lorg/apache/flink/shaded/jackson2/com/fasterxml/jackson/core/TreeNode;";

        $r4 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();

        $z4 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r4);

        if $z4 != 0 goto label11;

        $z12 = 1;

        goto label12;

     label11:
        $z12 = 0;

     label12:
        return $z12;

     label13:
        return 1;

     label14:
        $z9 = virtualinvoke r7.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();

        return $z9;
    }

    public static void <clinit>()
    {
        <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: long serialVersionUID> = 1L;

        return;
    }
}
