class javassist.util.proxy.DefineClassHelper$Java7 extends javassist.util.proxy.DefineClassHelper$Helper
{
    private final javassist.util.proxy.SecurityActions stack;
    private final java.lang.invoke.MethodHandle defineClass;

    private void <init>()
    {
        javassist.util.proxy.DefineClassHelper$Java7 r0;
        javassist.util.proxy.SecurityActions $r1;
        java.lang.invoke.MethodHandle $r2;

        r0 := @this: javassist.util.proxy.DefineClassHelper$Java7;

        specialinvoke r0.<javassist.util.proxy.DefineClassHelper$Helper: void <init>(javassist.util.proxy.DefineClassHelper$1)>(null);

        $r1 = <javassist.util.proxy.SecurityActions: javassist.util.proxy.SecurityActions stack>;

        r0.<javassist.util.proxy.DefineClassHelper$Java7: javassist.util.proxy.SecurityActions stack> = $r1;

        $r2 = specialinvoke r0.<javassist.util.proxy.DefineClassHelper$Java7: java.lang.invoke.MethodHandle getDefineClassMethodHandle()>();

        r0.<javassist.util.proxy.DefineClassHelper$Java7: java.lang.invoke.MethodHandle defineClass> = $r2;

        return;
    }

    private final java.lang.invoke.MethodHandle getDefineClassMethodHandle()
    {
        javassist.util.proxy.DefineClassHelper$Java7 r0;
        javassist.util.proxy.DefineClassHelper$Helper $r2;
        java.lang.Class[] $r3;
        java.lang.Class $r4, $r5, $r8, $r9;
        java.lang.invoke.MethodHandle $r6;
        javassist.util.proxy.SecurityActions $r7;
        java.lang.IllegalAccessError $r10;
        java.lang.NoSuchMethodException $r11;
        java.lang.RuntimeException $r12;

        r0 := @this: javassist.util.proxy.DefineClassHelper$Java7;

        $r2 = staticinvoke <javassist.util.proxy.DefineClassHelper: javassist.util.proxy.DefineClassHelper$Helper access$400()>();

        if $r2 == null goto label1;

        $r7 = r0.<javassist.util.proxy.DefineClassHelper$Java7: javassist.util.proxy.SecurityActions stack>;

        $r8 = virtualinvoke $r7.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r8 == $r9 goto label1;

        $r10 = new java.lang.IllegalAccessError;

        specialinvoke $r10.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r10;

     label1:
        $r3 = newarray (java.lang.Class)[5];

        $r3[0] = class "Ljava/lang/String;";

        $r3[1] = class "[B";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[3] = $r5;

        $r3[4] = class "Ljava/security/ProtectionDomain;";

        $r6 = staticinvoke <javassist.util.proxy.SecurityActions: java.lang.invoke.MethodHandle getMethodHandle(java.lang.Class,java.lang.String,java.lang.Class[])>(class "Ljava/lang/ClassLoader;", "defineClass", $r3);

     label2:
        return $r6;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("cannot initialize", $r11);

        throw $r12;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
    }

    java.lang.Class defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain) throws java.lang.ClassFormatError
    {
        javassist.util.proxy.DefineClassHelper$Java7 r0;
        java.lang.String r1, $r18;
        byte[] r2;
        int i0, i1;
        java.lang.Class r3, $r8, $r14;
        java.lang.ClassLoader r4;
        java.security.ProtectionDomain r5;
        javassist.util.proxy.SecurityActions $r7;
        java.lang.Object[] $r9;
        java.lang.invoke.MethodHandle $r10;
        java.lang.Integer $r11, $r12;
        java.lang.Object $r13;
        java.lang.IllegalAccessError $r15;
        java.lang.Throwable $r16;
        boolean $z0, $z1;
        java.lang.ClassFormatError $r17, $r19;
        java.lang.RuntimeException $r20;

        r0 := @this: javassist.util.proxy.DefineClassHelper$Java7;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: java.lang.Class;

        r4 := @parameter5: java.lang.ClassLoader;

        r5 := @parameter6: java.security.ProtectionDomain;

        $r7 = r0.<javassist.util.proxy.DefineClassHelper$Java7: javassist.util.proxy.SecurityActions stack>;

        $r8 = virtualinvoke $r7.<javassist.util.proxy.SecurityActions: java.lang.Class getCallerClass()>();

        if $r8 == class "Ljavassist/util/proxy/DefineClassHelper;" goto label1;

        $r15 = new java.lang.IllegalAccessError;

        specialinvoke $r15.<java.lang.IllegalAccessError: void <init>(java.lang.String)>("Access denied for caller.");

        throw $r15;

     label1:
        $r10 = r0.<javassist.util.proxy.DefineClassHelper$Java7: java.lang.invoke.MethodHandle defineClass>;

        $r9 = newarray (java.lang.Object)[6];

        $r9[0] = r4;

        $r9[1] = r1;

        $r9[2] = r2;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[3] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r9[4] = $r12;

        $r9[5] = r5;

        $r13 = virtualinvoke $r10.<java.lang.invoke.MethodHandle: java.lang.Object invokeWithArguments(java.lang.Object[])>($r9);

        $r14 = (java.lang.Class) $r13;

     label2:
        return $r14;

     label3:
        $r16 := @caughtexception;

        $z0 = $r16 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label4;

        $r20 = (java.lang.RuntimeException) $r16;

        throw $r20;

     label4:
        $z1 = $r16 instanceof java.lang.ClassFormatError;

        if $z1 == 0 goto label5;

        $r19 = (java.lang.ClassFormatError) $r16;

        throw $r19;

     label5:
        $r17 = new java.lang.ClassFormatError;

        $r18 = virtualinvoke $r16.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r17.<java.lang.ClassFormatError: void <init>(java.lang.String)>($r18);

        throw $r17;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    void <init>(javassist.util.proxy.DefineClassHelper$1)
    {
        javassist.util.proxy.DefineClassHelper$Java7 r0;
        javassist.util.proxy.DefineClassHelper$1 r1;

        r0 := @this: javassist.util.proxy.DefineClassHelper$Java7;

        r1 := @parameter0: javassist.util.proxy.DefineClassHelper$1;

        specialinvoke r0.<javassist.util.proxy.DefineClassHelper$Java7: void <init>()>();

        return;
    }
}
