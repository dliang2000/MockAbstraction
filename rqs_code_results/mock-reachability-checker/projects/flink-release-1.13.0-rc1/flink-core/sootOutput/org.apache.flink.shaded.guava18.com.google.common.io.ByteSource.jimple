public abstract class org.apache.flink.shaded.guava18.com.google.common.io.ByteSource extends java.lang.Object
{
    private static final int BUF_SIZE;
    private static final byte[] countBuffer;

    protected void <init>()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.CharSource asCharSource(java.nio.charset.Charset)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        java.nio.charset.Charset r1;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$AsCharSource $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: java.nio.charset.Charset;

        $r2 = new org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$AsCharSource;

        specialinvoke $r2.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$AsCharSource: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.ByteSource,java.nio.charset.Charset,org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$1)>(r0, r1, null);

        return $r2;
    }

    public abstract java.io.InputStream openStream() throws java.io.IOException;

    public java.io.InputStream openBufferedStream() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        java.io.InputStream r1;
        boolean $z0;
        java.io.BufferedInputStream $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $z0 = r1 instanceof java.io.BufferedInputStream;

        if $z0 == 0 goto label1;

        $r2 = (java.io.BufferedInputStream) r1;

        goto label2;

     label1:
        $r2 = new java.io.BufferedInputStream;

        specialinvoke $r2.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r1);

     label2:
        return $r2;
    }

    public org.apache.flink.shaded.guava18.com.google.common.io.ByteSource slice(long, long)
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        long l0, l1;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$SlicedByteSource: void <init>(org.apache.flink.shaded.guava18.com.google.common.io.ByteSource,long,long,org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$1)>(r0, l0, l1, null);

        return $r1;
    }

    public boolean isEmpty() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r1;
        java.io.InputStream $r3, r8;
        java.io.Closeable $r4;
        int $i0;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        boolean $z1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r4 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r3);

        r8 = (java.io.InputStream) $r4;

        $i0 = virtualinvoke r8.<java.io.InputStream: int read()>();

        if $i0 != -1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return $z1;

     label4:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        $r7 := @caughtexception;

     label6:
        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    public long size() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        java.io.InputStream $r3, $r10, r13, r16;
        java.io.Closeable $r4, $r11;
        java.lang.Throwable $r5, $r7, $r8;
        java.lang.RuntimeException $r6;
        java.io.IOException $r9;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r12, r15;
        long l0, l1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r12 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label01:
        $r3 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r4 = virtualinvoke r12.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r3);

        r13 = (java.io.InputStream) $r4;

        l0 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: long countBySkipping(java.io.InputStream)>(r13);

     label02:
        virtualinvoke r12.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return l0;

     label03:
        $r9 := @caughtexception;

     label04:
        virtualinvoke r12.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        goto label07;

     label05:
        $r7 := @caughtexception;

     label06:
        virtualinvoke r12.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r7;

     label07:
        r15 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label08:
        $r10 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r11 = virtualinvoke r15.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r10);

        r16 = (java.io.InputStream) $r11;

        l1 = specialinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: long countByReading(java.io.InputStream)>(r16);

     label09:
        virtualinvoke r15.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return l1;

     label10:
        $r5 := @caughtexception;

        $r6 = virtualinvoke r15.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r5);

        throw $r6;

     label11:
        $r8 := @caughtexception;

     label12:
        virtualinvoke r15.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r8;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label12 with label11;
    }

    private long countBySkipping(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        java.io.InputStream r1;
        long l0, $l3, l8;
        int $i1, $i2, $i5, $i7;
        byte $b4, $b6;
        java.io.IOException $r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: java.io.InputStream;

        l8 = 0L;

     label1:
        $i1 = virtualinvoke r1.<java.io.InputStream: int available()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 2147483647);

        $l3 = (long) $i2;

        l0 = virtualinvoke r1.<java.io.InputStream: long skip(long)>($l3);

        $b4 = l0 cmp 0L;

        if $b4 > 0 goto label4;

        $i5 = virtualinvoke r1.<java.io.InputStream: int read()>();

        if $i5 != -1 goto label2;

        return l8;

     label2:
        $b6 = l8 cmp 0L;

        if $b6 != 0 goto label3;

        $i7 = virtualinvoke r1.<java.io.InputStream: int available()>();

        if $i7 != 0 goto label3;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>()>();

        throw $r2;

     label3:
        l8 = l8 + 1L;

        goto label5;

     label4:
        l8 = l8 + l0;

     label5:
        goto label1;
    }

    private long countByReading(java.io.InputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        java.io.InputStream r1;
        byte[] $r2;
        int $i1;
        long $l2, l4;
        byte $b3;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: java.io.InputStream;

        l4 = 0L;

     label1:
        $r2 = <org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: byte[] countBuffer>;

        $i1 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>($r2);

        $l2 = (long) $i1;

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label2;

        l4 = l4 + $l2;

        goto label1;

     label2:
        return l4;
    }

    public long copyTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        java.io.OutputStream r1;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r2;
        long l0;
        java.io.InputStream $r5, r10;
        java.io.Closeable $r6;
        java.lang.Throwable $r7, $r8;
        java.lang.RuntimeException $r9;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: java.io.OutputStream;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r5 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r6 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r5);

        r10 = (java.io.InputStream) $r6;

        l0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>(r10, r1);

     label2:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return l0;

     label3:
        $r8 := @caughtexception;

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r7 := @caughtexception;

     label5:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public long copyTo(org.apache.flink.shaded.guava18.com.google.common.io.ByteSink) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSink r1;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r2;
        java.io.OutputStream r3, $r8;
        long l0;
        java.io.InputStream $r6, r13;
        java.io.Closeable $r7, $r9;
        java.lang.Throwable $r10, $r11;
        java.lang.RuntimeException $r12;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.ByteSink;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r7 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r6);

        r13 = (java.io.InputStream) $r7;

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSink: java.io.OutputStream openStream()>();

        $r9 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r8);

        r3 = (java.io.OutputStream) $r9;

        l0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: long copy(java.io.InputStream,java.io.OutputStream)>(r13, r3);

     label2:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return l0;

     label3:
        $r11 := @caughtexception;

        $r12 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r11);

        throw $r12;

     label4:
        $r10 := @caughtexception;

     label5:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public byte[] read() throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r1;
        byte[] r2;
        java.io.InputStream $r4, r9;
        java.io.Closeable $r5;
        java.lang.Throwable $r6, $r7;
        java.lang.RuntimeException $r8;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r4 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r5 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r4);

        r9 = (java.io.InputStream) $r5;

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: byte[] toByteArray(java.io.InputStream)>(r9);

     label2:
        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return r2;

     label3:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r7);

        throw $r8;

     label4:
        $r6 := @caughtexception;

     label5:
        virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public java.lang.Object read(org.apache.flink.shaded.guava18.com.google.common.io.ByteProcessor) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteProcessor r1;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r2;
        java.lang.Object r3;
        java.io.InputStream $r6, r11;
        java.io.Closeable $r7;
        java.lang.Throwable $r8, $r9;
        java.lang.RuntimeException $r10;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.ByteProcessor;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r6 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r7 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r6);

        r11 = (java.io.InputStream) $r7;

        r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: java.lang.Object readBytes(java.io.InputStream,org.apache.flink.shaded.guava18.com.google.common.io.ByteProcessor)>(r11, r1);

     label2:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return r3;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r9);

        throw $r10;

     label4:
        $r8 := @caughtexception;

     label5:
        virtualinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public org.apache.flink.shaded.guava18.com.google.common.hash.HashCode hash(org.apache.flink.shaded.guava18.com.google.common.hash.HashFunction) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0;
        org.apache.flink.shaded.guava18.com.google.common.hash.HashFunction r1;
        org.apache.flink.shaded.guava18.com.google.common.hash.Hasher r2;
        java.io.OutputStream $r3;
        org.apache.flink.shaded.guava18.com.google.common.hash.HashCode $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.hash.HashFunction;

        r2 = interfaceinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.hash.HashFunction: org.apache.flink.shaded.guava18.com.google.common.hash.Hasher newHasher()>();

        $r3 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.hash.Funnels: java.io.OutputStream asOutputStream(org.apache.flink.shaded.guava18.com.google.common.hash.PrimitiveSink)>(r2);

        virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: long copyTo(java.io.OutputStream)>($r3);

        $r4 = interfaceinvoke r2.<org.apache.flink.shaded.guava18.com.google.common.hash.Hasher: org.apache.flink.shaded.guava18.com.google.common.hash.HashCode hash()>();

        return $r4;
    }

    public boolean contentEquals(org.apache.flink.shaded.guava18.com.google.common.io.ByteSource) throws java.io.IOException
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource r0, r1;
        byte[] r2, r3;
        org.apache.flink.shaded.guava18.com.google.common.io.Closer r4;
        java.io.InputStream r5, $r8, $r10, r15;
        int i0, i1;
        java.io.Closeable $r9, $r11;
        boolean $z0;
        java.lang.Throwable $r12, $r13;
        java.lang.RuntimeException $r14;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = newarray (byte)[4096];

        r3 = newarray (byte)[4096];

        r4 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.Closer: org.apache.flink.shaded.guava18.com.google.common.io.Closer create()>();

     label1:
        $r8 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r9 = virtualinvoke r4.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r8);

        r15 = (java.io.InputStream) $r9;

        $r10 = virtualinvoke r1.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: java.io.InputStream openStream()>();

        $r11 = virtualinvoke r4.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.io.Closeable register(java.io.Closeable)>($r10);

        r5 = (java.io.InputStream) $r11;

     label2:
        i0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: int read(java.io.InputStream,byte[],int,int)>(r15, r2, 0, 4096);

        i1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteStreams: int read(java.io.InputStream,byte[],int,int)>(r5, r3, 0, 4096);

        if i0 != i1 goto label3;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r2, r3);

        if $z0 != 0 goto label4;

     label3:
        virtualinvoke r4.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return 0;

     label4:
        if i0 == 4096 goto label6;

     label5:
        virtualinvoke r4.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        return 1;

     label6:
        goto label2;

     label7:
        $r13 := @caughtexception;

        $r14 = virtualinvoke r4.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: java.lang.RuntimeException rethrow(java.lang.Throwable)>($r13);

        throw $r14;

     label8:
        $r12 := @caughtexception;

     label9:
        virtualinvoke r4.<org.apache.flink.shaded.guava18.com.google.common.io.Closer: void close()>();

        throw $r12;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label6 to label7 with label7;
        catch java.lang.Throwable from label6 to label9 with label8;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.io.ByteSource concat(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$ConcatenatedByteSource $r1;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$ConcatenatedByteSource;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$ConcatenatedByteSource: void <init>(java.lang.Iterable)>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.io.ByteSource concat(java.util.Iterator)
    {
        java.util.Iterator r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r1;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource $r2;

        r0 := @parameter0: java.util.Iterator;

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList copyOf(java.util.Iterator)>(r0);

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource concat(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static transient org.apache.flink.shaded.guava18.com.google.common.io.ByteSource concat(org.apache.flink.shaded.guava18.com.google.common.io.ByteSource[])
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource[] r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList $r1;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource $r2;

        r0 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource[];

        $r1 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList: org.apache.flink.shaded.guava18.com.google.common.collect.ImmutableList copyOf(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource concat(java.lang.Iterable)>($r1);

        return $r2;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.io.ByteSource wrap(byte[])
    {
        byte[] r0;
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$ByteArrayByteSource $r1;

        r0 := @parameter0: byte[];

        $r1 = new org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$ByteArrayByteSource;

        specialinvoke $r1.<org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$ByteArrayByteSource: void <init>(byte[])>(r0);

        return $r1;
    }

    public static org.apache.flink.shaded.guava18.com.google.common.io.ByteSource empty()
    {
        org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$EmptyByteSource $r0;

        $r0 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$EmptyByteSource: org.apache.flink.shaded.guava18.com.google.common.io.ByteSource$EmptyByteSource access$200()>();

        return $r0;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: int BUF_SIZE> = 4096;

        $r0 = newarray (byte)[4096];

        <org.apache.flink.shaded.guava18.com.google.common.io.ByteSource: byte[] countBuffer> = $r0;

        return;
    }
}
