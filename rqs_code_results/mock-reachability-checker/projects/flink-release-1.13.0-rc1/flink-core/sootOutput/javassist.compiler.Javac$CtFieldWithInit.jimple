public class javassist.compiler.Javac$CtFieldWithInit extends javassist.CtField
{
    private javassist.compiler.ast.ASTree init;

    void <init>(javassist.CtClass, java.lang.String, javassist.CtClass) throws javassist.CannotCompileException
    {
        javassist.compiler.Javac$CtFieldWithInit r0;
        javassist.CtClass r1, r3;
        java.lang.String r2;

        r0 := @this: javassist.compiler.Javac$CtFieldWithInit;

        r1 := @parameter0: javassist.CtClass;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javassist.CtClass;

        specialinvoke r0.<javassist.CtField: void <init>(javassist.CtClass,java.lang.String,javassist.CtClass)>(r1, r2, r3);

        r0.<javassist.compiler.Javac$CtFieldWithInit: javassist.compiler.ast.ASTree init> = null;

        return;
    }

    protected void setInit(javassist.compiler.ast.ASTree)
    {
        javassist.compiler.Javac$CtFieldWithInit r0;
        javassist.compiler.ast.ASTree r1;

        r0 := @this: javassist.compiler.Javac$CtFieldWithInit;

        r1 := @parameter0: javassist.compiler.ast.ASTree;

        r0.<javassist.compiler.Javac$CtFieldWithInit: javassist.compiler.ast.ASTree init> = r1;

        return;
    }

    protected javassist.compiler.ast.ASTree getInitAST()
    {
        javassist.compiler.Javac$CtFieldWithInit r0;
        javassist.compiler.ast.ASTree $r1;

        r0 := @this: javassist.compiler.Javac$CtFieldWithInit;

        $r1 = r0.<javassist.compiler.Javac$CtFieldWithInit: javassist.compiler.ast.ASTree init>;

        return $r1;
    }
}
