final class org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner extends java.lang.Object implements org.apache.flink.api.common.eventtime.WatermarkStrategy
{
    private static final long serialVersionUID;
    private final org.apache.flink.api.common.eventtime.WatermarkStrategy baseStrategy;
    private final org.apache.flink.api.common.eventtime.TimestampAssignerSupplier timestampAssigner;

    void <init>(org.apache.flink.api.common.eventtime.WatermarkStrategy, org.apache.flink.api.common.eventtime.TimestampAssignerSupplier)
    {
        org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner r0;
        org.apache.flink.api.common.eventtime.WatermarkStrategy r1;
        org.apache.flink.api.common.eventtime.TimestampAssignerSupplier r2;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.WatermarkStrategy;

        r2 := @parameter1: org.apache.flink.api.common.eventtime.TimestampAssignerSupplier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner: org.apache.flink.api.common.eventtime.WatermarkStrategy baseStrategy> = r1;

        r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner: org.apache.flink.api.common.eventtime.TimestampAssignerSupplier timestampAssigner> = r2;

        return;
    }

    public org.apache.flink.api.common.eventtime.TimestampAssigner createTimestampAssigner(org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context)
    {
        org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner r0;
        org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context r1;
        org.apache.flink.api.common.eventtime.TimestampAssignerSupplier $r2;
        org.apache.flink.api.common.eventtime.TimestampAssigner $r3;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context;

        $r2 = r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner: org.apache.flink.api.common.eventtime.TimestampAssignerSupplier timestampAssigner>;

        $r3 = interfaceinvoke $r2.<org.apache.flink.api.common.eventtime.TimestampAssignerSupplier: org.apache.flink.api.common.eventtime.TimestampAssigner createTimestampAssigner(org.apache.flink.api.common.eventtime.TimestampAssignerSupplier$Context)>(r1);

        return $r3;
    }

    public org.apache.flink.api.common.eventtime.WatermarkGenerator createWatermarkGenerator(org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context)
    {
        org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner r0;
        org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context r1;
        org.apache.flink.api.common.eventtime.WatermarkStrategy $r2;
        org.apache.flink.api.common.eventtime.WatermarkGenerator $r3;

        r0 := @this: org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context;

        $r2 = r0.<org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner: org.apache.flink.api.common.eventtime.WatermarkStrategy baseStrategy>;

        $r3 = interfaceinvoke $r2.<org.apache.flink.api.common.eventtime.WatermarkStrategy: org.apache.flink.api.common.eventtime.WatermarkGenerator createWatermarkGenerator(org.apache.flink.api.common.eventtime.WatermarkGeneratorSupplier$Context)>(r1);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.eventtime.WatermarkStrategyWithTimestampAssigner: long serialVersionUID> = 1L;

        return;
    }
}
