public class org.mockito.internal.configuration.plugins.Plugins extends java.lang.Object
{
    private static final org.mockito.internal.configuration.plugins.PluginRegistry registry;

    public void <init>()
    {
        org.mockito.internal.configuration.plugins.Plugins r0;

        r0 := @this: org.mockito.internal.configuration.plugins.Plugins;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.mockito.plugins.StackTraceCleanerProvider getStackTraceCleanerProvider()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry $r0;
        org.mockito.plugins.StackTraceCleanerProvider $r1;

        $r0 = <org.mockito.internal.configuration.plugins.Plugins: org.mockito.internal.configuration.plugins.PluginRegistry registry>;

        $r1 = virtualinvoke $r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.StackTraceCleanerProvider getStackTraceCleanerProvider()>();

        return $r1;
    }

    public static org.mockito.plugins.MockMaker getMockMaker()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry $r0;
        org.mockito.plugins.MockMaker $r1;

        $r0 = <org.mockito.internal.configuration.plugins.Plugins: org.mockito.internal.configuration.plugins.PluginRegistry registry>;

        $r1 = virtualinvoke $r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.MockMaker getMockMaker()>();

        return $r1;
    }

    public static org.mockito.plugins.InstantiatorProvider2 getInstantiatorProvider()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry $r0;
        org.mockito.plugins.InstantiatorProvider2 $r1;

        $r0 = <org.mockito.internal.configuration.plugins.Plugins: org.mockito.internal.configuration.plugins.PluginRegistry registry>;

        $r1 = virtualinvoke $r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.InstantiatorProvider2 getInstantiatorProvider()>();

        return $r1;
    }

    public static org.mockito.plugins.AnnotationEngine getAnnotationEngine()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry $r0;
        org.mockito.plugins.AnnotationEngine $r1;

        $r0 = <org.mockito.internal.configuration.plugins.Plugins: org.mockito.internal.configuration.plugins.PluginRegistry registry>;

        $r1 = virtualinvoke $r0.<org.mockito.internal.configuration.plugins.PluginRegistry: org.mockito.plugins.AnnotationEngine getAnnotationEngine()>();

        return $r1;
    }

    public static org.mockito.plugins.MockitoPlugins getPlugins()
    {
        org.mockito.internal.configuration.plugins.DefaultMockitoPlugins $r0;

        $r0 = new org.mockito.internal.configuration.plugins.DefaultMockitoPlugins;

        specialinvoke $r0.<org.mockito.internal.configuration.plugins.DefaultMockitoPlugins: void <init>()>();

        return $r0;
    }

    static void <clinit>()
    {
        org.mockito.internal.configuration.plugins.PluginRegistry $r0;

        $r0 = new org.mockito.internal.configuration.plugins.PluginRegistry;

        specialinvoke $r0.<org.mockito.internal.configuration.plugins.PluginRegistry: void <init>()>();

        <org.mockito.internal.configuration.plugins.Plugins: org.mockito.internal.configuration.plugins.PluginRegistry registry> = $r0;

        return;
    }
}
