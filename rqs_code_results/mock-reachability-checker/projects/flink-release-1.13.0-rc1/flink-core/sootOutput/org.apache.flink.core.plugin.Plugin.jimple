public interface  org.apache.flink.core.plugin.Plugin extends java.lang.Object
{

    public java.lang.ClassLoader getClassLoader()
    {
        org.apache.flink.core.plugin.Plugin r0;
        java.lang.Class $r1, $r4;
        java.lang.ClassLoader $r2, $r7;
        java.lang.Object[] $r3;
        java.lang.String $r5;
        java.lang.Object $r6;

        r0 := @this: org.apache.flink.core.plugin.Plugin;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r3[0] = $r5;

        $r6 = staticinvoke <org.apache.flink.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r2, "%s plugin with null class loader", $r3);

        $r7 = (java.lang.ClassLoader) $r6;

        return $r7;
    }

    public void configure(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.core.plugin.Plugin r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.core.plugin.Plugin;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        return;
    }
}
