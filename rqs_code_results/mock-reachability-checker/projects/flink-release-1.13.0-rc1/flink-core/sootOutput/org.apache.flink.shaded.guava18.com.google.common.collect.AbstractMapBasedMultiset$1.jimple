class org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1 extends java.lang.Object implements java.util.Iterator
{
    java.util.Map$Entry toRemove;
    final java.util.Iterator val$backingEntries;
    final org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset this$0;

    void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset, java.util.Iterator)
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1 r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset r1;
        java.util.Iterator r2;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1;

        r1 := @parameter0: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset;

        r2 := @parameter1: java.util.Iterator;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset this$0> = r1;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Iterator val$backingEntries> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Iterator val$backingEntries>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public org.apache.flink.shaded.guava18.com.google.common.collect.Multiset$Entry next()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1 r0;
        java.util.Map$Entry r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1$1 $r4;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Iterator val$backingEntries>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.util.Map$Entry) $r3;

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Map$Entry toRemove> = r1;

        $r4 = new org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1$1;

        specialinvoke $r4.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1$1: void <init>(org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1,java.util.Map$Entry)>(r0, r1);

        return $r4;
    }

    public void remove()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1 r0;
        java.util.Map$Entry $r1, $r2;
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset $r3;
        java.lang.Object $r4;
        org.apache.flink.shaded.guava18.com.google.common.collect.Count $r5;
        int $i0;
        long $l1;
        java.util.Iterator $r6;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1;

        $r1 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Map$Entry toRemove>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.CollectPreconditions: void checkRemove(boolean)>($z0);

        $r3 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset this$0>;

        $r2 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Map$Entry toRemove>;

        $r4 = interfaceinvoke $r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (org.apache.flink.shaded.guava18.com.google.common.collect.Count) $r4;

        $i0 = virtualinvoke $r5.<org.apache.flink.shaded.guava18.com.google.common.collect.Count: int getAndSet(int)>(0);

        $l1 = (long) $i0;

        staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset: long access$122(org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset,long)>($r3, $l1);

        $r6 = r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Iterator val$backingEntries>;

        interfaceinvoke $r6.<java.util.Iterator: void remove()>();

        r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: java.util.Map$Entry toRemove> = null;

        return;
    }

    public volatile java.lang.Object next()
    {
        org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1 r0;
        org.apache.flink.shaded.guava18.com.google.common.collect.Multiset$Entry $r1;

        r0 := @this: org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1;

        $r1 = virtualinvoke r0.<org.apache.flink.shaded.guava18.com.google.common.collect.AbstractMapBasedMultiset$1: org.apache.flink.shaded.guava18.com.google.common.collect.Multiset$Entry next()>();

        return $r1;
    }
}
