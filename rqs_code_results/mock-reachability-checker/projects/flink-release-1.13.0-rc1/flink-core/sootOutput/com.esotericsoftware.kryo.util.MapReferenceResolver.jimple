public class com.esotericsoftware.kryo.util.MapReferenceResolver extends java.lang.Object implements com.esotericsoftware.kryo.ReferenceResolver
{
    protected com.esotericsoftware.kryo.Kryo kryo;
    protected final com.esotericsoftware.kryo.util.IdentityObjectIntMap writtenObjects;
    protected final java.util.ArrayList readObjects;

    public void <init>()
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        com.esotericsoftware.kryo.util.IdentityObjectIntMap $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.esotericsoftware.kryo.util.IdentityObjectIntMap;

        specialinvoke $r1.<com.esotericsoftware.kryo.util.IdentityObjectIntMap: void <init>()>();

        r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.util.IdentityObjectIntMap writtenObjects> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: java.util.ArrayList readObjects> = $r2;

        return;
    }

    public void setKryo(com.esotericsoftware.kryo.Kryo)
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        com.esotericsoftware.kryo.Kryo r1;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        r1 := @parameter0: com.esotericsoftware.kryo.Kryo;

        r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.Kryo kryo> = r1;

        return;
    }

    public int addWrittenObject(java.lang.Object)
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        java.lang.Object r1;
        int i0;
        com.esotericsoftware.kryo.util.IdentityObjectIntMap $r2, $r3;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.util.IdentityObjectIntMap writtenObjects>;

        i0 = $r2.<com.esotericsoftware.kryo.util.IdentityObjectIntMap: int size>;

        $r3 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.util.IdentityObjectIntMap writtenObjects>;

        virtualinvoke $r3.<com.esotericsoftware.kryo.util.IdentityObjectIntMap: void put(java.lang.Object,int)>(r1, i0);

        return i0;
    }

    public int getWrittenId(java.lang.Object)
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        java.lang.Object r1;
        com.esotericsoftware.kryo.util.IdentityObjectIntMap $r2;
        int $i0;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.util.IdentityObjectIntMap writtenObjects>;

        $i0 = virtualinvoke $r2.<com.esotericsoftware.kryo.util.IdentityObjectIntMap: int get(java.lang.Object,int)>(r1, -1);

        return $i0;
    }

    public int nextReadId(java.lang.Class)
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        java.lang.Class r1;
        int i0;
        java.util.ArrayList $r2, $r3;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: java.util.ArrayList readObjects>;

        i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r3 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: java.util.ArrayList readObjects>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        return i0;
    }

    public void setReadObject(int, java.lang.Object)
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        int i0;
        java.lang.Object r1;
        java.util.ArrayList $r2;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: java.util.ArrayList readObjects>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;
    }

    public java.lang.Object getReadObject(java.lang.Class, int)
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        java.lang.Class r1;
        int i0;
        java.util.ArrayList $r2;
        java.lang.Object $r3;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        r1 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        $r2 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: java.util.ArrayList readObjects>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        return $r3;
    }

    public void reset()
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        java.util.ArrayList $r1;
        com.esotericsoftware.kryo.util.IdentityObjectIntMap $r2;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        $r1 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: java.util.ArrayList readObjects>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $r2 = r0.<com.esotericsoftware.kryo.util.MapReferenceResolver: com.esotericsoftware.kryo.util.IdentityObjectIntMap writtenObjects>;

        virtualinvoke $r2.<com.esotericsoftware.kryo.util.IdentityObjectIntMap: void clear()>();

        return;
    }

    public boolean useReferences(java.lang.Class)
    {
        com.esotericsoftware.kryo.util.MapReferenceResolver r0;
        java.lang.Class r1;
        boolean $z0, $z1;

        r0 := @this: com.esotericsoftware.kryo.util.MapReferenceResolver;

        r1 := @parameter0: java.lang.Class;

        $z0 = staticinvoke <com.esotericsoftware.kryo.util.Util: boolean isWrapperClass(java.lang.Class)>(r1);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
