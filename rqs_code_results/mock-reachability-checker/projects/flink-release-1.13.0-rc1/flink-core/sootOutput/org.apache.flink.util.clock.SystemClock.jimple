public final class org.apache.flink.util.clock.SystemClock extends org.apache.flink.util.clock.Clock
{
    private static final org.apache.flink.util.clock.SystemClock INSTANCE;

    public static org.apache.flink.util.clock.SystemClock getInstance()
    {
        org.apache.flink.util.clock.SystemClock $r0;

        $r0 = <org.apache.flink.util.clock.SystemClock: org.apache.flink.util.clock.SystemClock INSTANCE>;

        return $r0;
    }

    public long absoluteTimeMillis()
    {
        org.apache.flink.util.clock.SystemClock r0;
        long $l0;

        r0 := @this: org.apache.flink.util.clock.SystemClock;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l0;
    }

    public long relativeTimeMillis()
    {
        org.apache.flink.util.clock.SystemClock r0;
        long $l0, $l1;

        r0 := @this: org.apache.flink.util.clock.SystemClock;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $l1 = $l0 / 1000000L;

        return $l1;
    }

    public long relativeTimeNanos()
    {
        org.apache.flink.util.clock.SystemClock r0;
        long $l0;

        r0 := @this: org.apache.flink.util.clock.SystemClock;

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        return $l0;
    }

    private void <init>()
    {
        org.apache.flink.util.clock.SystemClock r0;

        r0 := @this: org.apache.flink.util.clock.SystemClock;

        specialinvoke r0.<org.apache.flink.util.clock.Clock: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.apache.flink.util.clock.SystemClock $r0;

        $r0 = new org.apache.flink.util.clock.SystemClock;

        specialinvoke $r0.<org.apache.flink.util.clock.SystemClock: void <init>()>();

        <org.apache.flink.util.clock.SystemClock: org.apache.flink.util.clock.SystemClock INSTANCE> = $r0;

        return;
    }
}
