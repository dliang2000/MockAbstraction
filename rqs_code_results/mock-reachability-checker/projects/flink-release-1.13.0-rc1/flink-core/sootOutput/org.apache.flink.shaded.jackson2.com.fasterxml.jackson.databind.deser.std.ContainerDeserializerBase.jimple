public abstract class org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase extends org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer implements org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable
{
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType;
    protected final org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider;
    protected final boolean _skipNullValues;
    protected final java.lang.Boolean _unwrapSingle;

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider r2;
        java.lang.Boolean r3;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider;

        r3 := @parameter2: java.lang.Boolean;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>(r1);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType> = r1;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: java.lang.Boolean _unwrapSingle> = r3;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider> = r2;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: boolean isSkipper(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider)>(r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: boolean _skipNullValues> = $z0;

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(r1, null, null);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0, r1;
        java.lang.Boolean $r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider $r3;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        $r3 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;

        $r2 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: java.lang.Boolean _unwrapSingle>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase,org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(r1, $r3, $r2);

        return;
    }

    protected void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase, org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0, r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider r2;
        java.lang.Boolean r3;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r4, $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r2 := @parameter1: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider;

        r3 := @parameter2: java.lang.Boolean;

        $r4 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        specialinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType)>($r4);

        $r5 = r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType> = $r5;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider> = r2;

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: java.lang.Boolean _unwrapSingle> = r3;

        $z0 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: boolean isSkipper(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.NullValueProvider)>(r2);

        r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: boolean _skipNullValues> = $z0;

        return;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        return $r1;
    }

    public java.lang.Boolean supportsUpdate(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig r1;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationConfig;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r2;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String)
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        java.lang.String r1, $r7, $r8;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer r2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.SettableBeanProperty $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.Object[] $r5;
        java.lang.Class $r6;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer()>();

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5[1] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot handle managed/back reference \'%s\': type: container deserializer of type %s returned null for \'getContentDeserializer()\'", $r5);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        $r3 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        $r1 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.type.TypeFactory: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType unknownType()>();

        return $r4;

     label1:
        $r2 = r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType _containerType>;

        $r3 = virtualinvoke $r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getContentType()>();

        return $r3;
    }

    public abstract org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer();

    public org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern()
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern $r1;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        $r1 = <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.AccessPattern DYNAMIC>;

        return $r1;
    }

    public java.lang.Object getEmptyValue(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext) throws org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext r1;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator r2;
        java.lang.Object[] $r3;
        java.lang.String $r4;
        boolean $z0;
        java.io.IOException $r6;
        java.lang.Object $r7, $r9;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType r8;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r1 := @parameter0: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext;

        r2 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDefault()>();

        if $z0 != 0 goto label2;

     label1:
        r8 = virtualinvoke r0.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType getValueType()>();

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r8;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot create empty instance of %s, no default Creator", $r3);

        virtualinvoke r1.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JavaType,java.lang.String)>(r8, $r4);

     label2:
        $r9 = virtualinvoke r2.<org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext)>(r1);

     label3:
        return $r9;

     label4:
        $r6 := @caughtexception;

        $r7 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object throwAsMappingException(org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)>(r1, $r6);

        return $r7;

        catch java.io.IOException from label2 to label3 with label4;
    }

    protected java.lang.Object wrapAndThrow(java.lang.Throwable, java.lang.Object, java.lang.String) throws java.io.IOException
    {
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase r0;
        java.lang.Object r1, $r4;
        java.lang.String r2, $r5;
        boolean $z0, $z1, $z2;
        org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException $r6;
        java.io.IOException $r7;
        java.lang.Throwable $r8, r9;

        r0 := @this: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;

        r9 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.String;

     label1:
        $z0 = r9 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r9.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r8 == null goto label2;

        r9 = virtualinvoke r9.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfError(java.lang.Throwable)>(r9);

        $z1 = r9 instanceof java.io.IOException;

        if $z1 == 0 goto label3;

        $z2 = r9 instanceof org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException;

        if $z2 != 0 goto label3;

        $r7 = (java.io.IOException) r9;

        throw $r7;

     label3:
        $r4 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object nonNull(java.lang.Object,java.lang.Object)>(r2, "N/A");

        $r5 = (java.lang.String) $r4;

        $r6 = staticinvoke <org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException: org.apache.flink.shaded.jackson2.com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>(r9, r1, $r5);

        throw $r6;
    }
}
