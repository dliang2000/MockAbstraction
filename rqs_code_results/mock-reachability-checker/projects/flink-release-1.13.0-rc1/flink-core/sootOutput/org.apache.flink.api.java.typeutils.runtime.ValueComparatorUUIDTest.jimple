public class org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest r0;
        boolean z0;
        org.apache.flink.api.java.typeutils.runtime.ValueComparator $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.ValueComparator;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.ValueComparator: void <init>(boolean,java.lang.Class)>(z0, class "Lorg/apache/flink/api/java/typeutils/runtime/ValueID;");

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest r0;
        org.apache.flink.api.java.typeutils.runtime.ValueSerializer $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.ValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.ValueSerializer: void <init>(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/ValueID;");

        return $r1;
    }

    protected org.apache.flink.api.java.typeutils.runtime.ValueID[] getSortedTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest r0;
        org.apache.flink.api.java.typeutils.runtime.ValueID[] $r1;
        org.apache.flink.api.java.typeutils.runtime.ValueID $r2, $r4, $r6;
        java.util.UUID $r3, $r5, $r7;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest;

        $r1 = newarray (org.apache.flink.api.java.typeutils.runtime.ValueID)[3];

        $r2 = new org.apache.flink.api.java.typeutils.runtime.ValueID;

        $r3 = new java.util.UUID;

        specialinvoke $r3.<java.util.UUID: void <init>(long,long)>(0L, 0L);

        specialinvoke $r2.<org.apache.flink.api.java.typeutils.runtime.ValueID: void <init>(java.util.UUID)>($r3);

        $r1[0] = $r2;

        $r4 = new org.apache.flink.api.java.typeutils.runtime.ValueID;

        $r5 = new java.util.UUID;

        specialinvoke $r5.<java.util.UUID: void <init>(long,long)>(1L, 0L);

        specialinvoke $r4.<org.apache.flink.api.java.typeutils.runtime.ValueID: void <init>(java.util.UUID)>($r5);

        $r1[1] = $r4;

        $r6 = new org.apache.flink.api.java.typeutils.runtime.ValueID;

        $r7 = new java.util.UUID;

        specialinvoke $r7.<java.util.UUID: void <init>(long,long)>(1L, 1L);

        specialinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.ValueID: void <init>(java.util.UUID)>($r7);

        $r1[2] = $r6;

        return $r1;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest r0;
        org.apache.flink.api.java.typeutils.runtime.ValueID[] $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.ValueComparatorUUIDTest: org.apache.flink.api.java.typeutils.runtime.ValueID[] getSortedTestData()>();

        return $r1;
    }
}
