public final class org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216 extends java.lang.Object implements java.util.function.Predicate
{

    public static java.util.function.Predicate bootstrap$()
    {
        org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216 $r0;

        $r0 = new org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216;

        specialinvoke $r0.<org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216: void <init>()>();

        return $r0;
    }

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216 $r0;

        $r0 := @this: org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean test(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216 $r0;
        java.lang.Object $r1;
        org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility $r2;
        boolean $z0;

        $r0 := @this: org.apache.flink.api.common.typeutils.TypeSerializerMatchers$isCompatibleAfterMigration__216;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility) $r1;

        $z0 = virtualinvoke $r2.<org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility: boolean isCompatibleAfterMigration()>();

        return $z0;
    }
}
