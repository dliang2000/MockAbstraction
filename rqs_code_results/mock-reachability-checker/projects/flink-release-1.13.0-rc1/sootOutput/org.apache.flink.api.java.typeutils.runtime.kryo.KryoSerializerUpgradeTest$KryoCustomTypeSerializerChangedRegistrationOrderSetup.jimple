public final class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup extends java.lang.Object implements org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$PreUpgradeSetup
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createPriorSerializer()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup r0;
        org.apache.flink.api.common.ExecutionConfig $r2;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup;

        $r2 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerTypeWithKryoSerializer(java.lang.Class,java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Dog;", class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$DogKryoSerializer;");

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerKryoType(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Cat;");

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerTypeWithKryoSerializer(java.lang.Class,java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Parrot;", class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$ParrotKryoSerializer;");

        $r3 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Animal;", $r2);

        return $r3;
    }

    public org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Animal createTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup r0;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Dog $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Dog;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Dog: void <init>(java.lang.String)>("Hasso");

        return $r1;
    }

    public volatile java.lang.Object createTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup r0;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Animal $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderSetup: org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Animal createTestData()>();

        return $r1;
    }
}
