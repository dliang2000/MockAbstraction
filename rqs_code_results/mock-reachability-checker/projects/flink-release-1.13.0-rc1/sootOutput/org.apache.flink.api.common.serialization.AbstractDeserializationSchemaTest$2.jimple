class org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2 extends org.apache.flink.api.common.serialization.AbstractDeserializationSchema
{
    final org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest this$0;

    void <init>(org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest)
    {
        org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2 r0;
        org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest r1;

        r0 := @this: org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2;

        r1 := @parameter0: org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest;

        r0.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2: org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest this$0> = r1;

        specialinvoke r0.<org.apache.flink.api.common.serialization.AbstractDeserializationSchema: void <init>()>();

        return;
    }

    public org.apache.flink.api.java.tuple.Tuple2 deserialize(byte[]) throws java.io.IOException
    {
        org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2 r0;
        byte[] r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2;

        r1 := @parameter0: byte[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public volatile java.lang.Object deserialize(byte[]) throws java.io.IOException
    {
        org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2 r0;
        byte[] r1;
        org.apache.flink.api.java.tuple.Tuple2 $r2;

        r0 := @this: org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<org.apache.flink.api.common.serialization.AbstractDeserializationSchemaTest$2: org.apache.flink.api.java.tuple.Tuple2 deserialize(byte[])>(r1);

        return $r2;
    }
}
