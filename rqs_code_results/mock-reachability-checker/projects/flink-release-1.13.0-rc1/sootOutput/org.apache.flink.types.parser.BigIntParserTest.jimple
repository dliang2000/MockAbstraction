public class org.apache.flink.types.parser.BigIntParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        $r1 = newarray (java.lang.String)[6];

        $r1[0] = "-8745979691234123413478523984729447";

        $r1[1] = "-10000";

        $r1[2] = "-1";

        $r1[3] = "0";

        $r1[4] = "0000000";

        $r1[5] = "8745979691234123413478523984729447";

        return $r1;
    }

    public java.math.BigInteger[] getValidTestResults()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;
        java.math.BigInteger[] $r1;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        $r1 = newarray (java.math.BigInteger)[6];

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>("-8745979691234123413478523984729447");

        $r1[0] = $r2;

        $r3 = new java.math.BigInteger;

        specialinvoke $r3.<java.math.BigInteger: void <init>(java.lang.String)>("-10000");

        $r1[1] = $r3;

        $r4 = new java.math.BigInteger;

        specialinvoke $r4.<java.math.BigInteger: void <init>(java.lang.String)>("-1");

        $r1[2] = $r4;

        $r5 = new java.math.BigInteger;

        specialinvoke $r5.<java.math.BigInteger: void <init>(java.lang.String)>("0");

        $r1[3] = $r5;

        $r6 = new java.math.BigInteger;

        specialinvoke $r6.<java.math.BigInteger: void <init>(java.lang.String)>("0");

        $r1[4] = $r6;

        $r7 = new java.math.BigInteger;

        specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String)>("8745979691234123413478523984729447");

        $r1[5] = $r7;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        $r1 = newarray (java.lang.String)[9];

        $r1[0] = "1.1";

        $r1[1] = "a";

        $r1[2] = "123abc4";

        $r1[3] = "-57-6";

        $r1[4] = "7-877678";

        $r1[5] = " 1";

        $r1[6] = "2 ";

        $r1[7] = " ";

        $r1[8] = "\t";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        return 0;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;
        org.apache.flink.types.parser.BigIntParser $r1;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        $r1 = new org.apache.flink.types.parser.BigIntParser;

        specialinvoke $r1.<org.apache.flink.types.parser.BigIntParser: void <init>()>();

        return $r1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        return class "Ljava/math/BigInteger;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.BigIntParserTest r0;
        java.math.BigInteger[] $r1;

        r0 := @this: org.apache.flink.types.parser.BigIntParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.BigIntParserTest: java.math.BigInteger[] getValidTestResults()>();

        return $r1;
    }
}
