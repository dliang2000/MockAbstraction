final class org.apache.flink.testutils.serialization.types.Util$1 extends org.apache.flink.testutils.serialization.types.Util$MockRecords
{
    final org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory val$type;

    void <init>(int, org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory)
    {
        org.apache.flink.testutils.serialization.types.Util$1 r0;
        int i0;
        org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory r1;

        r0 := @this: org.apache.flink.testutils.serialization.types.Util$1;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory;

        r0.<org.apache.flink.testutils.serialization.types.Util$1: org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory val$type> = r1;

        specialinvoke r0.<org.apache.flink.testutils.serialization.types.Util$MockRecords: void <init>(int)>(i0);

        return;
    }

    protected org.apache.flink.testutils.serialization.types.SerializationTestType getRecord()
    {
        org.apache.flink.testutils.serialization.types.Util$1 r0;
        org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory $r1;
        org.apache.flink.testutils.serialization.types.SerializationTestType $r2, $r4;
        java.util.Random $r3;

        r0 := @this: org.apache.flink.testutils.serialization.types.Util$1;

        $r1 = r0.<org.apache.flink.testutils.serialization.types.Util$1: org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory val$type>;

        $r2 = virtualinvoke $r1.<org.apache.flink.testutils.serialization.types.SerializationTestTypeFactory: org.apache.flink.testutils.serialization.types.SerializationTestType factory()>();

        $r3 = staticinvoke <org.apache.flink.testutils.serialization.types.Util: java.util.Random access$000()>();

        $r4 = interfaceinvoke $r2.<org.apache.flink.testutils.serialization.types.SerializationTestType: org.apache.flink.testutils.serialization.types.SerializationTestType getRandom(java.util.Random)>($r3);

        return $r4;
    }
}
