class org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2 extends org.apache.flink.core.fs.AbstractCloseableRegistryTest$ProducerThread
{
    int count;
    final org.apache.flink.core.fs.SafetyNetCloseableRegistryTest this$0;

    void <init>(org.apache.flink.core.fs.SafetyNetCloseableRegistryTest, org.apache.flink.util.AbstractCloseableRegistry, java.util.concurrent.atomic.AtomicInteger, int)
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2 r0;
        org.apache.flink.core.fs.SafetyNetCloseableRegistryTest r1;
        org.apache.flink.util.AbstractCloseableRegistry r2;
        java.util.concurrent.atomic.AtomicInteger r3;
        int i0;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2;

        r1 := @parameter0: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest;

        r2 := @parameter1: org.apache.flink.util.AbstractCloseableRegistry;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        i0 := @parameter3: int;

        r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest this$0> = r1;

        specialinvoke r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$ProducerThread: void <init>(org.apache.flink.util.AbstractCloseableRegistry,java.util.concurrent.atomic.AtomicInteger,int)>(r2, r3, i0);

        r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2: int count> = 0;

        return;
    }

    protected void createAndRegisterStream() throws java.io.IOException
    {
        org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2 r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r4, $r7, $r8, $r9;
        java.lang.Thread $r5;
        int $i0, $i1, $i2;
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestStream $r10;
        java.util.concurrent.atomic.AtomicInteger $r11;
        org.apache.flink.util.AbstractCloseableRegistry $r12;
        org.apache.flink.core.fs.SafetyNetCloseableRegistry $r13;

        r0 := @this: org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r6 = virtualinvoke $r5.<java.lang.Thread: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2: int count>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestStream;

        $r11 = r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2: java.util.concurrent.atomic.AtomicInteger refCount>;

        specialinvoke $r10.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestStream: void <init>(java.util.concurrent.atomic.AtomicInteger)>($r11);

        $r12 = r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2: org.apache.flink.util.AbstractCloseableRegistry registry>;

        $r13 = (org.apache.flink.core.fs.SafetyNetCloseableRegistry) $r12;

        staticinvoke <org.apache.flink.core.fs.ClosingFSDataInputStream: org.apache.flink.core.fs.ClosingFSDataInputStream wrapSafe(org.apache.flink.core.fs.FSDataInputStream,org.apache.flink.core.fs.SafetyNetCloseableRegistry,java.lang.String)>($r10, $r13, r1);

        $i1 = r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2: int count>;

        $i2 = $i1 + 1;

        r0.<org.apache.flink.core.fs.SafetyNetCloseableRegistryTest$2: int count> = $i2;

        return;
    }
}
