public final class org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup extends java.lang.Object implements org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$PreUpgradeSetup
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createPriorSerializer()
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r2;
        org.apache.flink.api.common.ExecutionConfig $r3;
        org.apache.flink.api.common.typeinfo.TypeInformation $r4;
        java.lang.Class $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup;

        $r3 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r3.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.ExecutionConfig: void registerPojoType(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup$SubclassPojoWithIntField;");

        $r4 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfo(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo;");

        r2 = virtualinvoke $r4.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r3);

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r5, class "Lorg/apache/flink/api/java/typeutils/runtime/PojoSerializer;");

        return r2;
    }

    public org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo createTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup r0;
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup$SubclassPojoWithIntField $r1;
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo$Color $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup$SubclassPojoWithIntField;

        $r2 = <org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo$Color: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo$Color BLUE>;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup$SubclassPojoWithIntField: void <init>(java.lang.String,int,org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo$Color,boolean,int)>("gt", 7, $r2, 0, 911108);

        return $r1;
    }

    public volatile java.lang.Object createTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup r0;
        org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup;

        $r1 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$DifferentFieldTypePojoSubclassSchemaSetup: org.apache.flink.api.java.typeutils.runtime.PojoSerializerUpgradeTestSpecifications$StaticSchemaPojo createTestData()>();

        return $r1;
    }
}
