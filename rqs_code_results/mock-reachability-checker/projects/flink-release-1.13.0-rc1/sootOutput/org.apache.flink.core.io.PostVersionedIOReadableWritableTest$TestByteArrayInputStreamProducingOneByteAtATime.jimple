class org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime extends org.apache.flink.core.memory.ByteArrayInputStreamWithPos
{

    public void <init>(byte[])
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime r0;
        byte[] r1;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.flink.core.memory.ByteArrayInputStreamWithPos: void <init>(byte[])>(r1);

        return;
    }

    public int read(byte[], int, int)
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime r0;
        byte[] r1;
        int i0, i1, $i2, $i3;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, 1);

        $i3 = specialinvoke r0.<org.apache.flink.core.memory.ByteArrayInputStreamWithPos: int read(byte[],int,int)>(r1, i0, $i2);

        return $i3;
    }

    public int read(byte[]) throws java.io.IOException
    {
        org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.flink.core.io.PostVersionedIOReadableWritableTest$TestByteArrayInputStreamProducingOneByteAtATime: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }
}
