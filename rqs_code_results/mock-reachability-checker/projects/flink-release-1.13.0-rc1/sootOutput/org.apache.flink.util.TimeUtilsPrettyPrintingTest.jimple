public class org.apache.flink.util.TimeUtilsPrettyPrintingTest extends org.apache.flink.util.TestLogger
{
    public java.time.Duration duration;
    public java.lang.String expectedString;

    public void <init>()
    {
        org.apache.flink.util.TimeUtilsPrettyPrintingTest r0;

        r0 := @this: org.apache.flink.util.TimeUtilsPrettyPrintingTest;

        specialinvoke r0.<org.apache.flink.util.TestLogger: void <init>()>();

        return;
    }

    public static java.lang.Object[][] parameters()
    {
        java.lang.Object[][] $r0;
        java.lang.Object[] $r1, $r4, $r6, $r8, $r10, $r13, $r15;
        java.time.Duration $r2, $r3, $r5, $r7, $r9, $r11, $r12, $r14, $r16;

        $r0 = newarray (java.lang.Object[])[7];

        $r1 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.time.Duration: java.time.Duration ofMinutes(long)>(3L);

        $r3 = virtualinvoke $r2.<java.time.Duration: java.time.Duration plusSeconds(long)>(30L);

        $r1[0] = $r3;

        $r1[1] = "210 s";

        $r0[0] = $r1;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = staticinvoke <java.time.Duration: java.time.Duration ofNanos(long)>(100L);

        $r4[0] = $r5;

        $r4[1] = "100 ns";

        $r0[1] = $r4;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = staticinvoke <java.time.Duration: java.time.Duration ofSeconds(long)>(120L);

        $r6[0] = $r7;

        $r6[1] = "2 min";

        $r0[2] = $r6;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.time.Duration: java.time.Duration ofMillis(long)>(200L);

        $r8[0] = $r9;

        $r8[1] = "200 ms";

        $r0[3] = $r8;

        $r10 = newarray (java.lang.Object)[2];

        $r11 = staticinvoke <java.time.Duration: java.time.Duration ofHours(long)>(1L);

        $r12 = virtualinvoke $r11.<java.time.Duration: java.time.Duration plusSeconds(long)>(3L);

        $r10[0] = $r12;

        $r10[1] = "3603 s";

        $r0[4] = $r10;

        $r13 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <java.time.Duration: java.time.Duration ofSeconds(long)>(0L);

        $r13[0] = $r14;

        $r13[1] = "0 ms";

        $r0[5] = $r13;

        $r15 = newarray (java.lang.Object)[2];

        $r16 = staticinvoke <java.time.Duration: java.time.Duration ofMillis(long)>(60000L);

        $r15[0] = $r16;

        $r15[1] = "1 min";

        $r0[6] = $r15;

        return $r0;
    }

    public void testFormatting()
    {
        org.apache.flink.util.TimeUtilsPrettyPrintingTest r0;
        java.time.Duration $r1;
        java.lang.String $r2, $r3;
        org.hamcrest.Matcher $r4;

        r0 := @this: org.apache.flink.util.TimeUtilsPrettyPrintingTest;

        $r1 = r0.<org.apache.flink.util.TimeUtilsPrettyPrintingTest: java.time.Duration duration>;

        $r2 = staticinvoke <org.apache.flink.util.TimeUtils: java.lang.String formatWithHighestUnit(java.time.Duration)>($r1);

        $r3 = r0.<org.apache.flink.util.TimeUtilsPrettyPrintingTest: java.lang.String expectedString>;

        $r4 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($r3);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r2, $r4);

        return;
    }
}
