public class org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testTuple0()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        org.apache.flink.api.java.tuple.Tuple0[] $r2;
        org.apache.flink.api.java.tuple.Tuple0 $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        $r2 = newarray (org.apache.flink.api.java.tuple.Tuple0)[3];

        $r3 = <org.apache.flink.api.java.tuple.Tuple0: org.apache.flink.api.java.tuple.Tuple0 INSTANCE>;

        $r2[0] = $r3;

        $r4 = <org.apache.flink.api.java.tuple.Tuple0: org.apache.flink.api.java.tuple.Tuple0 INSTANCE>;

        $r2[1] = $r4;

        $r5 = <org.apache.flink.api.java.tuple.Tuple0: org.apache.flink.api.java.tuple.Tuple0 INSTANCE>;

        $r2[2] = $r5;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest: void runTests(int,org.apache.flink.api.java.tuple.Tuple[])>(1, $r2);

        return;
    }

    public void testTuple1Int()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        org.apache.flink.api.java.tuple.Tuple1[] $r2;
        org.apache.flink.api.java.tuple.Tuple1 $r3, $r5, $r7, $r9, $r11, $r13;
        java.lang.Integer $r4, $r6, $r8, $r10, $r12, $r14;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        $r2 = newarray (org.apache.flink.api.java.tuple.Tuple1)[6];

        $r3 = new org.apache.flink.api.java.tuple.Tuple1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);

        specialinvoke $r3.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r4);

        $r2[0] = $r3;

        $r5 = new org.apache.flink.api.java.tuple.Tuple1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        specialinvoke $r5.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r6);

        $r2[1] = $r5;

        $r7 = new org.apache.flink.api.java.tuple.Tuple1;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        specialinvoke $r7.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r8);

        $r2[2] = $r7;

        $r9 = new org.apache.flink.api.java.tuple.Tuple1;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        specialinvoke $r9.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r10);

        $r2[3] = $r9;

        $r11 = new org.apache.flink.api.java.tuple.Tuple1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        specialinvoke $r11.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r12);

        $r2[4] = $r11;

        $r13 = new org.apache.flink.api.java.tuple.Tuple1;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        specialinvoke $r13.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r14);

        $r2[5] = $r13;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest: void runTests(int,org.apache.flink.api.java.tuple.Tuple[])>(4, $r2);

        return;
    }

    public void testTuple1String()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        java.util.Random $r3;
        org.apache.flink.api.java.tuple.Tuple1[] $r4;
        org.apache.flink.api.java.tuple.Tuple1 $r5, $r7, $r8, $r9, $r11, $r13;
        java.lang.String $r6, $r10, $r12;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>(long)>(68761564135413L);

        $r4 = newarray (org.apache.flink.api.java.tuple.Tuple1)[6];

        $r5 = new org.apache.flink.api.java.tuple.Tuple1;

        $r6 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 10, 100);

        specialinvoke $r5.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r6);

        $r4[0] = $r5;

        $r7 = new org.apache.flink.api.java.tuple.Tuple1;

        specialinvoke $r7.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>("abc");

        $r4[1] = $r7;

        $r8 = new org.apache.flink.api.java.tuple.Tuple1;

        specialinvoke $r8.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>("");

        $r4[2] = $r8;

        $r9 = new org.apache.flink.api.java.tuple.Tuple1;

        $r10 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 30, 170);

        specialinvoke $r9.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r10);

        $r4[3] = $r9;

        $r11 = new org.apache.flink.api.java.tuple.Tuple1;

        $r12 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 15, 50);

        specialinvoke $r11.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r12);

        $r4[4] = $r11;

        $r13 = new org.apache.flink.api.java.tuple.Tuple1;

        specialinvoke $r13.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>("");

        $r4[5] = $r13;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest: void runTests(int,org.apache.flink.api.java.tuple.Tuple[])>(-1, $r4);

        return;
    }

    public void testTuple1StringArray()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        java.util.Random $r5;
        java.lang.String[] $r6, $r11;
        java.lang.String $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15;
        org.apache.flink.api.java.tuple.Tuple1[] $r16;
        org.apache.flink.api.java.tuple.Tuple1 $r17, $r18;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        $r5 = new java.util.Random;

        specialinvoke $r5.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r6 = newarray (java.lang.String)[7];

        $r6[0] = "abc";

        $r6[1] = "";

        $r7 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 10, 100);

        $r6[2] = $r7;

        $r8 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 15, 50);

        $r6[3] = $r8;

        $r9 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30, 170);

        $r6[4] = $r9;

        $r10 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 14, 15);

        $r6[5] = $r10;

        $r6[6] = "";

        $r11 = newarray (java.lang.String)[7];

        $r11[0] = "foo";

        $r11[1] = "";

        $r12 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 10, 100);

        $r11[2] = $r12;

        $r13 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 1000, 5000);

        $r11[3] = $r13;

        $r14 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30000, 35000);

        $r11[4] = $r14;

        $r15 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 102400, 107520);

        $r11[5] = $r15;

        $r11[6] = "bar";

        $r16 = newarray (org.apache.flink.api.java.tuple.Tuple1)[2];

        $r17 = new org.apache.flink.api.java.tuple.Tuple1;

        specialinvoke $r17.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r6);

        $r16[0] = $r17;

        $r18 = new org.apache.flink.api.java.tuple.Tuple1;

        specialinvoke $r18.<org.apache.flink.api.java.tuple.Tuple1: void <init>(java.lang.Object)>($r11);

        $r16[1] = $r18;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest: void runTests(int,org.apache.flink.api.java.tuple.Tuple[])>(-1, $r16);

        return;
    }

    public void testTuple2StringDouble()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        java.util.Random $r3;
        org.apache.flink.api.java.tuple.Tuple2[] $r4;
        org.apache.flink.api.java.tuple.Tuple2 $r5, $r8, $r11, $r14, $r16, $r19;
        java.lang.String $r6, $r9, $r12, $r17, $r20;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Double $r7, $r10, $r13, $r15, $r18, $r21;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>(long)>(807346528946L);

        $r4 = newarray (org.apache.flink.api.java.tuple.Tuple2)[6];

        $r5 = new org.apache.flink.api.java.tuple.Tuple2;

        $r6 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 10, 100);

        $d0 = virtualinvoke $r3.<java.util.Random: double nextDouble()>();

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        specialinvoke $r5.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r6, $r7);

        $r4[0] = $r5;

        $r8 = new org.apache.flink.api.java.tuple.Tuple2;

        $r9 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 10, 100);

        $d1 = virtualinvoke $r3.<java.util.Random: double nextDouble()>();

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        specialinvoke $r8.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r4[1] = $r8;

        $r11 = new org.apache.flink.api.java.tuple.Tuple2;

        $r12 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 10, 100);

        $d2 = virtualinvoke $r3.<java.util.Random: double nextDouble()>();

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        specialinvoke $r11.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r12, $r13);

        $r4[2] = $r11;

        $r14 = new org.apache.flink.api.java.tuple.Tuple2;

        $d3 = virtualinvoke $r3.<java.util.Random: double nextDouble()>();

        $r15 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        specialinvoke $r14.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>("", $r15);

        $r4[3] = $r14;

        $r16 = new org.apache.flink.api.java.tuple.Tuple2;

        $r17 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 10, 100);

        $d4 = virtualinvoke $r3.<java.util.Random: double nextDouble()>();

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        specialinvoke $r16.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r17, $r18);

        $r4[4] = $r16;

        $r19 = new org.apache.flink.api.java.tuple.Tuple2;

        $r20 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r3, 10, 100);

        $d5 = virtualinvoke $r3.<java.util.Random: double nextDouble()>();

        $r21 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        specialinvoke $r19.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r20, $r21);

        $r4[5] = $r19;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest: void runTests(int,org.apache.flink.api.java.tuple.Tuple[])>(-1, $r4);

        return;
    }

    public void testTuple2StringStringArray()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        java.util.Random $r5;
        java.lang.String[] $r6, $r11;
        java.lang.String $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r18, $r20, $r22, $r24, $r26;
        org.apache.flink.api.java.tuple.Tuple2[] $r16;
        org.apache.flink.api.java.tuple.Tuple2 $r17, $r19, $r21, $r23, $r25;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        $r5 = new java.util.Random;

        specialinvoke $r5.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r6 = newarray (java.lang.String)[7];

        $r6[0] = "abc";

        $r6[1] = "";

        $r7 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 10, 100);

        $r6[2] = $r7;

        $r8 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 15, 50);

        $r6[3] = $r8;

        $r9 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30, 170);

        $r6[4] = $r9;

        $r10 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 14, 15);

        $r6[5] = $r10;

        $r6[6] = "";

        $r11 = newarray (java.lang.String)[7];

        $r11[0] = "foo";

        $r11[1] = "";

        $r12 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 10, 100);

        $r11[2] = $r12;

        $r13 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 1000, 5000);

        $r11[3] = $r13;

        $r14 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30000, 35000);

        $r11[4] = $r14;

        $r15 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 102400, 107520);

        $r11[5] = $r15;

        $r11[6] = "bar";

        $r16 = newarray (org.apache.flink.api.java.tuple.Tuple2)[5];

        $r17 = new org.apache.flink.api.java.tuple.Tuple2;

        $r18 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30, 170);

        specialinvoke $r17.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r18, $r6);

        $r16[0] = $r17;

        $r19 = new org.apache.flink.api.java.tuple.Tuple2;

        $r20 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30, 170);

        specialinvoke $r19.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r20, $r11);

        $r16[1] = $r19;

        $r21 = new org.apache.flink.api.java.tuple.Tuple2;

        $r22 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30, 170);

        specialinvoke $r21.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r22, $r6);

        $r16[2] = $r21;

        $r23 = new org.apache.flink.api.java.tuple.Tuple2;

        $r24 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30, 170);

        specialinvoke $r23.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r24, $r11);

        $r16[3] = $r23;

        $r25 = new org.apache.flink.api.java.tuple.Tuple2;

        $r26 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r5, 30, 170);

        specialinvoke $r25.<org.apache.flink.api.java.tuple.Tuple2: void <init>(java.lang.Object,java.lang.Object)>($r26, $r11);

        $r16[4] = $r25;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest: void runTests(int,org.apache.flink.api.java.tuple.Tuple[])>(-1, $r16);

        return;
    }

    public void testTuple5CustomObjects()
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        java.util.Random $r29;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes $r30, $r31, $r33, $r35, $r37, $r39, $r41;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34;
        long $l1, $l7, $l13, $l19, $l25, $l31;
        byte $b3, $b9, $b15, $b21, $b27, $b33;
        java.lang.String $r32, $r34, $r36, $r38, $r40, $r42;
        short $s5, $s11, $s17, $s23, $s29, $s35;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1 $r43, $r44, $r45, $r46, $r47;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2 $r48, $r49, $r50, $r51;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book $r52, $r53, $r54, $r55, $r56, $r57;
        java.util.ArrayList $r58, $r60;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor $r59, $r61;
        org.apache.flink.api.java.tuple.Tuple5[] $r62;
        org.apache.flink.api.java.tuple.Tuple5 $r63, $r64, $r65, $r66, $r67, $r68, $r69;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        $r29 = new java.util.Random;

        specialinvoke $r29.<java.util.Random: void <init>(long)>(807346528946L);

        $r30 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        specialinvoke $r30.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>()>();

        $r31 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $i0 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $l1 = virtualinvoke $r29.<java.util.Random: long nextLong()>();

        $i2 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $b3 = (byte) $i2;

        $r32 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r29, 10, 100);

        $i4 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $s5 = (short) $i4;

        $d0 = virtualinvoke $r29.<java.util.Random: double nextDouble()>();

        specialinvoke $r31.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i0, $l1, $b3, $r32, $s5, $d0);

        $r33 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $i6 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $l7 = virtualinvoke $r29.<java.util.Random: long nextLong()>();

        $i8 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $b9 = (byte) $i8;

        $r34 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r29, 10, 100);

        $i10 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $s11 = (short) $i10;

        $d1 = virtualinvoke $r29.<java.util.Random: double nextDouble()>();

        specialinvoke $r33.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i6, $l7, $b9, $r34, $s11, $d1);

        $r35 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $i12 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $l13 = virtualinvoke $r29.<java.util.Random: long nextLong()>();

        $i14 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $b15 = (byte) $i14;

        $r36 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r29, 10, 100);

        $i16 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $s17 = (short) $i16;

        $d2 = virtualinvoke $r29.<java.util.Random: double nextDouble()>();

        specialinvoke $r35.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i12, $l13, $b15, $r36, $s17, $d2);

        $r37 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $i18 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $l19 = virtualinvoke $r29.<java.util.Random: long nextLong()>();

        $i20 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $b21 = (byte) $i20;

        $r38 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r29, 10, 100);

        $i22 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $s23 = (short) $i22;

        $d3 = virtualinvoke $r29.<java.util.Random: double nextDouble()>();

        specialinvoke $r37.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i18, $l19, $b21, $r38, $s23, $d3);

        $r39 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $i24 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $l25 = virtualinvoke $r29.<java.util.Random: long nextLong()>();

        $i26 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $b27 = (byte) $i26;

        $r40 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r29, 10, 100);

        $i28 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $s29 = (short) $i28;

        $d4 = virtualinvoke $r29.<java.util.Random: double nextDouble()>();

        specialinvoke $r39.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i24, $l25, $b27, $r40, $s29, $d4);

        $r41 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $i30 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $l31 = virtualinvoke $r29.<java.util.Random: long nextLong()>();

        $i32 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $b33 = (byte) $i32;

        $r42 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r29, 10, 100);

        $i34 = virtualinvoke $r29.<java.util.Random: int nextInt()>();

        $s35 = (short) $i34;

        $d5 = virtualinvoke $r29.<java.util.Random: double nextDouble()>();

        specialinvoke $r41.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i30, $l31, $b33, $r42, $s35, $d5);

        $r43 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r43.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(5626435);

        $r44 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r44.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(76923);

        $r45 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r45.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(-1100);

        $r46 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r46.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(0);

        $r47 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r47.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(44);

        $r48 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        specialinvoke $r48.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>(java.util.Random)>($r29);

        $r49 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        specialinvoke $r49.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>()>();

        $r50 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        specialinvoke $r50.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>(java.util.Random)>($r29);

        $r51 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        specialinvoke $r51.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>(java.util.Random)>($r29);

        $r52 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r52.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(976243875L, "The Serialization Odysse", 42L);

        $r53 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r53.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(0L, "Debugging byte streams", 1337L);

        $r54 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r54.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(-1L, "Low level interfaces", 12648430L);

        $r55 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r55.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(9223372036854775807L, "The joy of bits and bytes", -559038737L);

        $r56 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r56.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(-9223372036854775808L, "Winnign a prize for creative test strings", 12246784L);

        $r57 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r57.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(-2L, "Distributed Systems", -6066930334832433271L);

        $r58 = new java.util.ArrayList;

        specialinvoke $r58.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>("A");

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>("B");

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>("C");

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>("D");

        virtualinvoke $r58.<java.util.ArrayList: boolean add(java.lang.Object)>("E");

        $r59 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor;

        specialinvoke $r59.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor: void <init>(long,java.util.List,java.lang.String)>(976243875L, $r58, "Arno Nym");

        $r60 = new java.util.ArrayList;

        specialinvoke $r60.<java.util.ArrayList: void <init>()>();

        $r61 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor;

        specialinvoke $r61.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor: void <init>(long,java.util.List,java.lang.String)>(987654321L, $r60, "The Saurus");

        $r62 = newarray (org.apache.flink.api.java.tuple.Tuple5)[7];

        $r63 = new org.apache.flink.api.java.tuple.Tuple5;

        specialinvoke $r63.<org.apache.flink.api.java.tuple.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r30, $r52, $r43, $r59, $r48);

        $r62[0] = $r63;

        $r64 = new org.apache.flink.api.java.tuple.Tuple5;

        specialinvoke $r64.<org.apache.flink.api.java.tuple.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r31, $r53, $r44, $r61, $r49);

        $r62[1] = $r64;

        $r65 = new org.apache.flink.api.java.tuple.Tuple5;

        specialinvoke $r65.<org.apache.flink.api.java.tuple.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r33, $r54, $r45, $r59, $r50);

        $r62[2] = $r65;

        $r66 = new org.apache.flink.api.java.tuple.Tuple5;

        specialinvoke $r66.<org.apache.flink.api.java.tuple.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r35, $r53, $r46, $r59, $r51);

        $r62[3] = $r66;

        $r67 = new org.apache.flink.api.java.tuple.Tuple5;

        specialinvoke $r67.<org.apache.flink.api.java.tuple.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r37, $r55, $r47, $r61, $r51);

        $r62[4] = $r67;

        $r68 = new org.apache.flink.api.java.tuple.Tuple5;

        specialinvoke $r68.<org.apache.flink.api.java.tuple.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r39, $r56, $r43, $r61, $r51);

        $r62[5] = $r68;

        $r69 = new org.apache.flink.api.java.tuple.Tuple5;

        specialinvoke $r69.<org.apache.flink.api.java.tuple.Tuple5: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>($r41, $r57, $r46, $r59, $r49);

        $r62[6] = $r69;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest: void runTests(int,org.apache.flink.api.java.tuple.Tuple[])>(-1, $r62);

        return;
    }

    private transient void runTests(int, org.apache.flink.api.java.tuple.Tuple[])
    {
        org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest r0;
        org.apache.flink.api.java.tuple.Tuple[] r1;
        org.apache.flink.api.java.typeutils.runtime.TupleSerializer r2;
        java.lang.Class r3;
        org.apache.flink.api.java.tuple.Tuple $r5;
        org.apache.flink.api.common.typeinfo.TypeInformation $r6;
        org.apache.flink.api.common.ExecutionConfig $r7;
        org.apache.flink.api.common.typeutils.SerializerTestInstance $r8;
        java.lang.Exception $r9;
        java.io.PrintStream $r10;
        java.lang.String $r11, $r12;
        int i0;
        org.apache.flink.api.java.typeutils.TupleTypeInfo r13;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.TupleSerializerTest;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.flink.api.java.tuple.Tuple[];

     label1:
        $r5 = r1[0];

        $r6 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation getForObject(java.lang.Object)>($r5);

        r13 = (org.apache.flink.api.java.typeutils.TupleTypeInfo) $r6;

        $r7 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r7.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        r2 = virtualinvoke r13.<org.apache.flink.api.java.typeutils.TupleTypeInfo: org.apache.flink.api.java.typeutils.runtime.TupleSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r7);

        r3 = virtualinvoke r13.<org.apache.flink.api.java.typeutils.TupleTypeInfo: java.lang.Class getTypeClass()>();

        if r3 != class "Lorg/apache/flink/api/java/tuple/Tuple0;" goto label2;

        i0 = 1;

     label2:
        $r8 = new org.apache.flink.api.common.typeutils.SerializerTestInstance;

        specialinvoke $r8.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class,int,java.lang.Object[])>(r2, r3, i0, r1);

        virtualinvoke $r8.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void testAll()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        $r11 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

        $r12 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r12);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }
}
