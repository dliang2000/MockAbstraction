public class org.apache.flink.api.common.typeutils.base.BooleanSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.BooleanSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializerTest;

        return 1;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializerTest;

        return class "Ljava/lang/Boolean;";
    }

    protected java.lang.Boolean[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializerTest r0;
        java.util.Random $r2;
        java.lang.Boolean[] $r3;
        java.lang.Boolean $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializerTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412341L);

        $r3 = newarray (java.lang.Boolean)[5];

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3[1] = $r5;

        $z0 = virtualinvoke $r2.<java.util.Random: boolean nextBoolean()>();

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r3[2] = $r6;

        $z1 = virtualinvoke $r2.<java.util.Random: boolean nextBoolean()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r3[3] = $r7;

        $z2 = virtualinvoke $r2.<java.util.Random: boolean nextBoolean()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r3[4] = $r8;

        return $r3;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.BooleanSerializerTest r0;
        java.lang.Boolean[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanSerializerTest: java.lang.Boolean[] getTestData()>();

        return $r1;
    }
}
