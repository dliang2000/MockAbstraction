class org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1 extends java.lang.Object implements org.apache.flink.api.common.functions.FlatJoinFunction
{
    final org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest this$0;

    void <init>(org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest)
    {
        org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1 r0;
        org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest r1;

        r0 := @this: org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1;

        r1 := @parameter0: org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest;

        r0.<org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1: org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void join(java.lang.String, java.lang.String, org.apache.flink.util.Collector) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1 r0;
        java.lang.String r1, r2;
        org.apache.flink.util.Collector r3;
        int $i0, $i1;
        java.lang.Integer $r4, $r5;

        r0 := @this: org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.flink.util.Collector;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r3.<org.apache.flink.util.Collector: void collect(java.lang.Object)>($r4);

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke r3.<org.apache.flink.util.Collector: void collect(java.lang.Object)>($r5);

        return;
    }

    public volatile void join(java.lang.Object, java.lang.Object, org.apache.flink.util.Collector) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1 r0;
        java.lang.Object r1, r2;
        org.apache.flink.util.Collector r3;
        java.lang.String $r4, $r5;

        r0 := @this: org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: org.apache.flink.util.Collector;

        $r5 = (java.lang.String) r1;

        $r4 = (java.lang.String) r2;

        virtualinvoke r0.<org.apache.flink.api.common.operators.base.InnerJoinOperatorBaseTest$1: void join(java.lang.String,java.lang.String,org.apache.flink.util.Collector)>($r5, $r4, r3);

        return;
    }
}
