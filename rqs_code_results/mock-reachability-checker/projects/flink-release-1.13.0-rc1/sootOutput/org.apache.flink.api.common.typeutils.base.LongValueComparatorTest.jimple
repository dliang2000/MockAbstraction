public class org.apache.flink.api.common.typeutils.base.LongValueComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.LongValueComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongValueComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.LongValueComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.LongValueComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongValueComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.LongValueComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.LongValueComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.LongValueComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.LongValueSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongValueComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.LongValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.LongValueSerializer: void <init>()>();

        return $r1;
    }

    protected org.apache.flink.types.LongValue[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.LongValueComparatorTest r0;
        java.util.Random $r2;
        byte $b0, $b1, $b2;
        org.apache.flink.types.LongValue[] $r3;
        org.apache.flink.types.LongValue $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        long $l3, l4;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongValueComparatorTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412338L);

        l4 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        $b0 = l4 cmp 0L;

        if $b0 >= 0 goto label1;

        l4 = neg l4;

     label1:
        $b1 = l4 cmp 9223372036854775807L;

        if $b1 != 0 goto label2;

        l4 = l4 - 3L;

     label2:
        $b2 = l4 cmp 2L;

        if $b2 > 0 goto label3;

        l4 = l4 + 3L;

     label3:
        $r3 = newarray (org.apache.flink.types.LongValue)[8];

        $r4 = new org.apache.flink.types.LongValue;

        specialinvoke $r4.<org.apache.flink.types.LongValue: void <init>(long)>(-9223372036854775808L);

        $r3[0] = $r4;

        $r5 = new org.apache.flink.types.LongValue;

        $l3 = neg l4;

        specialinvoke $r5.<org.apache.flink.types.LongValue: void <init>(long)>($l3);

        $r3[1] = $r5;

        $r6 = new org.apache.flink.types.LongValue;

        specialinvoke $r6.<org.apache.flink.types.LongValue: void <init>(long)>(-1L);

        $r3[2] = $r6;

        $r7 = new org.apache.flink.types.LongValue;

        specialinvoke $r7.<org.apache.flink.types.LongValue: void <init>(long)>(0L);

        $r3[3] = $r7;

        $r8 = new org.apache.flink.types.LongValue;

        specialinvoke $r8.<org.apache.flink.types.LongValue: void <init>(long)>(1L);

        $r3[4] = $r8;

        $r9 = new org.apache.flink.types.LongValue;

        specialinvoke $r9.<org.apache.flink.types.LongValue: void <init>(long)>(2L);

        $r3[5] = $r9;

        $r10 = new org.apache.flink.types.LongValue;

        specialinvoke $r10.<org.apache.flink.types.LongValue: void <init>(long)>(l4);

        $r3[6] = $r10;

        $r11 = new org.apache.flink.types.LongValue;

        specialinvoke $r11.<org.apache.flink.types.LongValue: void <init>(long)>(9223372036854775807L);

        $r3[7] = $r11;

        return $r3;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.LongValueComparatorTest r0;
        org.apache.flink.types.LongValue[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongValueComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.LongValueComparatorTest: org.apache.flink.types.LongValue[] getSortedTestData()>();

        return $r1;
    }
}
