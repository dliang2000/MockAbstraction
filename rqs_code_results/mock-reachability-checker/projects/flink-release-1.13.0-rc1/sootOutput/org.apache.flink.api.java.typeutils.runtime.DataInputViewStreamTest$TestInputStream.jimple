class org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream extends java.io.InputStream
{
    long skipped;

    private void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream: long skipped> = 0L;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream;

        return 0;
    }

    public long skip(long)
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream r0;
        long l0, $l1, $l2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream;

        l0 := @parameter0: long;

        $l1 = r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream: long skipped>;

        $l2 = $l1 + l0;

        r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream: long skipped> = $l2;

        return l0;
    }

    void <init>(org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$1)
    {
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream r0;
        org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$1 r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$1;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.DataInputViewStreamTest$TestInputStream: void <init>()>();

        return;
    }
}
