final class org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput extends java.lang.Object implements org.apache.flink.api.connector.source.ReaderOutput
{
    private final java.util.ArrayList emittedRecords;

    private void <init>()
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput: java.util.ArrayList emittedRecords> = $r1;

        return;
    }

    public void collect(java.lang.Object)
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput: java.util.ArrayList emittedRecords>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void collect(java.lang.Object, long)
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        java.lang.Object r1;
        long l0;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        r1 := @parameter0: java.lang.Object;

        l0 := @parameter1: long;

        virtualinvoke r0.<org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput: void collect(java.lang.Object)>(r1);

        return;
    }

    public void emitWatermark(org.apache.flink.api.common.eventtime.Watermark)
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        org.apache.flink.api.common.eventtime.Watermark r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        r1 := @parameter0: org.apache.flink.api.common.eventtime.Watermark;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void markIdle()
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public org.apache.flink.api.connector.source.SourceOutput createOutputForSplit(java.lang.String)
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        r1 := @parameter0: java.lang.String;

        return r0;
    }

    public void releaseOutputForSplit(java.lang.String)
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public java.util.ArrayList getEmittedRecords()
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        $r1 = r0.<org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput: java.util.ArrayList emittedRecords>;

        return $r1;
    }

    void <init>(org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$1)
    {
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput r0;
        org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$1 r1;

        r0 := @this: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput;

        r1 := @parameter0: org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$1;

        specialinvoke r0.<org.apache.flink.api.connector.source.lib.NumberSequenceSourceTest$TestingReaderOutput: void <init>()>();

        return;
    }
}
