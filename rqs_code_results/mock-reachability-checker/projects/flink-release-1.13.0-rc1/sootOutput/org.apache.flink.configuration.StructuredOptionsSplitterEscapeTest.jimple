public class org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest extends java.lang.Object
{
    public org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec testSpec;

    public void <init>()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest r0;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Collection getEncodeSpecs()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec[] $r0;
        java.lang.String[] $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31;
        org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33;
        java.util.List $r34;

        $r0 = newarray (org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec)[11];

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = ";";

        $r2 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("A,B,C,D", $r1);

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("A,B,C,D");

        $r0[0] = $r3;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = ";";

        $r5 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("A;BCD", $r4);

        $r6 = virtualinvoke $r5.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'A;BCD\'");

        $r0[1] = $r6;

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = ";";

        $r8 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("A\'B\'C\'D", $r7);

        $r9 = virtualinvoke $r8.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'A\'\'B\'\'C\'\'D\'");

        $r0[2] = $r9;

        $r10 = newarray (java.lang.String)[1];

        $r10[0] = ";";

        $r11 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("AB\"C\"D", $r10);

        $r12 = virtualinvoke $r11.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'AB\"C\"D\'");

        $r0[3] = $r12;

        $r13 = newarray (java.lang.String)[1];

        $r13[0] = ";";

        $r14 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("AB\'\"D:B", $r13);

        $r15 = virtualinvoke $r14.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'AB\'\'\"D:B\'");

        $r0[4] = $r15;

        $r16 = newarray (java.lang.String)[1];

        $r16[0] = ",";

        $r17 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("A,B,C,D", $r16);

        $r18 = virtualinvoke $r17.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'A,B,C,D\'");

        $r0[5] = $r18;

        $r19 = newarray (java.lang.String)[1];

        $r19[0] = ",";

        $r20 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("A;BCD", $r19);

        $r21 = virtualinvoke $r20.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("A;BCD");

        $r0[6] = $r21;

        $r22 = newarray (java.lang.String)[1];

        $r22[0] = ",";

        $r23 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("AB\"C\"D", $r22);

        $r24 = virtualinvoke $r23.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'AB\"C\"D\'");

        $r0[7] = $r24;

        $r25 = newarray (java.lang.String)[1];

        $r25[0] = ",";

        $r26 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("AB\'\"D:B", $r25);

        $r27 = virtualinvoke $r26.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'AB\'\'\"D:B\'");

        $r0[8] = $r27;

        $r28 = newarray (java.lang.String)[2];

        $r28[0] = ",";

        $r28[1] = ":";

        $r29 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("A;B;C;D", $r28);

        $r30 = virtualinvoke $r29.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("A;B;C;D");

        $r0[9] = $r30;

        $r31 = newarray (java.lang.String)[2];

        $r31[0] = ",";

        $r31[1] = ":";

        $r32 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec encode(java.lang.String,java.lang.String[])>("A;B;C:D", $r31);

        $r33 = virtualinvoke $r32.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec expect(java.lang.String)>("\'A;B;C:D\'");

        $r0[10] = $r33;

        $r34 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r34;
    }

    public void testEscapeWithSingleQuote()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest r0;
        java.lang.String r1, $r3, $r7;
        org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec $r2, $r4, $r6;
        java.lang.String[] $r5;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest;

        $r2 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec testSpec>;

        $r3 = virtualinvoke $r2.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: java.lang.String getString()>();

        $r4 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec testSpec>;

        $r5 = virtualinvoke $r4.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: java.lang.String[] getEscapeChars()>();

        r1 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitter: java.lang.String escapeWithSingleQuote(java.lang.String,java.lang.String[])>($r3, $r5);

        $r6 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest: org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec testSpec>;

        $r7 = virtualinvoke $r6.<org.apache.flink.configuration.StructuredOptionsSplitterEscapeTest$TestSpec: java.lang.String getEncodedString()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, r1);

        return;
    }
}
