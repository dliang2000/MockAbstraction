public class org.apache.flink.types.parser.IntParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.IntParserTest r0;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.IntParserTest r0;
        java.lang.String[] $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = "0";

        $r1[1] = "1";

        $r1[2] = "576";

        $r1[3] = "-877678";

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2147483647);

        $r1[4] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(-2147483648);

        $r1[5] = $r3;

        $r1[6] = "1239";

        return $r1;
    }

    public java.lang.Integer[] getValidTestResults()
    {
        org.apache.flink.types.parser.IntParserTest r0;
        java.lang.Integer[] $r1;
        java.lang.Integer $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        $r1 = newarray (java.lang.Integer)[7];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(576);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-877678);

        $r1[3] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2147483647);

        $r1[4] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483648);

        $r1[5] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1239);

        $r1[6] = $r8;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.IntParserTest r0;
        java.lang.String[] $r1;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        $r1 = newarray (java.lang.String)[12];

        $r1[0] = "a";

        $r1[1] = "1569a86";

        $r1[2] = "-57-6";

        $r1[3] = "7-877678";

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(2147483647);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[4] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-9223372036854775808L);

        $r1[5] = $r7;

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(2147483648L);

        $r1[6] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-2147483649L);

        $r1[7] = $r9;

        $r1[8] = " 1";

        $r1[9] = "2 ";

        $r1[10] = " ";

        $r1[11] = "\t";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.IntParserTest r0;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        return 0;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.IntParserTest r0;
        org.apache.flink.types.parser.IntParser $r1;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        $r1 = new org.apache.flink.types.parser.IntParser;

        specialinvoke $r1.<org.apache.flink.types.parser.IntParser: void <init>()>();

        return $r1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.IntParserTest r0;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        return class "Ljava/lang/Integer;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.IntParserTest r0;
        java.lang.Integer[] $r1;

        r0 := @this: org.apache.flink.types.parser.IntParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.IntParserTest: java.lang.Integer[] getValidTestResults()>();

        return $r1;
    }
}
