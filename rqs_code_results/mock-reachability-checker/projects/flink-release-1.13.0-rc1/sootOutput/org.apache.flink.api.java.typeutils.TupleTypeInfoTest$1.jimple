class org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1 extends org.apache.flink.api.java.typeutils.TupleTypeInfoBase
{
    private static final long serialVersionUID;
    final org.apache.flink.api.java.typeutils.TupleTypeInfoTest this$0;

    transient void <init>(org.apache.flink.api.java.typeutils.TupleTypeInfoTest, java.lang.Class, org.apache.flink.api.common.typeinfo.TypeInformation[])
    {
        org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1 r0;
        org.apache.flink.api.java.typeutils.TupleTypeInfoTest r1;
        java.lang.Class r2;
        org.apache.flink.api.common.typeinfo.TypeInformation[] r3;

        r0 := @this: org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.TupleTypeInfoTest;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: org.apache.flink.api.common.typeinfo.TypeInformation[];

        r0.<org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1: org.apache.flink.api.java.typeutils.TupleTypeInfoTest this$0> = r1;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.TupleTypeInfoBase: void <init>(java.lang.Class,org.apache.flink.api.common.typeinfo.TypeInformation[])>(r2, r3);

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1 r0;
        org.apache.flink.api.common.ExecutionConfig r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        return null;
    }

    protected org.apache.flink.api.common.typeutils.CompositeType$TypeComparatorBuilder createTypeComparatorBuilder()
    {
        org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1 r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1;

        return null;
    }

    public java.lang.String[] getFieldNames()
    {
        org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1 r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1;

        $r1 = newarray (java.lang.String)[0];

        return $r1;
    }

    public int getFieldIndex(java.lang.String)
    {
        org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1 r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.TupleTypeInfoTest$1: long serialVersionUID> = -7985593598027660836L;

        return;
    }
}
