public class org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.BooleanValueComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.BooleanValueComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BooleanValueComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.BooleanValueSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.BooleanValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BooleanValueSerializer: void <init>()>();

        return $r1;
    }

    protected org.apache.flink.types.BooleanValue[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest r0;
        org.apache.flink.types.BooleanValue[] $r1;
        org.apache.flink.types.BooleanValue $r2, $r3;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest;

        $r1 = newarray (org.apache.flink.types.BooleanValue)[2];

        $r2 = <org.apache.flink.types.BooleanValue: org.apache.flink.types.BooleanValue FALSE>;

        $r1[0] = $r2;

        $r3 = <org.apache.flink.types.BooleanValue: org.apache.flink.types.BooleanValue TRUE>;

        $r1[1] = $r3;

        return $r1;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest r0;
        org.apache.flink.types.BooleanValue[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanValueComparatorTest: org.apache.flink.types.BooleanValue[] getSortedTestData()>();

        return $r1;
    }
}
