public class org.apache.flink.util.CloseableIteratorTest extends java.lang.Object
{
    private static final java.lang.String[] ELEMENTS;

    public void <init>()
    {
        org.apache.flink.util.CloseableIteratorTest r0;

        r0 := @this: org.apache.flink.util.CloseableIteratorTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testFlattenEmpty() throws java.lang.Exception
    {
        org.apache.flink.util.CloseableIteratorTest r0;
        java.util.List r1;
        java.util.Iterator r2;
        org.apache.flink.util.CloseableIterator r3, $r6, $r8, $r9, $r12, $r13;
        org.apache.flink.util.CloseableIterator[] $r4, $r5, $r7, $r10, $r11;
        boolean $z0, $z1;
        java.lang.Object $r14;

        r0 := @this: org.apache.flink.util.CloseableIteratorTest;

        $r4 = newarray (org.apache.flink.util.CloseableIterator)[3];

        $r5 = newarray (org.apache.flink.util.CloseableIterator)[0];

        $r6 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator flatten(org.apache.flink.util.CloseableIterator[])>($r5);

        $r4[0] = $r6;

        $r7 = newarray (org.apache.flink.util.CloseableIterator)[1];

        $r8 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator empty()>();

        $r7[0] = $r8;

        $r9 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator flatten(org.apache.flink.util.CloseableIterator[])>($r7);

        $r4[1] = $r9;

        $r10 = newarray (org.apache.flink.util.CloseableIterator)[1];

        $r11 = newarray (org.apache.flink.util.CloseableIterator)[0];

        $r12 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator flatten(org.apache.flink.util.CloseableIterator[])>($r11);

        $r10[0] = $r12;

        $r13 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator flatten(org.apache.flink.util.CloseableIterator[])>($r10);

        $r4[2] = $r13;

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.flink.util.CloseableIterator) $r14;

        $z1 = interfaceinvoke r3.<org.apache.flink.util.CloseableIterator: boolean hasNext()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z1);

        interfaceinvoke r3.<org.apache.flink.util.CloseableIterator: void close()>();

        goto label1;

     label2:
        return;
    }

    public void testFlattenIteration()
    {
        org.apache.flink.util.CloseableIteratorTest r0;
        org.apache.flink.util.CloseableIterator r1, $r7, $r11;
        org.apache.flink.util.CloseableIterator[] $r3;
        java.lang.String[] $r4, $r8, $r15;
        java.lang.String $r5, $r9;
        java.util.function.Consumer $r6, $r10, $r14;
        java.util.ArrayList $r12;
        java.lang.Object[] $r16;

        r0 := @this: org.apache.flink.util.CloseableIteratorTest;

        $r3 = newarray (org.apache.flink.util.CloseableIterator)[2];

        $r4 = <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS>;

        $r5 = $r4[0];

        $r6 = staticinvoke <org.apache.flink.util.CloseableIteratorTest$lambda_testFlattenIteration_0__189: java.util.function.Consumer bootstrap$()>();

        $r7 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator ofElement(java.lang.Object,java.util.function.Consumer)>($r5, $r6);

        $r3[0] = $r7;

        $r8 = <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS>;

        $r9 = $r8[1];

        $r10 = staticinvoke <org.apache.flink.util.CloseableIteratorTest$lambda_testFlattenIteration_1__190: java.util.function.Consumer bootstrap$()>();

        $r11 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator ofElement(java.lang.Object,java.util.function.Consumer)>($r9, $r10);

        $r3[1] = $r11;

        r1 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator flatten(org.apache.flink.util.CloseableIterator[])>($r3);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r12.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = staticinvoke <org.apache.flink.util.CloseableIteratorTest$add__191: java.util.function.Consumer bootstrap$(java.util.List)>($r12);

        interfaceinvoke r1.<org.apache.flink.util.CloseableIterator: void forEachRemaining(java.util.function.Consumer)>($r14);

        $r15 = <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS>;

        $r16 = interfaceinvoke $r12.<java.util.List: java.lang.Object[] toArray()>();

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($r15, $r16);

        return;
    }

    public void testFlattenErrorHandling() throws java.lang.Exception
    {
        org.apache.flink.util.CloseableIteratorTest r0;
        org.apache.flink.util.CloseableIterator r2, $r9, $r14;
        java.util.ArrayList $r4;
        org.apache.flink.util.CloseableIterator[] $r5;
        java.lang.String[] $r6, $r10, $r15, $r18;
        java.lang.String $r7, $r11;
        java.util.function.Consumer $r8, $r13;
        java.lang.Object[] $r16, $r19;
        java.lang.Throwable $r17;

        r0 := @this: org.apache.flink.util.CloseableIteratorTest;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = newarray (org.apache.flink.util.CloseableIterator)[2];

        $r6 = <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS>;

        $r7 = $r6[0];

        $r8 = staticinvoke <org.apache.flink.util.CloseableIteratorTest$lambda_testFlattenErrorHandling_2__192: java.util.function.Consumer bootstrap$(java.util.List)>($r4);

        $r9 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator ofElement(java.lang.Object,java.util.function.Consumer)>($r7, $r8);

        $r5[0] = $r9;

        $r10 = <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS>;

        $r11 = $r10[1];

        virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = staticinvoke <org.apache.flink.util.CloseableIteratorTest$add__193: java.util.function.Consumer bootstrap$(java.util.List)>($r4);

        $r14 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator ofElement(java.lang.Object,java.util.function.Consumer)>($r11, $r13);

        $r5[1] = $r14;

        r2 = staticinvoke <org.apache.flink.util.CloseableIterator: org.apache.flink.util.CloseableIterator flatten(org.apache.flink.util.CloseableIterator[])>($r5);

     label1:
        interfaceinvoke r2.<org.apache.flink.util.CloseableIterator: void close()>();

     label2:
        $r15 = <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS>;

        $r16 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray()>();

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($r15, $r16);

        goto label4;

     label3:
        $r17 := @caughtexception;

        $r18 = <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS>;

        $r19 = interfaceinvoke $r4.<java.util.List: java.lang.Object[] toArray()>();

        staticinvoke <org.junit.Assert: void assertArrayEquals(java.lang.Object[],java.lang.Object[])>($r18, $r19);

        throw $r17;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void lambda$testFlattenErrorHandling$2(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1;
        org.apache.flink.util.CloseableIteratorTest$TestException $r2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r2 = new org.apache.flink.util.CloseableIteratorTest$TestException;

        specialinvoke $r2.<org.apache.flink.util.CloseableIteratorTest$TestException: void <init>(org.apache.flink.util.CloseableIteratorTest$1)>(null);

        throw $r2;
    }

    public static void lambda$testFlattenIteration$1(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    public static void lambda$testFlattenIteration$0(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "flink";

        $r0[1] = "blink";

        <org.apache.flink.util.CloseableIteratorTest: java.lang.String[] ELEMENTS> = $r0;

        return;
    }
}
