public class org.apache.flink.api.common.typeutils.base.LongSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.LongSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.LongSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.LongSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.LongSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.LongSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.LongSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongSerializerTest;

        return 8;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.LongSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongSerializerTest;

        return class "Ljava/lang/Long;";
    }

    protected java.lang.Long[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.LongSerializerTest r0;
        long l0, $l1;
        java.util.Random $r2;
        java.lang.Long[] $r3;
        java.lang.Long $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongSerializerTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412341L);

        l0 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        $r3 = newarray (java.lang.Long)[7];

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1L);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-1L);

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(9223372036854775807L);

        $r3[3] = $r7;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-9223372036854775808L);

        $r3[4] = $r8;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r3[5] = $r9;

        $l1 = neg l0;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r3[6] = $r10;

        return $r3;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.LongSerializerTest r0;
        java.lang.Long[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LongSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.LongSerializerTest: java.lang.Long[] getTestData()>();

        return $r1;
    }
}
