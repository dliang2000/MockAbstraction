public class org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple extends org.apache.flink.api.java.tuple.Tuple2
{
    private static final long serialVersionUID;

    public void <init>(java.lang.String, java.lang.Integer)
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple r0;
        java.lang.String r1;
        java.lang.Integer r2;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Integer;

        specialinvoke r0.<org.apache.flink.api.java.tuple.Tuple2: void <init>()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple: void setFields(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.lang.String getMyField1()
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple;

        $r1 = r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple: java.lang.Object f0>;

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public int getMyField2()
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple r0;
        java.lang.Object $r1;
        java.lang.Integer $r2;
        int $i0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple;

        $r1 = r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple: java.lang.Object f1>;

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.TypeExtractorTest$CustomTuple: long serialVersionUID> = 1L;

        return;
    }
}
