public class org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.DateComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.DateComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.DateComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.SqlTimeSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.SqlTimeSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.SqlTimeSerializer: void <init>()>();

        return $r1;
    }

    protected java.sql.Time[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest r0;
        java.sql.Time[] $r1;
        java.sql.Time $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest;

        $r1 = newarray (java.sql.Time)[4];

        $r2 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("00:00:00");

        $r1[0] = $r2;

        $r3 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("02:42:25");

        $r1[1] = $r3;

        $r4 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("14:15:59");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.sql.Time: java.sql.Time valueOf(java.lang.String)>("18:00:45");

        $r1[3] = $r5;

        return $r1;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest r0;
        java.sql.Time[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.SqlTimeComparatorTest: java.sql.Time[] getSortedTestData()>();

        return $r1;
    }
}
