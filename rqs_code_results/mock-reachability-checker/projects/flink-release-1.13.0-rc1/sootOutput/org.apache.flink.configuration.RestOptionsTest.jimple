public class org.apache.flink.configuration.RestOptionsTest extends org.apache.flink.util.TestLogger
{

    public void <init>()
    {
        org.apache.flink.configuration.RestOptionsTest r0;

        r0 := @this: org.apache.flink.configuration.RestOptionsTest;

        specialinvoke r0.<org.apache.flink.util.TestLogger: void <init>()>();

        return;
    }

    public void testBindAddressFirstDeprecatedKey()
    {
        org.apache.flink.configuration.RestOptionsTest r0;
        java.lang.String r3;
        org.apache.flink.configuration.Configuration $r4;
        org.apache.flink.configuration.ConfigOption $r5;
        org.hamcrest.Matcher $r6, $r7;

        r0 := @this: org.apache.flink.configuration.RestOptionsTest;

        $r4 = new org.apache.flink.configuration.Configuration;

        specialinvoke $r4.<org.apache.flink.configuration.Configuration: void <init>()>();

        virtualinvoke $r4.<org.apache.flink.configuration.Configuration: void setString(java.lang.String,java.lang.String)>("web.address", "foobar");

        $r5 = <org.apache.flink.configuration.RestOptions: org.apache.flink.configuration.ConfigOption BIND_ADDRESS>;

        r3 = virtualinvoke $r4.<org.apache.flink.configuration.Configuration: java.lang.String getString(org.apache.flink.configuration.ConfigOption)>($r5);

        $r6 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>("foobar");

        $r7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($r6);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r3, $r7);

        return;
    }

    public void testBindAddressSecondDeprecatedKey()
    {
        org.apache.flink.configuration.RestOptionsTest r0;
        java.lang.String r3;
        org.apache.flink.configuration.Configuration $r4;
        org.apache.flink.configuration.ConfigOption $r5;
        org.hamcrest.Matcher $r6, $r7;

        r0 := @this: org.apache.flink.configuration.RestOptionsTest;

        $r4 = new org.apache.flink.configuration.Configuration;

        specialinvoke $r4.<org.apache.flink.configuration.Configuration: void <init>()>();

        virtualinvoke $r4.<org.apache.flink.configuration.Configuration: void setString(java.lang.String,java.lang.String)>("jobmanager.web.address", "foobar");

        $r5 = <org.apache.flink.configuration.RestOptions: org.apache.flink.configuration.ConfigOption BIND_ADDRESS>;

        r3 = virtualinvoke $r4.<org.apache.flink.configuration.Configuration: java.lang.String getString(org.apache.flink.configuration.ConfigOption)>($r5);

        $r6 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher equalTo(java.lang.Object)>("foobar");

        $r7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($r6);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(r3, $r7);

        return;
    }
}
