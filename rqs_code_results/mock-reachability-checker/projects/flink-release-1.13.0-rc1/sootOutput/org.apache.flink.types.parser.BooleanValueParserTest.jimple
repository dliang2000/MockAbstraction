public class org.apache.flink.types.parser.BooleanValueParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "true";

        $r1[1] = "false";

        $r1[2] = "0";

        $r1[3] = "1";

        $r1[4] = "TRUE";

        $r1[5] = "FALSE";

        $r1[6] = "True";

        $r1[7] = "False";

        return $r1;
    }

    public org.apache.flink.types.BooleanValue[] getValidTestResults()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;
        org.apache.flink.types.BooleanValue[] $r1;
        org.apache.flink.types.BooleanValue $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        $r1 = newarray (org.apache.flink.types.BooleanValue)[8];

        $r2 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r2.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(1);

        $r1[0] = $r2;

        $r3 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r3.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(0);

        $r1[1] = $r3;

        $r4 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r4.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(0);

        $r1[2] = $r4;

        $r5 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r5.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(1);

        $r1[3] = $r5;

        $r6 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r6.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(1);

        $r1[4] = $r6;

        $r7 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r7.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(0);

        $r1[5] = $r7;

        $r8 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r8.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(1);

        $r1[6] = $r8;

        $r9 = new org.apache.flink.types.BooleanValue;

        specialinvoke $r9.<org.apache.flink.types.BooleanValue: void <init>(boolean)>(0);

        $r1[7] = $r9;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        $r1 = newarray (java.lang.String)[8];

        $r1[0] = "yes";

        $r1[1] = "no";

        $r1[2] = "2";

        $r1[3] = "-1";

        $r1[4] = "wahr";

        $r1[5] = "falsch";

        $r1[6] = "";

        $r1[7] = "asdf";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        return 0;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;
        org.apache.flink.types.parser.BooleanValueParser $r1;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        $r1 = new org.apache.flink.types.parser.BooleanValueParser;

        specialinvoke $r1.<org.apache.flink.types.parser.BooleanValueParser: void <init>()>();

        return $r1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        return class "Lorg/apache/flink/types/BooleanValue;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.BooleanValueParserTest r0;
        org.apache.flink.types.BooleanValue[] $r1;

        r0 := @this: org.apache.flink.types.parser.BooleanValueParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.BooleanValueParserTest: org.apache.flink.types.BooleanValue[] getValidTestResults()>();

        return $r1;
    }
}
