public class org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer extends java.lang.Object implements org.apache.flink.core.io.SimpleVersionedSerializer
{

    public void <init>()
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer r0;

        r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getVersion()
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer r0;

        r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer;

        return 0;
    }

    public byte[] serialize(java.util.Set) throws java.io.IOException
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer r0;
        java.util.Set r1;
        java.util.ArrayList $r2;
        byte[] $r3;

        r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer;

        r1 := @parameter0: java.util.Set;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        $r3 = staticinvoke <org.apache.flink.util.InstantiationUtil: byte[] serializeObject(java.lang.Object)>($r2);

        return $r3;
    }

    public java.util.Set deserialize(int, byte[]) throws java.io.IOException
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer r0;
        int i0;
        byte[] r1;
        java.lang.Class $r2;
        java.lang.ClassLoader $r3;
        java.lang.Object $r4;
        java.util.HashSet $r5;
        java.lang.ClassNotFoundException $r6;
        org.apache.flink.util.FlinkRuntimeException $r7;
        java.util.ArrayList r8;

        r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r4 = staticinvoke <org.apache.flink.util.InstantiationUtil: java.lang.Object deserializeObject(byte[],java.lang.ClassLoader)>(r1, $r3);

        r8 = (java.util.ArrayList) $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r8);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.apache.flink.util.FlinkRuntimeException;

        specialinvoke $r7.<org.apache.flink.util.FlinkRuntimeException: void <init>(java.lang.String)>("Failed to deserialize the enumerator checkpoint.");

        throw $r7;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public volatile java.lang.Object deserialize(int, byte[]) throws java.io.IOException
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer r0;
        int i0;
        byte[] r1;
        java.util.Set $r2;

        r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r2 = virtualinvoke r0.<org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer: java.util.Set deserialize(int,byte[])>(i0, r1);

        return $r2;
    }

    public volatile byte[] serialize(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer r0;
        java.lang.Object r1;
        java.util.Set $r2;
        byte[] $r3;

        r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.util.Set) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorCheckpointSerializer: byte[] serialize(java.util.Set)>($r2);

        return $r3;
    }
}
