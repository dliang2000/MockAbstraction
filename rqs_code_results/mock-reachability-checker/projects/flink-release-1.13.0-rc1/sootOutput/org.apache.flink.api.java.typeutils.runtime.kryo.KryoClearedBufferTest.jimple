public class org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testOutputBufferedBeingClearedInCaseOfException() throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest r0;
        byte[] r5, $r13;
        org.apache.flink.api.common.ExecutionConfig $r6;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer $r7;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer $r8;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord $r9, r17;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestDataOutputView $r10;
        org.apache.flink.core.memory.DataInputViewStreamWrapper $r11;
        java.io.ByteArrayInputStream $r12;
        java.lang.Object $r14;
        long $l2, $l3;
        byte $b4;
        java.io.EOFException $r15;
        int i5, i6, $i7;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest;

        $r6 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r6.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r7 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer;

        specialinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer: void <init>()>();

        virtualinvoke $r6.<org.apache.flink.api.common.ExecutionConfig: void registerTypeWithKryoSerializer(java.lang.Class,com.esotericsoftware.kryo.Serializer)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoClearedBufferTest$TestRecord;", $r7);

        virtualinvoke $r6.<org.apache.flink.api.common.ExecutionConfig: void registerKryoType(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoClearedBufferTest$TestRecord;");

        $r8 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        specialinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoClearedBufferTest$TestRecord;", $r6);

        $r9 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord;

        specialinvoke $r9.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord: void <init>(int)>(94);

        $r10 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestDataOutputView;

        specialinvoke $r10.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestDataOutputView: void <init>(int)>(150);

        virtualinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void serialize(java.lang.Object,org.apache.flink.core.memory.DataOutputView)>($r9, $r10);

     label1:
        virtualinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void serialize(java.lang.Object,org.apache.flink.core.memory.DataOutputView)>($r9, $r10);

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>("Expected an EOFException.");

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

     label4:
        $r11 = new org.apache.flink.core.memory.DataInputViewStreamWrapper;

        $r12 = new java.io.ByteArrayInputStream;

        $r13 = virtualinvoke $r10.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestDataOutputView: byte[] getBuffer()>();

        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>($r13);

        specialinvoke $r11.<org.apache.flink.core.memory.DataInputViewStreamWrapper: void <init>(java.io.InputStream)>($r12);

        $r14 = virtualinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: java.lang.Object deserialize(org.apache.flink.core.memory.DataInputView)>($r11);

        r17 = (org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord) $r14;

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r9, r17);

        virtualinvoke $r10.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestDataOutputView: void clear()>();

        virtualinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void serialize(java.lang.Object,org.apache.flink.core.memory.DataOutputView)>($r9, $r10);

        r5 = virtualinvoke $r10.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestDataOutputView: byte[] getBuffer()>();

        i5 = 0;

        i6 = 0;

     label5:
        $i7 = lengthof r5;

        if i6 >= $i7 goto label7;

        $b4 = r5[i6];

        if $b4 != 42 goto label6;

        i5 = i5 + 1;

     label6:
        i6 = i6 + 1;

        goto label5;

     label7:
        $l3 = (long) 94;

        $l2 = (long) i5;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, $l2);

        return;

        catch java.io.EOFException from label1 to label2 with label3;
    }
}
