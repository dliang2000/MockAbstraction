public class org.apache.flink.api.common.typeutils.base.ShortSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.ShortSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.ShortSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.ShortSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.ShortSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.ShortSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.ShortSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortSerializerTest;

        return 2;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.ShortSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortSerializerTest;

        return class "Ljava/lang/Short;";
    }

    protected java.lang.Short[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.ShortSerializerTest r0;
        int i0, $i2;
        java.util.Random $r2;
        java.lang.Short[] $r3;
        java.lang.Short $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        short $s1, $s3;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortSerializerTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412341L);

        i0 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>(32767);

        $r3 = newarray (java.lang.Short)[7];

        $r4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(1);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(-1);

        $r3[2] = $r6;

        $s1 = (short) i0;

        $r7 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        $r3[3] = $r7;

        $i2 = neg i0;

        $s3 = (short) $i2;

        $r8 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s3);

        $r3[4] = $r8;

        $r9 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(-32767);

        $r3[5] = $r9;

        $r10 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(-32768);

        $r3[6] = $r10;

        return $r3;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.ShortSerializerTest r0;
        java.lang.Short[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.ShortSerializerTest: java.lang.Short[] getTestData()>();

        return $r1;
    }
}
