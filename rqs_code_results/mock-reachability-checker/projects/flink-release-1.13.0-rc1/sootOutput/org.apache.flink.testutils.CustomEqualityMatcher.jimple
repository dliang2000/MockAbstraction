public class org.apache.flink.testutils.CustomEqualityMatcher extends org.hamcrest.BaseMatcher
{
    private final java.lang.Object wanted;
    private final org.apache.flink.testutils.DeeplyEqualsChecker checker;

    private void <init>(java.lang.Object, org.apache.flink.testutils.DeeplyEqualsChecker)
    {
        org.apache.flink.testutils.CustomEqualityMatcher r0;
        java.lang.Object r1;
        org.apache.flink.testutils.DeeplyEqualsChecker r2;

        r0 := @this: org.apache.flink.testutils.CustomEqualityMatcher;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.testutils.DeeplyEqualsChecker;

        specialinvoke r0.<org.hamcrest.BaseMatcher: void <init>()>();

        r0.<org.apache.flink.testutils.CustomEqualityMatcher: java.lang.Object wanted> = r1;

        r0.<org.apache.flink.testutils.CustomEqualityMatcher: org.apache.flink.testutils.DeeplyEqualsChecker checker> = r2;

        return;
    }

    public static org.apache.flink.testutils.CustomEqualityMatcher deeplyEquals(java.lang.Object)
    {
        java.lang.Object r0;
        org.apache.flink.testutils.CustomEqualityMatcher $r1;
        org.apache.flink.testutils.DeeplyEqualsChecker $r2;

        r0 := @parameter0: java.lang.Object;

        $r1 = new org.apache.flink.testutils.CustomEqualityMatcher;

        $r2 = new org.apache.flink.testutils.DeeplyEqualsChecker;

        specialinvoke $r2.<org.apache.flink.testutils.DeeplyEqualsChecker: void <init>()>();

        specialinvoke $r1.<org.apache.flink.testutils.CustomEqualityMatcher: void <init>(java.lang.Object,org.apache.flink.testutils.DeeplyEqualsChecker)>(r0, $r2);

        return $r1;
    }

    public org.apache.flink.testutils.CustomEqualityMatcher withChecker(org.apache.flink.testutils.DeeplyEqualsChecker)
    {
        org.apache.flink.testutils.CustomEqualityMatcher r0, $r2;
        org.apache.flink.testutils.DeeplyEqualsChecker r1;
        java.lang.Object $r3;

        r0 := @this: org.apache.flink.testutils.CustomEqualityMatcher;

        r1 := @parameter0: org.apache.flink.testutils.DeeplyEqualsChecker;

        $r2 = new org.apache.flink.testutils.CustomEqualityMatcher;

        $r3 = r0.<org.apache.flink.testutils.CustomEqualityMatcher: java.lang.Object wanted>;

        specialinvoke $r2.<org.apache.flink.testutils.CustomEqualityMatcher: void <init>(java.lang.Object,org.apache.flink.testutils.DeeplyEqualsChecker)>($r3, r1);

        return $r2;
    }

    public boolean matches(java.lang.Object)
    {
        org.apache.flink.testutils.CustomEqualityMatcher r0;
        java.lang.Object r1, $r2;
        org.apache.flink.testutils.DeeplyEqualsChecker $r3;
        boolean $z0;

        r0 := @this: org.apache.flink.testutils.CustomEqualityMatcher;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<org.apache.flink.testutils.CustomEqualityMatcher: org.apache.flink.testutils.DeeplyEqualsChecker checker>;

        $r2 = r0.<org.apache.flink.testutils.CustomEqualityMatcher: java.lang.Object wanted>;

        $z0 = virtualinvoke $r3.<org.apache.flink.testutils.DeeplyEqualsChecker: boolean deepEquals(java.lang.Object,java.lang.Object)>(r1, $r2);

        return $z0;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.apache.flink.testutils.CustomEqualityMatcher r0;
        org.hamcrest.Description r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.flink.testutils.CustomEqualityMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = r0.<org.apache.flink.testutils.CustomEqualityMatcher: java.lang.Object wanted>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendValue(java.lang.Object)>($r2);

        return;
    }
}
