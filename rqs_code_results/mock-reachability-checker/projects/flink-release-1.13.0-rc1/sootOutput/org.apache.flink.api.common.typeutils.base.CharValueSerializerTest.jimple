public class org.apache.flink.api.common.typeutils.base.CharValueSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.CharValueSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.CharValueSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.CharValueSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.CharValueSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.CharValueSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.CharValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.CharValueSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.CharValueSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.CharValueSerializerTest;

        return 2;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.CharValueSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.CharValueSerializerTest;

        return class "Lorg/apache/flink/types/CharValue;";
    }

    protected org.apache.flink.types.CharValue[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.CharValueSerializerTest r0;
        int i0;
        java.util.Random $r2;
        org.apache.flink.types.CharValue[] $r3;
        org.apache.flink.types.CharValue $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        char $c1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.CharValueSerializerTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412341L);

        i0 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>(65535);

        $r3 = newarray (org.apache.flink.types.CharValue)[7];

        $r4 = new org.apache.flink.types.CharValue;

        specialinvoke $r4.<org.apache.flink.types.CharValue: void <init>(char)>(97);

        $r3[0] = $r4;

        $r5 = new org.apache.flink.types.CharValue;

        specialinvoke $r5.<org.apache.flink.types.CharValue: void <init>(char)>(64);

        $r3[1] = $r5;

        $r6 = new org.apache.flink.types.CharValue;

        specialinvoke $r6.<org.apache.flink.types.CharValue: void <init>(char)>(228);

        $r3[2] = $r6;

        $r7 = new org.apache.flink.types.CharValue;

        specialinvoke $r7.<org.apache.flink.types.CharValue: void <init>(char)>(49);

        $r3[3] = $r7;

        $r8 = new org.apache.flink.types.CharValue;

        $c1 = (char) i0;

        specialinvoke $r8.<org.apache.flink.types.CharValue: void <init>(char)>($c1);

        $r3[4] = $r8;

        $r9 = new org.apache.flink.types.CharValue;

        specialinvoke $r9.<org.apache.flink.types.CharValue: void <init>(char)>(65535);

        $r3[5] = $r9;

        $r10 = new org.apache.flink.types.CharValue;

        specialinvoke $r10.<org.apache.flink.types.CharValue: void <init>(char)>(0);

        $r3[6] = $r10;

        return $r3;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.CharValueSerializerTest r0;
        org.apache.flink.types.CharValue[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.CharValueSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.CharValueSerializerTest: org.apache.flink.types.CharValue[] getTestData()>();

        return $r1;
    }
}
