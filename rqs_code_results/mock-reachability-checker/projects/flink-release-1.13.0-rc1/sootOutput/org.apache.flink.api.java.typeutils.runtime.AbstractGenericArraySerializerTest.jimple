public abstract class org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest extends java.lang.Object
{
    private final java.util.Random rnd;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        java.util.Random $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>(long)>(349712539451944123L);

        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd> = $r1;

        return;
    }

    public void testString()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        java.lang.String[] $r3, $r12;
        java.util.Random $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r19;
        java.lang.String $r5, $r7, $r9, $r11, $r14, $r16, $r18, $r20;
        org.apache.flink.api.common.typeutils.base.StringSerializer $r21;
        java.lang.String[][] $r22, $r23;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        $r3 = newarray (java.lang.String)[7];

        $r3[0] = "abc";

        $r3[1] = "";

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r5 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r4, 10, 100);

        $r3[2] = $r5;

        $r6 = new java.util.Random;

        specialinvoke $r6.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r7 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r6, 15, 50);

        $r3[3] = $r7;

        $r8 = new java.util.Random;

        specialinvoke $r8.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r9 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r8, 30, 170);

        $r3[4] = $r9;

        $r10 = new java.util.Random;

        specialinvoke $r10.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r11 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r10, 14, 15);

        $r3[5] = $r11;

        $r3[6] = "";

        $r12 = newarray (java.lang.String)[7];

        $r12[0] = "foo";

        $r12[1] = "";

        $r13 = new java.util.Random;

        specialinvoke $r13.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r14 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r13, 10, 100);

        $r12[2] = $r14;

        $r15 = new java.util.Random;

        specialinvoke $r15.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r16 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r15, 1000, 5000);

        $r12[3] = $r16;

        $r17 = new java.util.Random;

        specialinvoke $r17.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r18 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r17, 30000, 35000);

        $r12[4] = $r18;

        $r19 = new java.util.Random;

        specialinvoke $r19.<java.util.Random: void <init>(long)>(289347567856686223L);

        $r20 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r19, 102400, 107520);

        $r12[5] = $r20;

        $r12[6] = "bar";

        $r21 = new org.apache.flink.api.common.typeutils.base.StringSerializer;

        specialinvoke $r21.<org.apache.flink.api.common.typeutils.base.StringSerializer: void <init>()>();

        $r22 = newarray (java.lang.String[])[2];

        $r22[0] = $r3;

        $r22[1] = $r12;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Object[][])>(class "Ljava/lang/String;", $r21, $r22);

        $r23 = newarray (java.lang.String[])[2];

        $r23[0] = $r3;

        $r23[1] = $r12;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Object[][])>($r23);

        return;
    }

    public void testSimpleTypesObjects()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes $r8, $r9, $r17, $r25, $r33, $r41, $r49;
        java.util.Random $r10, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r28, $r29, $r31, $r32, $r34, $r35, $r36, $r37, $r39, $r40, $r42, $r43, $r44, $r45, $r47, $r48, $r50, $r51, $r52, $r53, $r55, $r56;
        int $i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34;
        long $l1, $l7, $l13, $l19, $l25, $l31;
        byte $b3, $b9, $b15, $b21, $b27, $b33;
        java.lang.String $r14, $r22, $r30, $r38, $r46, $r54;
        short $s5, $s11, $s17, $s23, $s29, $s35;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes[][] $r57;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes[] $r58, $r59;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        $r8 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        specialinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>()>();

        $r9 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $r10 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i0 = virtualinvoke $r10.<java.util.Random: int nextInt()>();

        $r11 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $l1 = virtualinvoke $r11.<java.util.Random: long nextLong()>();

        $r12 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i2 = virtualinvoke $r12.<java.util.Random: int nextInt()>();

        $b3 = (byte) $i2;

        $r13 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $r14 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r13, 10, 100);

        $r15 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i4 = virtualinvoke $r15.<java.util.Random: int nextInt()>();

        $s5 = (short) $i4;

        $r16 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $d0 = virtualinvoke $r16.<java.util.Random: double nextDouble()>();

        specialinvoke $r9.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i0, $l1, $b3, $r14, $s5, $d0);

        $r17 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $r18 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i6 = virtualinvoke $r18.<java.util.Random: int nextInt()>();

        $r19 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $l7 = virtualinvoke $r19.<java.util.Random: long nextLong()>();

        $r20 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i8 = virtualinvoke $r20.<java.util.Random: int nextInt()>();

        $b9 = (byte) $i8;

        $r21 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $r22 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r21, 10, 100);

        $r23 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i10 = virtualinvoke $r23.<java.util.Random: int nextInt()>();

        $s11 = (short) $i10;

        $r24 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $d1 = virtualinvoke $r24.<java.util.Random: double nextDouble()>();

        specialinvoke $r17.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i6, $l7, $b9, $r22, $s11, $d1);

        $r25 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $r26 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i12 = virtualinvoke $r26.<java.util.Random: int nextInt()>();

        $r27 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $l13 = virtualinvoke $r27.<java.util.Random: long nextLong()>();

        $r28 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i14 = virtualinvoke $r28.<java.util.Random: int nextInt()>();

        $b15 = (byte) $i14;

        $r29 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $r30 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r29, 10, 100);

        $r31 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i16 = virtualinvoke $r31.<java.util.Random: int nextInt()>();

        $s17 = (short) $i16;

        $r32 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $d2 = virtualinvoke $r32.<java.util.Random: double nextDouble()>();

        specialinvoke $r25.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i12, $l13, $b15, $r30, $s17, $d2);

        $r33 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $r34 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i18 = virtualinvoke $r34.<java.util.Random: int nextInt()>();

        $r35 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $l19 = virtualinvoke $r35.<java.util.Random: long nextLong()>();

        $r36 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i20 = virtualinvoke $r36.<java.util.Random: int nextInt()>();

        $b21 = (byte) $i20;

        $r37 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $r38 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r37, 10, 100);

        $r39 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i22 = virtualinvoke $r39.<java.util.Random: int nextInt()>();

        $s23 = (short) $i22;

        $r40 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $d3 = virtualinvoke $r40.<java.util.Random: double nextDouble()>();

        specialinvoke $r33.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i18, $l19, $b21, $r38, $s23, $d3);

        $r41 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $r42 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i24 = virtualinvoke $r42.<java.util.Random: int nextInt()>();

        $r43 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $l25 = virtualinvoke $r43.<java.util.Random: long nextLong()>();

        $r44 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i26 = virtualinvoke $r44.<java.util.Random: int nextInt()>();

        $b27 = (byte) $i26;

        $r45 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $r46 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r45, 10, 100);

        $r47 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i28 = virtualinvoke $r47.<java.util.Random: int nextInt()>();

        $s29 = (short) $i28;

        $r48 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $d4 = virtualinvoke $r48.<java.util.Random: double nextDouble()>();

        specialinvoke $r41.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i24, $l25, $b27, $r46, $s29, $d4);

        $r49 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes;

        $r50 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i30 = virtualinvoke $r50.<java.util.Random: int nextInt()>();

        $r51 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $l31 = virtualinvoke $r51.<java.util.Random: long nextLong()>();

        $r52 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i32 = virtualinvoke $r52.<java.util.Random: int nextInt()>();

        $b33 = (byte) $i32;

        $r53 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $r54 = staticinvoke <org.apache.flink.util.StringUtils: java.lang.String getRandomString(java.util.Random,int,int)>($r53, 10, 100);

        $r55 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $i34 = virtualinvoke $r55.<java.util.Random: int nextInt()>();

        $s35 = (short) $i34;

        $r56 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        $d5 = virtualinvoke $r56.<java.util.Random: double nextDouble()>();

        specialinvoke $r49.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes: void <init>(int,long,byte,java.lang.String,short,double)>($i30, $l31, $b33, $r54, $s35, $d5);

        $r57 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes[])[2];

        $r58 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes)[3];

        $r58[0] = $r8;

        $r58[1] = $r9;

        $r58[2] = $r17;

        $r57[0] = $r58;

        $r59 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$SimpleTypes)[4];

        $r59[0] = $r25;

        $r59[1] = $r33;

        $r59[2] = $r41;

        $r59[3] = $r49;

        $r57[1] = $r59;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Object[][])>($r57);

        return;
    }

    public void testCompositeObject()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1 $r6, $r7, $r8, $r9, $r10;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1[][] $r11;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1[] $r12, $r13, $r14;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        $r6 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(5626435);

        $r7 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(76923);

        $r8 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(-1100);

        $r9 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r9.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(0);

        $r10 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1;

        specialinvoke $r10.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1: void <init>(int)>(44);

        $r11 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1[])[3];

        $r12 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1)[2];

        $r12[0] = $r6;

        $r12[1] = $r7;

        $r11[0] = $r12;

        $r13 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1)[1];

        $r13[0] = $r8;

        $r11[1] = $r13;

        $r14 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject1)[2];

        $r14[0] = $r9;

        $r14[1] = $r10;

        $r11[2] = $r14;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Object[][])>($r11);

        return;
    }

    public void testNestedObjects()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2 $r5, $r7, $r8, $r10;
        java.util.Random $r6, $r9, $r11;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2[][] $r12;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2[] $r13, $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        $r5 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        $r6 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        specialinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>(java.util.Random)>($r6);

        $r7 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        specialinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>()>();

        $r8 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        $r9 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        specialinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>(java.util.Random)>($r9);

        $r10 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2;

        $r11 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: java.util.Random rnd>;

        specialinvoke $r10.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2: void <init>(java.util.Random)>($r11);

        $r12 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2[])[5];

        $r13 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2)[3];

        $r13[0] = $r5;

        $r13[1] = $r7;

        $r13[2] = $r8;

        $r12[0] = $r13;

        $r14 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2)[0];

        $r12[1] = $r14;

        $r15 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2)[0];

        $r12[2] = $r15;

        $r16 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2)[1];

        $r16[0] = $r10;

        $r12[3] = $r16;

        $r17 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$ComplexNestedObject2)[0];

        $r12[4] = $r17;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Object[][])>($r12);

        return;
    }

    public void testBeanStyleObjects()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book[][] $r9;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book[] $r10, $r11, $r12, $r13, $r14, $r15;
        java.util.ArrayList $r16, $r18;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor $r17, $r19;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor[][] $r20;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor[] $r21;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        $r3 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(976243875L, "The Serialization Odyssey", 42L);

        $r4 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r4.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(0L, "Debugging byte streams", 1337L);

        $r5 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(-1L, "Low level interfaces", 12648430L);

        $r6 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(9223372036854775807L, "The joy of bits and bytes", -559038737L);

        $r7 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(-9223372036854775808L, "Winning a prize for creative test strings", 12246784L);

        $r8 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book;

        specialinvoke $r8.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book: void <init>(long,java.lang.String,long)>(-2L, "Distributed Systems", -6066930334832433271L);

        $r9 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book[])[6];

        $r10 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book)[2];

        $r10[0] = $r3;

        $r10[1] = $r4;

        $r9[0] = $r10;

        $r11 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book)[0];

        $r9[1] = $r11;

        $r12 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book)[0];

        $r9[2] = $r12;

        $r13 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book)[0];

        $r9[3] = $r13;

        $r14 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book)[0];

        $r9[4] = $r14;

        $r15 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$Book)[4];

        $r15[0] = $r5;

        $r15[1] = $r6;

        $r15[2] = $r7;

        $r15[3] = $r8;

        $r9[5] = $r15;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Object[][])>($r9);

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>("A");

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>("B");

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>("C");

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>("D");

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>("E");

        $r17 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor;

        specialinvoke $r17.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor: void <init>(long,java.util.List,java.lang.String)>(976243875L, $r16, "Arno Nym");

        $r18 = new java.util.ArrayList;

        specialinvoke $r18.<java.util.ArrayList: void <init>()>();

        $r19 = new org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor;

        specialinvoke $r19.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor: void <init>(long,java.util.List,java.lang.String)>(987654321L, $r18, "The Saurus");

        $r20 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor[])[1];

        $r21 = newarray (org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeSerializerTest$BookAuthor)[2];

        $r21[0] = $r17;

        $r21[1] = $r19;

        $r20[0] = $r21;

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Object[][])>($r20);

        return;
    }

    private final transient void runTests(java.lang.Object[][])
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        java.lang.Object[][] r1;
        org.apache.flink.api.common.typeutils.TypeSerializer r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4;
        java.lang.Exception $r5;
        java.io.PrintStream $r6;
        java.lang.String $r7, $r8;
        java.lang.Class r9;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        r1 := @parameter0: java.lang.Object[][];

     label1:
        $r3 = r1[0];

        $r4 = $r3[0];

        r9 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        r2 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: org.apache.flink.api.common.typeutils.TypeSerializer createComponentSerializer(java.lang.Class)>(r9);

        specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: void runTests(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Object[][])>(r9, r2, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r7 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r7);

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        $r8 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r8);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private final transient void runTests(java.lang.Class, org.apache.flink.api.common.typeutils.TypeSerializer, java.lang.Object[][])
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        java.lang.Class r1, r13;
        org.apache.flink.api.common.typeutils.TypeSerializer r2;
        java.lang.Object[][] r3;
        org.apache.flink.api.common.typeutils.base.GenericArraySerializer r4;
        int $i0;
        java.lang.Object $r6;
        org.apache.flink.api.common.typeutils.SerializerTestInstance $r7;
        java.lang.Exception $r8;
        java.io.PrintStream $r9;
        java.lang.String $r10, $r11;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.api.common.typeutils.TypeSerializer;

        r3 := @parameter2: java.lang.Object[][];

     label1:
        if r1 == null goto label2;

        if r2 == null goto label2;

        if r3 == null goto label2;

        $i0 = lengthof r3;

        if $i0 != 0 goto label3;

     label2:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r12;

     label3:
        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r1, 0);

        r13 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        r4 = specialinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest: org.apache.flink.api.common.typeutils.base.GenericArraySerializer createSerializer(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer)>(r1, r2);

        $r7 = new org.apache.flink.api.common.typeutils.SerializerTestInstance;

        specialinvoke $r7.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class,int,java.lang.Object[])>(r4, r13, -1, r3);

        virtualinvoke $r7.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void testAll()>();

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r10 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r10);

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        $r11 = virtualinvoke $r8.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <org.junit.Assert: void fail(java.lang.String)>($r11);

     label6:
        return;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    private org.apache.flink.api.common.typeutils.base.GenericArraySerializer createSerializer(java.lang.Class, org.apache.flink.api.common.typeutils.TypeSerializer)
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest r0;
        java.lang.Class r1;
        org.apache.flink.api.common.typeutils.TypeSerializer r2;
        org.apache.flink.api.common.typeutils.base.GenericArraySerializer $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericArraySerializerTest;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.apache.flink.api.common.typeutils.TypeSerializer;

        $r3 = new org.apache.flink.api.common.typeutils.base.GenericArraySerializer;

        specialinvoke $r3.<org.apache.flink.api.common.typeutils.base.GenericArraySerializer: void <init>(java.lang.Class,org.apache.flink.api.common.typeutils.TypeSerializer)>(r1, r2);

        return $r3;
    }

    protected abstract org.apache.flink.api.common.typeutils.TypeSerializer createComponentSerializer(java.lang.Class);
}
