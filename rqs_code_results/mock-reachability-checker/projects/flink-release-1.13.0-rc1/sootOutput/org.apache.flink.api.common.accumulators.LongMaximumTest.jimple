public class org.apache.flink.api.common.accumulators.LongMaximumTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.accumulators.LongMaximumTest r0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximumTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testGet()
    {
        org.apache.flink.api.common.accumulators.LongMaximumTest r0;
        org.apache.flink.api.common.accumulators.LongMaximum $r2;
        java.lang.Long $r3;
        long $l0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximumTest;

        $r2 = new org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void <init>()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-9223372036854775808L, $l0);

        return;
    }

    public void testResetLocal()
    {
        org.apache.flink.api.common.accumulators.LongMaximumTest r0;
        org.apache.flink.api.common.accumulators.LongMaximum $r2;
        java.lang.Long $r3, $r4;
        long $l1, $l2;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximumTest;

        $r2 = new org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void <init>()>();

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(9876543210L);

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9876543210L, $l1);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void resetLocal()>();

        $r4 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        $l2 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(-9223372036854775808L, $l2);

        return;
    }

    public void testAdd()
    {
        org.apache.flink.api.common.accumulators.LongMaximumTest r0;
        org.apache.flink.api.common.accumulators.LongMaximum $r2;
        java.lang.Long $r3;
        long $l0;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximumTest;

        $r2 = new org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void <init>()>();

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(1234567890L);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(9876543210L);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(-9876543210L);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(-1234567890L);

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(9876543210L, $l0);

        return;
    }

    public void testMerge()
    {
        org.apache.flink.api.common.accumulators.LongMaximumTest r0;
        org.apache.flink.api.common.accumulators.LongMaximum $r3, $r4;
        java.lang.Long $r5, $r6;
        long $l0, $l1;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximumTest;

        $r3 = new org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke $r3.<org.apache.flink.api.common.accumulators.LongMaximum: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(1234567890987654321L);

        $r4 = new org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke $r4.<org.apache.flink.api.common.accumulators.LongMaximum: void <init>()>();

        virtualinvoke $r4.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(5678909876543210123L);

        virtualinvoke $r4.<org.apache.flink.api.common.accumulators.LongMaximum: void merge(org.apache.flink.api.common.accumulators.Accumulator)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        $l0 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5678909876543210123L, $l0);

        virtualinvoke $r3.<org.apache.flink.api.common.accumulators.LongMaximum: void merge(org.apache.flink.api.common.accumulators.Accumulator)>($r4);

        $r6 = virtualinvoke $r3.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(5678909876543210123L, $l1);

        return;
    }

    public void testClone()
    {
        org.apache.flink.api.common.accumulators.LongMaximumTest r0;
        org.apache.flink.api.common.accumulators.LongMaximum r2, $r3;
        java.lang.Long $r4;
        long $l1;

        r0 := @this: org.apache.flink.api.common.accumulators.LongMaximumTest;

        $r3 = new org.apache.flink.api.common.accumulators.LongMaximum;

        specialinvoke $r3.<org.apache.flink.api.common.accumulators.LongMaximum: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.accumulators.LongMaximum: void add(long)>(4242424242424242L);

        r2 = virtualinvoke $r3.<org.apache.flink.api.common.accumulators.LongMaximum: org.apache.flink.api.common.accumulators.LongMaximum clone()>();

        $r4 = virtualinvoke r2.<org.apache.flink.api.common.accumulators.LongMaximum: java.lang.Long getLocalValue()>();

        $l1 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(4242424242424242L, $l1);

        return;
    }
}
