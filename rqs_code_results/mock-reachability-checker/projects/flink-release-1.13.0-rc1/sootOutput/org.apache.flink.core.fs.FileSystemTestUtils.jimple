public class org.apache.flink.core.fs.FileSystemTestUtils extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.core.fs.FileSystemTestUtils r0;

        r0 := @this: org.apache.flink.core.fs.FileSystemTestUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkPathEventualExistence(org.apache.flink.core.fs.FileSystem, org.apache.flink.core.fs.Path, boolean, long) throws java.io.IOException, java.lang.InterruptedException
    {
        org.apache.flink.core.fs.FileSystem r0;
        org.apache.flink.core.fs.Path r1;
        boolean z0, $z2;
        long l0, l1, $l2, $l3, $l4;
        java.lang.Boolean $r2, $r3;
        byte $b5;

        r0 := @parameter0: org.apache.flink.core.fs.FileSystem;

        r1 := @parameter1: org.apache.flink.core.fs.Path;

        z0 := @parameter2: boolean;

        l0 := @parameter3: long;

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        l1 = $l2 + l0;

     label1:
        $z2 = virtualinvoke r0.<org.apache.flink.core.fs.FileSystem: boolean exists(org.apache.flink.core.fs.Path)>(r1);

        if $z2 == z0 goto label2;

        $l3 = staticinvoke <java.lang.System: long nanoTime()>();

        $l4 = $l3 - l1;

        $b5 = $l4 cmp 0L;

        if $b5 >= 0 goto label2;

        staticinvoke <java.lang.Thread: void sleep(long)>(10L);

        goto label1;

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }
}
