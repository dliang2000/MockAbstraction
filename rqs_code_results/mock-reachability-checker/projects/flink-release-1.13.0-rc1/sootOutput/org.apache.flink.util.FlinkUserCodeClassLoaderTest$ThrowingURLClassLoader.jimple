class org.apache.flink.util.FlinkUserCodeClassLoaderTest$ThrowingURLClassLoader extends org.apache.flink.util.FlinkUserCodeClassLoader
{
    private final java.lang.RuntimeException expectedException;

    void <init>(java.util.function.Consumer, java.lang.RuntimeException)
    {
        org.apache.flink.util.FlinkUserCodeClassLoaderTest$ThrowingURLClassLoader r0;
        java.util.function.Consumer r1;
        java.lang.RuntimeException r2;
        java.net.URL[] $r3;

        r0 := @this: org.apache.flink.util.FlinkUserCodeClassLoaderTest$ThrowingURLClassLoader;

        r1 := @parameter0: java.util.function.Consumer;

        r2 := @parameter1: java.lang.RuntimeException;

        $r3 = newarray (java.net.URL)[0];

        specialinvoke r0.<org.apache.flink.util.FlinkUserCodeClassLoader: void <init>(java.net.URL[],java.lang.ClassLoader,java.util.function.Consumer)>($r3, null, r1);

        r0.<org.apache.flink.util.FlinkUserCodeClassLoaderTest$ThrowingURLClassLoader: java.lang.RuntimeException expectedException> = r2;

        return;
    }

    protected java.lang.Class loadClassWithoutExceptionHandling(java.lang.String, boolean)
    {
        org.apache.flink.util.FlinkUserCodeClassLoaderTest$ThrowingURLClassLoader r0;
        java.lang.String r1;
        boolean z0;
        java.lang.RuntimeException $r2;

        r0 := @this: org.apache.flink.util.FlinkUserCodeClassLoaderTest$ThrowingURLClassLoader;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.flink.util.FlinkUserCodeClassLoaderTest$ThrowingURLClassLoader: java.lang.RuntimeException expectedException>;

        throw $r2;
    }
}
