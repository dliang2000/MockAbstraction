public class org.apache.flink.api.java.typeutils.runtime.kryo.SerializersTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.SerializersTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.SerializersTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testTypeRegistration()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.SerializersTest r0;
        org.apache.flink.api.common.ExecutionConfig $r5, $r20;
        java.util.HashSet $r6, $r21;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer $r7, $r22;
        com.esotericsoftware.kryo.Kryo $r8, $r10, $r12, $r14, $r16, $r18, $r23;
        com.esotericsoftware.kryo.Registration $r9, $r11, $r13, $r15, $r17, $r19, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.SerializersTest;

        $r5 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r5.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        staticinvoke <org.apache.flink.api.java.typeutils.runtime.kryo.Serializers: void recursivelyRegisterType(java.lang.Class,org.apache.flink.api.common.ExecutionConfig,java.util.Set)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$ClassWithNested;", $r5, $r6);

        $r7 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        specialinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Ljava/lang/String;", $r5);

        $r8 = virtualinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r9 = virtualinvoke $r8.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$FromNested;");

        $i0 = virtualinvoke $r9.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i0 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r10 = virtualinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r11 = virtualinvoke $r10.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$ClassWithNested;");

        $i1 = virtualinvoke $r11.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i1 <= 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r12 = virtualinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r13 = virtualinvoke $r12.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/core/fs/Path;");

        $i2 = virtualinvoke $r13.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i2 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r14 = virtualinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r15 = virtualinvoke $r14.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$FromGeneric1;");

        $i3 = virtualinvoke $r15.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i3 <= 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r16 = virtualinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r17 = virtualinvoke $r16.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$FromGeneric2;");

        $i4 = virtualinvoke $r17.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i4 <= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r18 = virtualinvoke $r7.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r19 = virtualinvoke $r18.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$Node;");

        $i5 = virtualinvoke $r19.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i5 <= 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        $r20 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r20.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r21 = new java.util.HashSet;

        specialinvoke $r21.<java.util.HashSet: void <init>()>();

        staticinvoke <org.apache.flink.api.java.typeutils.runtime.kryo.Serializers: void recursivelyRegisterType(java.lang.Class,org.apache.flink.api.common.ExecutionConfig,java.util.Set)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$ClassWithNested;", $r20, $r21);

        $r22 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        specialinvoke $r22.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Ljava/lang/String;", $r5);

        $r23 = virtualinvoke $r22.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r24 = virtualinvoke $r23.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$FromNested;");

        $i6 = virtualinvoke $r24.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i6 <= 0 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z6);

        return;
    }

    public void testTypeRegistrationFromTypeInfo()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.SerializersTest r0;
        org.apache.flink.api.common.ExecutionConfig $r3;
        org.apache.flink.api.java.typeutils.GenericTypeInfo $r4;
        java.util.HashSet $r5;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer $r6;
        com.esotericsoftware.kryo.Kryo $r7, $r9, $r11, $r13, $r15, $r17;
        com.esotericsoftware.kryo.Registration $r8, $r10, $r12, $r14, $r16, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.SerializersTest;

        $r3 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r3.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r4 = new org.apache.flink.api.java.typeutils.GenericTypeInfo;

        specialinvoke $r4.<org.apache.flink.api.java.typeutils.GenericTypeInfo: void <init>(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$ClassWithNested;");

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        staticinvoke <org.apache.flink.api.java.typeutils.runtime.kryo.Serializers: void recursivelyRegisterType(org.apache.flink.api.common.typeinfo.TypeInformation,org.apache.flink.api.common.ExecutionConfig,java.util.Set)>($r4, $r3, $r5);

        $r6 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        specialinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Ljava/lang/String;", $r3);

        $r7 = virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r8 = virtualinvoke $r7.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$FromNested;");

        $i0 = virtualinvoke $r8.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i0 <= 0 goto label01;

        $z0 = 1;

        goto label02;

     label01:
        $z0 = 0;

     label02:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r9 = virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r10 = virtualinvoke $r9.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$ClassWithNested;");

        $i1 = virtualinvoke $r10.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i1 <= 0 goto label03;

        $z1 = 1;

        goto label04;

     label03:
        $z1 = 0;

     label04:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r11 = virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r12 = virtualinvoke $r11.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/core/fs/Path;");

        $i2 = virtualinvoke $r12.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i2 <= 0 goto label05;

        $z2 = 1;

        goto label06;

     label05:
        $z2 = 0;

     label06:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z2);

        $r13 = virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r14 = virtualinvoke $r13.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$FromGeneric1;");

        $i3 = virtualinvoke $r14.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i3 <= 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z3);

        $r15 = virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r16 = virtualinvoke $r15.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$FromGeneric2;");

        $i4 = virtualinvoke $r16.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i4 <= 0 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r17 = virtualinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: com.esotericsoftware.kryo.Kryo getKryo()>();

        $r18 = virtualinvoke $r17.<com.esotericsoftware.kryo.Kryo: com.esotericsoftware.kryo.Registration getRegistration(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/SerializersTest$Node;");

        $i5 = virtualinvoke $r18.<com.esotericsoftware.kryo.Registration: int getId()>();

        if $i5 <= 0 goto label11;

        $z5 = 1;

        goto label12;

     label11:
        $z5 = 0;

     label12:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z5);

        return;
    }
}
