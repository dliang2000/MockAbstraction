public class org.apache.flink.api.common.operators.util.TestRichOutputFormat extends org.apache.flink.api.common.io.RichOutputFormat
{
    public java.util.List output;

    public void <init>()
    {
        org.apache.flink.api.common.operators.util.TestRichOutputFormat r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.flink.api.common.operators.util.TestRichOutputFormat;

        specialinvoke r0.<org.apache.flink.api.common.io.RichOutputFormat: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.flink.api.common.operators.util.TestRichOutputFormat: java.util.List output> = $r1;

        return;
    }

    public void configure(org.apache.flink.configuration.Configuration)
    {
        org.apache.flink.api.common.operators.util.TestRichOutputFormat r0;
        org.apache.flink.configuration.Configuration r1;

        r0 := @this: org.apache.flink.api.common.operators.util.TestRichOutputFormat;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        return;
    }

    public void open(int, int)
    {
        org.apache.flink.api.common.operators.util.TestRichOutputFormat r0;
        int i0, i1;

        r0 := @this: org.apache.flink.api.common.operators.util.TestRichOutputFormat;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        return;
    }

    public void close()
    {
        org.apache.flink.api.common.operators.util.TestRichOutputFormat r0;

        r0 := @this: org.apache.flink.api.common.operators.util.TestRichOutputFormat;

        return;
    }

    public void writeRecord(java.lang.String)
    {
        org.apache.flink.api.common.operators.util.TestRichOutputFormat r0;
        java.lang.String r1, $r10;
        java.lang.StringBuilder $r2, $r4, $r6, $r7, $r9;
        java.util.List $r3;
        org.apache.flink.api.common.functions.RuntimeContext $r5, $r8;
        int $i0, $i1;

        r0 := @this: org.apache.flink.api.common.operators.util.TestRichOutputFormat;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.flink.api.common.operators.util.TestRichOutputFormat: java.util.List output>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<org.apache.flink.api.common.operators.util.TestRichOutputFormat: org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()>();

        $i0 = interfaceinvoke $r5.<org.apache.flink.api.common.functions.RuntimeContext: int getIndexOfThisSubtask()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r8 = virtualinvoke r0.<org.apache.flink.api.common.operators.util.TestRichOutputFormat: org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()>();

        $i1 = interfaceinvoke $r8.<org.apache.flink.api.common.functions.RuntimeContext: int getNumberOfParallelSubtasks()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r10);

        return;
    }

    public void clear()
    {
        org.apache.flink.api.common.operators.util.TestRichOutputFormat r0;
        java.util.List $r1;

        r0 := @this: org.apache.flink.api.common.operators.util.TestRichOutputFormat;

        $r1 = r0.<org.apache.flink.api.common.operators.util.TestRichOutputFormat: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public volatile void writeRecord(java.lang.Object) throws java.io.IOException
    {
        org.apache.flink.api.common.operators.util.TestRichOutputFormat r0;
        java.lang.Object r1;
        java.lang.String $r2;

        r0 := @this: org.apache.flink.api.common.operators.util.TestRichOutputFormat;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        virtualinvoke r0.<org.apache.flink.api.common.operators.util.TestRichOutputFormat: void writeRecord(java.lang.String)>($r2);

        return;
    }
}
