class org.apache.flink.api.common.operators.base.MapOperatorTest$2 extends org.apache.flink.api.common.functions.RichMapFunction
{
    final java.util.concurrent.atomic.AtomicBoolean val$opened;
    final java.util.concurrent.atomic.AtomicBoolean val$closed;
    final org.apache.flink.api.common.operators.base.MapOperatorTest this$0;

    void <init>(org.apache.flink.api.common.operators.base.MapOperatorTest, java.util.concurrent.atomic.AtomicBoolean, java.util.concurrent.atomic.AtomicBoolean)
    {
        org.apache.flink.api.common.operators.base.MapOperatorTest$2 r0;
        org.apache.flink.api.common.operators.base.MapOperatorTest r1;
        java.util.concurrent.atomic.AtomicBoolean r2, r3;

        r0 := @this: org.apache.flink.api.common.operators.base.MapOperatorTest$2;

        r1 := @parameter0: org.apache.flink.api.common.operators.base.MapOperatorTest;

        r2 := @parameter1: java.util.concurrent.atomic.AtomicBoolean;

        r3 := @parameter2: java.util.concurrent.atomic.AtomicBoolean;

        r0.<org.apache.flink.api.common.operators.base.MapOperatorTest$2: org.apache.flink.api.common.operators.base.MapOperatorTest this$0> = r1;

        r0.<org.apache.flink.api.common.operators.base.MapOperatorTest$2: java.util.concurrent.atomic.AtomicBoolean val$opened> = r2;

        r0.<org.apache.flink.api.common.operators.base.MapOperatorTest$2: java.util.concurrent.atomic.AtomicBoolean val$closed> = r3;

        specialinvoke r0.<org.apache.flink.api.common.functions.RichMapFunction: void <init>()>();

        return;
    }

    public void open(org.apache.flink.configuration.Configuration) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.base.MapOperatorTest$2 r0;
        org.apache.flink.configuration.Configuration r1;
        org.apache.flink.api.common.functions.RuntimeContext r2;
        java.util.concurrent.atomic.AtomicBoolean $r3;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.String $r4;

        r0 := @this: org.apache.flink.api.common.operators.base.MapOperatorTest$2;

        r1 := @parameter0: org.apache.flink.configuration.Configuration;

        $r3 = r0.<org.apache.flink.api.common.operators.base.MapOperatorTest$2: java.util.concurrent.atomic.AtomicBoolean val$opened>;

        virtualinvoke $r3.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        r2 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.MapOperatorTest$2: org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()>();

        $i0 = interfaceinvoke r2.<org.apache.flink.api.common.functions.RuntimeContext: int getIndexOfThisSubtask()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(0L, $l1);

        $i2 = interfaceinvoke r2.<org.apache.flink.api.common.functions.RuntimeContext: int getNumberOfParallelSubtasks()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(1L, $l3);

        $r4 = interfaceinvoke r2.<org.apache.flink.api.common.functions.RuntimeContext: java.lang.String getTaskName()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("Test Task", $r4);

        return;
    }

    public java.lang.Integer map(java.lang.String)
    {
        org.apache.flink.api.common.operators.base.MapOperatorTest$2 r0;
        java.lang.String r1;
        int $i0;
        java.lang.Integer $r2;

        r0 := @this: org.apache.flink.api.common.operators.base.MapOperatorTest$2;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r2;
    }

    public void close() throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.base.MapOperatorTest$2 r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: org.apache.flink.api.common.operators.base.MapOperatorTest$2;

        $r1 = r0.<org.apache.flink.api.common.operators.base.MapOperatorTest$2: java.util.concurrent.atomic.AtomicBoolean val$closed>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);

        return;
    }

    public volatile java.lang.Object map(java.lang.Object) throws java.lang.Exception
    {
        org.apache.flink.api.common.operators.base.MapOperatorTest$2 r0;
        java.lang.Object r1;
        java.lang.String $r2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.flink.api.common.operators.base.MapOperatorTest$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.apache.flink.api.common.operators.base.MapOperatorTest$2: java.lang.Integer map(java.lang.String)>($r2);

        return $r3;
    }
}
