class org.apache.flink.core.fs.InitOutputPathTest$FileCreator extends org.apache.flink.core.testutils.CheckedThread
{
    private final org.apache.flink.core.fs.FileSystem fs;
    private final org.apache.flink.core.fs.Path path;

    void <init>(org.apache.flink.core.fs.FileSystem, org.apache.flink.core.fs.Path)
    {
        org.apache.flink.core.fs.InitOutputPathTest$FileCreator r0;
        org.apache.flink.core.fs.FileSystem r1;
        org.apache.flink.core.fs.Path r2;

        r0 := @this: org.apache.flink.core.fs.InitOutputPathTest$FileCreator;

        r1 := @parameter0: org.apache.flink.core.fs.FileSystem;

        r2 := @parameter1: org.apache.flink.core.fs.Path;

        specialinvoke r0.<org.apache.flink.core.testutils.CheckedThread: void <init>()>();

        r0.<org.apache.flink.core.fs.InitOutputPathTest$FileCreator: org.apache.flink.core.fs.FileSystem fs> = r1;

        r0.<org.apache.flink.core.fs.InitOutputPathTest$FileCreator: org.apache.flink.core.fs.Path path> = r2;

        return;
    }

    public void go() throws java.lang.Exception
    {
        org.apache.flink.core.fs.InitOutputPathTest$FileCreator r0;
        org.apache.flink.core.fs.FSDataOutputStream r1;
        org.apache.flink.core.fs.Path $r4, $r6, $r9;
        org.apache.flink.core.fs.FileSystem $r5, $r10;
        org.apache.flink.core.fs.FileSystem$WriteMode $r7, $r8;
        java.lang.Throwable $r11, $r13, $r14, r15;

        r0 := @this: org.apache.flink.core.fs.InitOutputPathTest$FileCreator;

        $r5 = r0.<org.apache.flink.core.fs.InitOutputPathTest$FileCreator: org.apache.flink.core.fs.FileSystem fs>;

        $r4 = r0.<org.apache.flink.core.fs.InitOutputPathTest$FileCreator: org.apache.flink.core.fs.Path path>;

        $r6 = virtualinvoke $r4.<org.apache.flink.core.fs.Path: org.apache.flink.core.fs.Path getParent()>();

        $r7 = <org.apache.flink.core.fs.FileSystem$WriteMode: org.apache.flink.core.fs.FileSystem$WriteMode OVERWRITE>;

        virtualinvoke $r5.<org.apache.flink.core.fs.FileSystem: boolean initOutPathLocalFS(org.apache.flink.core.fs.Path,org.apache.flink.core.fs.FileSystem$WriteMode,boolean)>($r6, $r7, 1);

        $r10 = r0.<org.apache.flink.core.fs.InitOutputPathTest$FileCreator: org.apache.flink.core.fs.FileSystem fs>;

        $r9 = r0.<org.apache.flink.core.fs.InitOutputPathTest$FileCreator: org.apache.flink.core.fs.Path path>;

        $r8 = <org.apache.flink.core.fs.FileSystem$WriteMode: org.apache.flink.core.fs.FileSystem$WriteMode OVERWRITE>;

        r1 = virtualinvoke $r10.<org.apache.flink.core.fs.FileSystem: org.apache.flink.core.fs.FSDataOutputStream create(org.apache.flink.core.fs.Path,org.apache.flink.core.fs.FileSystem$WriteMode)>($r9, $r8);

        r15 = null;

     label01:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataOutputStream: void write(int)>(11);

     label02:
        if r1 == null goto label12;

        goto label03;

     label03:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataOutputStream: void close()>();

        goto label12;

     label04:
        $r14 := @caughtexception;

        r15 = $r14;

        throw $r14;

     label05:
        $r13 := @caughtexception;

     label06:
        if r1 == null goto label11;

        if r15 == null goto label10;

     label07:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataOutputStream: void close()>();

     label08:
        goto label11;

     label09:
        $r11 := @caughtexception;

        virtualinvoke r15.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r11);

        goto label11;

     label10:
        virtualinvoke r1.<org.apache.flink.core.fs.FSDataOutputStream: void close()>();

     label11:
        throw $r13;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label04 to label06 with label05;
    }
}
