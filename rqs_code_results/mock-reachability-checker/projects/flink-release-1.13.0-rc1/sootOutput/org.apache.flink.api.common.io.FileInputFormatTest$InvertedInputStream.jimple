final class org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream extends java.io.InputStream
{
    private final java.io.InputStream originalStream;

    private void <init>(java.io.InputStream)
    {
        org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream r0;
        java.io.InputStream r1;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream: java.io.InputStream originalStream> = r1;

        return;
    }

    public int read() throws java.io.IOException
    {
        org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream r0;
        int i0, $i1, $i2;
        java.io.InputStream $r1;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream;

        $r1 = r0.<org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream: java.io.InputStream originalStream>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if i0 != -1 goto label1;

        $i2 = -1;

        goto label2;

     label1:
        $i1 = i0 ^ -1;

        $i2 = $i1 & 255;

     label2:
        return $i2;
    }

    public int available() throws java.io.IOException
    {
        org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream r0;
        java.io.InputStream $r1;
        int $i0;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream;

        $r1 = r0.<org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream: java.io.InputStream originalStream>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

        return $i0;
    }

    void <init>(java.io.InputStream, org.apache.flink.api.common.io.FileInputFormatTest$1)
    {
        org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream r0;
        java.io.InputStream r1;
        org.apache.flink.api.common.io.FileInputFormatTest$1 r2;

        r0 := @this: org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: org.apache.flink.api.common.io.FileInputFormatTest$1;

        specialinvoke r0.<org.apache.flink.api.common.io.FileInputFormatTest$InvertedInputStream: void <init>(java.io.InputStream)>(r1);

        return;
    }
}
