class org.apache.flink.api.common.state.StateDescriptorTest$1 extends org.apache.flink.core.testutils.CheckedThread
{
    final org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor val$desc;
    final org.apache.flink.api.common.ExecutionConfig val$executionConfig;
    final java.util.concurrent.ConcurrentHashMap val$serializers;
    final org.apache.flink.api.common.state.StateDescriptorTest this$0;

    void <init>(org.apache.flink.api.common.state.StateDescriptorTest, org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor, org.apache.flink.api.common.ExecutionConfig, java.util.concurrent.ConcurrentHashMap)
    {
        org.apache.flink.api.common.state.StateDescriptorTest$1 r0;
        org.apache.flink.api.common.state.StateDescriptorTest r1;
        org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor r2;
        org.apache.flink.api.common.ExecutionConfig r3;
        java.util.concurrent.ConcurrentHashMap r4;

        r0 := @this: org.apache.flink.api.common.state.StateDescriptorTest$1;

        r1 := @parameter0: org.apache.flink.api.common.state.StateDescriptorTest;

        r2 := @parameter1: org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor;

        r3 := @parameter2: org.apache.flink.api.common.ExecutionConfig;

        r4 := @parameter3: java.util.concurrent.ConcurrentHashMap;

        r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: org.apache.flink.api.common.state.StateDescriptorTest this$0> = r1;

        r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor val$desc> = r2;

        r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: org.apache.flink.api.common.ExecutionConfig val$executionConfig> = r3;

        r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: java.util.concurrent.ConcurrentHashMap val$serializers> = r4;

        specialinvoke r0.<org.apache.flink.core.testutils.CheckedThread: void <init>()>();

        return;
    }

    public void go()
    {
        org.apache.flink.api.common.state.StateDescriptorTest$1 r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        org.apache.flink.api.common.ExecutionConfig $r2;
        org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor $r3, $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        int $i0;
        java.lang.Integer $r6;

        r0 := @this: org.apache.flink.api.common.state.StateDescriptorTest$1;

        $r3 = r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor val$desc>;

        $r2 = r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: org.apache.flink.api.common.ExecutionConfig val$executionConfig>;

        virtualinvoke $r3.<org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor: void initializeSerializerUnlessSet(org.apache.flink.api.common.ExecutionConfig)>($r2);

        $r4 = r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor val$desc>;

        r1 = virtualinvoke $r4.<org.apache.flink.api.common.state.StateDescriptorTest$TestStateDescriptor: org.apache.flink.api.common.typeutils.TypeSerializer getOriginalSerializer()>();

        $r5 = r0.<org.apache.flink.api.common.state.StateDescriptorTest$1: java.util.concurrent.ConcurrentHashMap val$serializers>;

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r1);

        return;
    }
}
