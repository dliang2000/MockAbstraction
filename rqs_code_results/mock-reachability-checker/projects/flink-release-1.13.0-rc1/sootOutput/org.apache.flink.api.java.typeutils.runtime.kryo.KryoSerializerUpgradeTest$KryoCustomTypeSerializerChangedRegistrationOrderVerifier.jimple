public final class org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier extends java.lang.Object implements org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$UpgradeVerifier
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createUpgradedSerializer()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier r0;
        org.apache.flink.api.common.ExecutionConfig $r2;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier;

        $r2 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerKryoType(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializerUpgradeTest$DummyClassOne;");

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerTypeWithKryoSerializer(java.lang.Class,java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Dog;", class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$DogV2KryoSerializer;");

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerKryoType(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoSerializerUpgradeTest$DummyClassTwo;");

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerKryoType(java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Cat;");

        virtualinvoke $r2.<org.apache.flink.api.common.ExecutionConfig: void registerTypeWithKryoSerializer(java.lang.Class,java.lang.Class)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Parrot;", class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$ParrotKryoSerializer;");

        $r3 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Animal;", $r2);

        return $r3;
    }

    public org.hamcrest.Matcher testDataMatcher()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier r0;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Dog $r1;
        org.hamcrest.Matcher $r2;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Dog;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoPojosForMigrationTests$Dog: void <init>(java.lang.String)>("Hasso");

        $r2 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($r1);

        return $r2;
    }

    public org.hamcrest.Matcher schemaCompatibilityMatcher(org.apache.flink.testutils.migration.MigrationVersion)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier r0;
        org.apache.flink.testutils.migration.MigrationVersion r1;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer $r2;
        org.apache.flink.api.common.ExecutionConfig $r3;
        org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility $r4;
        org.hamcrest.Matcher $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializerUpgradeTest$KryoCustomTypeSerializerChangedRegistrationOrderVerifier;

        r1 := @parameter0: org.apache.flink.testutils.migration.MigrationVersion;

        $r2 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer;

        $r3 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r3.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        specialinvoke $r2.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoSerializer: void <init>(java.lang.Class,org.apache.flink.api.common.ExecutionConfig)>(class "Lorg/apache/flink/api/java/typeutils/runtime/kryo/KryoPojosForMigrationTests$Animal;", $r3);

        $r4 = staticinvoke <org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility: org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility compatibleWithReconfiguredSerializer(org.apache.flink.api.common.typeutils.TypeSerializer)>($r2);

        $r5 = staticinvoke <org.apache.flink.api.common.typeutils.TypeSerializerMatchers: org.hamcrest.Matcher hasSameCompatibilityAs(org.apache.flink.api.common.typeutils.TypeSerializerSchemaCompatibility)>($r4);

        return $r5;
    }
}
