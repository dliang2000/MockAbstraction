public class org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest extends org.apache.flink.api.common.typeutils.TypeInformationTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeInformationTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeinfo.FractionalTypeInfo[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.FractionalTypeInfo[] $r1;
        org.apache.flink.api.common.typeinfo.BasicTypeInfo $r2, $r4;
        org.apache.flink.api.common.typeinfo.FractionalTypeInfo $r3, $r5;

        r0 := @this: org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest;

        $r1 = newarray (org.apache.flink.api.common.typeinfo.FractionalTypeInfo)[2];

        $r2 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo FLOAT_TYPE_INFO>;

        $r3 = (org.apache.flink.api.common.typeinfo.FractionalTypeInfo) $r2;

        $r1[0] = $r3;

        $r4 = <org.apache.flink.api.common.typeinfo.BasicTypeInfo: org.apache.flink.api.common.typeinfo.BasicTypeInfo DOUBLE_TYPE_INFO>;

        $r5 = (org.apache.flink.api.common.typeinfo.FractionalTypeInfo) $r4;

        $r1[1] = $r5;

        return $r1;
    }

    protected volatile org.apache.flink.api.common.typeinfo.TypeInformation[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.FractionalTypeInfo[] $r1;

        r0 := @this: org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeinfo.FractionalTypeInfoTest: org.apache.flink.api.common.typeinfo.FractionalTypeInfo[] getTestData()>();

        return $r1;
    }
}
