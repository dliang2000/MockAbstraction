public class org.apache.flink.api.common.accumulators.DoubleMinimumTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.accumulators.DoubleMinimumTest r0;

        r0 := @this: org.apache.flink.api.common.accumulators.DoubleMinimumTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testGet()
    {
        org.apache.flink.api.common.accumulators.DoubleMinimumTest r0;
        org.apache.flink.api.common.accumulators.DoubleMinimum $r2;
        java.lang.Double $r3;
        double $d0;

        r0 := @this: org.apache.flink.api.common.accumulators.DoubleMinimumTest;

        $r2 = new org.apache.flink.api.common.accumulators.DoubleMinimum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void <init>()>();

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: java.lang.Double getLocalValue()>();

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(double,double,double)>(#Infinity, $d0, 0.0);

        return;
    }

    public void testResetLocal()
    {
        org.apache.flink.api.common.accumulators.DoubleMinimumTest r0;
        org.apache.flink.api.common.accumulators.DoubleMinimum $r2;
        java.lang.Double $r3, $r4;
        double $d1, $d2;

        r0 := @this: org.apache.flink.api.common.accumulators.DoubleMinimumTest;

        $r2 = new org.apache.flink.api.common.accumulators.DoubleMinimum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void <init>()>();

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(13.57902468);

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: java.lang.Double getLocalValue()>();

        $d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(double,double,double)>(13.57902468, $d1, 0.0);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void resetLocal()>();

        $r4 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: java.lang.Double getLocalValue()>();

        $d2 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(double,double,double)>(#Infinity, $d2, 0.0);

        return;
    }

    public void testAdd()
    {
        org.apache.flink.api.common.accumulators.DoubleMinimumTest r0;
        org.apache.flink.api.common.accumulators.DoubleMinimum $r2;
        java.lang.Double $r3;
        double $d0;

        r0 := @this: org.apache.flink.api.common.accumulators.DoubleMinimumTest;

        $r2 = new org.apache.flink.api.common.accumulators.DoubleMinimum;

        specialinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void <init>()>();

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(1234.5768);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(9876.5432);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(-987.6543);

        virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(-123.4567);

        $r3 = virtualinvoke $r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: java.lang.Double getLocalValue()>();

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(double,double,double)>(-987.6543, $d0, 0.0);

        return;
    }

    public void testMerge()
    {
        org.apache.flink.api.common.accumulators.DoubleMinimumTest r0;
        org.apache.flink.api.common.accumulators.DoubleMinimum $r3, $r4;
        java.lang.Double $r5, $r6;
        double $d0, $d1;

        r0 := @this: org.apache.flink.api.common.accumulators.DoubleMinimumTest;

        $r3 = new org.apache.flink.api.common.accumulators.DoubleMinimum;

        specialinvoke $r3.<org.apache.flink.api.common.accumulators.DoubleMinimum: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(1234.5768);

        $r4 = new org.apache.flink.api.common.accumulators.DoubleMinimum;

        specialinvoke $r4.<org.apache.flink.api.common.accumulators.DoubleMinimum: void <init>()>();

        virtualinvoke $r4.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(5678.9012);

        virtualinvoke $r4.<org.apache.flink.api.common.accumulators.DoubleMinimum: void merge(org.apache.flink.api.common.accumulators.Accumulator)>($r3);

        $r5 = virtualinvoke $r4.<org.apache.flink.api.common.accumulators.DoubleMinimum: java.lang.Double getLocalValue()>();

        $d0 = virtualinvoke $r5.<java.lang.Double: double doubleValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(double,double,double)>(1234.5768, $d0, 0.0);

        virtualinvoke $r3.<org.apache.flink.api.common.accumulators.DoubleMinimum: void merge(org.apache.flink.api.common.accumulators.Accumulator)>($r4);

        $r6 = virtualinvoke $r3.<org.apache.flink.api.common.accumulators.DoubleMinimum: java.lang.Double getLocalValue()>();

        $d1 = virtualinvoke $r6.<java.lang.Double: double doubleValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(double,double,double)>(1234.5768, $d1, 0.0);

        return;
    }

    public void testClone()
    {
        org.apache.flink.api.common.accumulators.DoubleMinimumTest r0;
        org.apache.flink.api.common.accumulators.DoubleMinimum r2, $r3;
        java.lang.Double $r4;
        double $d1;

        r0 := @this: org.apache.flink.api.common.accumulators.DoubleMinimumTest;

        $r3 = new org.apache.flink.api.common.accumulators.DoubleMinimum;

        specialinvoke $r3.<org.apache.flink.api.common.accumulators.DoubleMinimum: void <init>()>();

        virtualinvoke $r3.<org.apache.flink.api.common.accumulators.DoubleMinimum: void add(double)>(3.14159265359);

        r2 = virtualinvoke $r3.<org.apache.flink.api.common.accumulators.DoubleMinimum: org.apache.flink.api.common.accumulators.DoubleMinimum clone()>();

        $r4 = virtualinvoke r2.<org.apache.flink.api.common.accumulators.DoubleMinimum: java.lang.Double getLocalValue()>();

        $d1 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        staticinvoke <org.junit.Assert: void assertEquals(double,double,double)>(3.14159265359, $d1, 0.0);

        return;
    }
}
