public final class org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup extends java.lang.Object implements org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$PreUpgradeSetup
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createPriorSerializer()
    {
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup r0;
        org.apache.flink.api.common.typeutils.TypeSerializer r1;
        org.apache.flink.api.common.typeinfo.TypeInformation $r2;
        org.apache.flink.api.common.ExecutionConfig $r3;
        java.lang.Class $r4;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup;

        $r2 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfo(java.lang.Class)>(class "[C");

        $r3 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r3.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        r1 = virtualinvoke $r2.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r3);

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        staticinvoke <org.junit.Assert: void assertSame(java.lang.Object,java.lang.Object)>($r4, class "Lorg/apache/flink/api/common/typeutils/base/array/CharPrimitiveArraySerializer;");

        return r1;
    }

    public char[] createTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup r0;
        char[] r1;
        int $i0, i2;
        char $c1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup;

        r1 = newarray (char)[10];

        i2 = 0;

     label1:
        $i0 = lengthof r1;

        if i2 >= $i0 goto label2;

        $c1 = (char) i2;

        r1[i2] = $c1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public volatile java.lang.Object createTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup r0;
        char[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.array.PrimitiveArraySerializerUpgradeTestSpecifications$PrimitiveCharArraySetup: char[] createTestData()>();

        return $r1;
    }
}
