public final class org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52 extends java.lang.Object implements java.lang.Thread$UncaughtExceptionHandler
{
    org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory cap0;

    public static java.lang.Thread$UncaughtExceptionHandler bootstrap$(org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory)
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory $r0;
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52 $r1;

        $r0 := @parameter0: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory;

        $r1 = new org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52;

        specialinvoke $r1.<org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52: void <init>(org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory)>($r0);

        return $r1;
    }

    public void <init>(org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory)
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52 $r0;
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory $r1;

        $r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52;

        $r1 := @parameter0: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory cap0> = $r1;

        return;
    }

    public void uncaughtException(java.lang.Thread, java.lang.Throwable)
    {
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52 $r0;
        java.lang.Thread $r1;
        java.lang.Throwable $r2;
        org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory $r3;

        $r0 := @this: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52;

        $r1 := @parameter0: java.lang.Thread;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory$lambda_newThread_0__52: org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory cap0>;

        virtualinvoke $r3.<org.apache.flink.api.connector.source.mocks.MockSplitEnumeratorContext$TestingExecutorThreadFactory: void lambda$newThread$0(java.lang.Thread,java.lang.Throwable)>($r1, $r2);

        return;
    }
}
