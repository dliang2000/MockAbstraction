public class org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo extends org.apache.flink.api.common.typeinfo.TypeInformation
{
    private final org.apache.flink.api.common.typeinfo.TypeInformation innerType;

    public void <init>(org.apache.flink.api.common.typeinfo.TypeInformation)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;
        org.apache.flink.api.common.typeinfo.TypeInformation r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        r1 := @parameter0: org.apache.flink.api.common.typeinfo.TypeInformation;

        specialinvoke r0.<org.apache.flink.api.common.typeinfo.TypeInformation: void <init>()>();

        r0.<org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation innerType> = r1;

        return;
    }

    public org.apache.flink.api.common.typeinfo.TypeInformation getInnerType()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;
        org.apache.flink.api.common.typeinfo.TypeInformation $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        $r1 = r0.<org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation innerType>;

        return $r1;
    }

    public boolean isBasicType()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return 0;
    }

    public boolean isTupleType()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return 0;
    }

    public int getArity()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return 0;
    }

    public int getTotalFields()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return 1;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return null;
    }

    public boolean isKeyType()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return 0;
    }

    public org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;
        org.apache.flink.api.common.ExecutionConfig r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        r1 := @parameter0: org.apache.flink.api.common.ExecutionConfig;

        return null;
    }

    public java.lang.String toString()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return null;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public int hashCode()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        return 0;
    }

    public boolean canEqual(java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;
        java.lang.Object r1;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        r1 := @parameter0: java.lang.Object;

        return 0;
    }

    public java.util.Map getGenericParameters()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo r0;
        java.util.HashMap $r2;
        org.apache.flink.api.common.typeinfo.TypeInformation $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>(int)>(1);

        $r3 = r0.<org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo: org.apache.flink.api.common.typeinfo.TypeInformation innerType>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("T", $r3);

        return $r2;
    }
}
