public class org.apache.flink.configuration.ConfigOptionTest extends org.apache.flink.util.TestLogger
{

    public void <init>()
    {
        org.apache.flink.configuration.ConfigOptionTest r0;

        r0 := @this: org.apache.flink.configuration.ConfigOptionTest;

        specialinvoke r0.<org.apache.flink.util.TestLogger: void <init>()>();

        return;
    }

    public void testDeprecationFlagForDeprecatedKeys()
    {
        org.apache.flink.configuration.ConfigOptionTest r0;
        org.apache.flink.configuration.ConfigOption r1, $r6;
        java.util.Iterator r2;
        org.apache.flink.configuration.FallbackKey r3;
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r4;
        java.lang.Integer $r5;
        java.lang.String[] $r7;
        boolean $z0, $z1, $z2;
        java.lang.Iterable $r8;
        java.lang.Object $r9;

        r0 := @this: org.apache.flink.configuration.ConfigOptionTest;

        $r4 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("key");

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6 = virtualinvoke $r4.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r5);

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "deprecated1";

        $r7[1] = "deprecated2";

        r1 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r7);

        $z0 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: boolean hasFallbackKeys()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r8 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.Iterable fallbackKeys()>();

        r2 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.flink.configuration.FallbackKey) $r9;

        $z2 = virtualinvoke r3.<org.apache.flink.configuration.FallbackKey: boolean isDeprecated()>();

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("deprecated key not flagged as deprecated", $z2);

        goto label1;

     label2:
        return;
    }

    public void testDeprecationFlagForFallbackKeys()
    {
        org.apache.flink.configuration.ConfigOptionTest r0;
        org.apache.flink.configuration.ConfigOption r1, $r6;
        java.util.Iterator r2;
        org.apache.flink.configuration.FallbackKey r3;
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r4;
        java.lang.Integer $r5;
        java.lang.String[] $r7;
        boolean $z0, $z1, $z2;
        java.lang.Iterable $r8;
        java.lang.Object $r9;

        r0 := @this: org.apache.flink.configuration.ConfigOptionTest;

        $r4 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("key");

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r6 = virtualinvoke $r4.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r5);

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "fallback1";

        $r7[1] = "fallback2";

        r1 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withFallbackKeys(java.lang.String[])>($r7);

        $z0 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: boolean hasFallbackKeys()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r8 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.Iterable fallbackKeys()>();

        r2 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.flink.configuration.FallbackKey) $r9;

        $z2 = virtualinvoke r3.<org.apache.flink.configuration.FallbackKey: boolean isDeprecated()>();

        staticinvoke <org.junit.Assert: void assertFalse(java.lang.String,boolean)>("falback key flagged as deprecated", $z2);

        goto label1;

     label2:
        return;
    }

    public void testDeprecationFlagForMixedAlternativeKeys()
    {
        org.apache.flink.configuration.ConfigOptionTest r0;
        org.apache.flink.configuration.ConfigOption r1, $r8, $r10;
        java.util.Iterator r4;
        org.apache.flink.configuration.FallbackKey r5;
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r6;
        java.lang.Integer $r7;
        java.lang.String[] $r9, $r11, $r15, $r17;
        java.util.ArrayList $r12, $r13;
        java.lang.Iterable $r14;
        boolean $z0, $z1;
        int $i0, $i2;
        long $l1, $l3;
        org.hamcrest.Matcher $r16, $r18;
        java.lang.Object $r19;
        java.lang.String $r20, $r21;

        r0 := @this: org.apache.flink.configuration.ConfigOptionTest;

        $r6 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("key");

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r8 = virtualinvoke $r6.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r7);

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "deprecated1";

        $r9[1] = "deprecated2";

        $r10 = virtualinvoke $r8.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r9);

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "fallback1";

        $r11[1] = "fallback2";

        r1 = virtualinvoke $r10.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withFallbackKeys(java.lang.String[])>($r11);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(2);

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>(2);

        $r14 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: java.lang.Iterable fallbackKeys()>();

        r4 = interfaceinvoke $r14.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r19 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.flink.configuration.FallbackKey) $r19;

        $z1 = virtualinvoke r5.<org.apache.flink.configuration.FallbackKey: boolean isDeprecated()>();

        if $z1 == 0 goto label2;

        $r21 = virtualinvoke r5.<org.apache.flink.configuration.FallbackKey: java.lang.String getKey()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label3;

     label2:
        $r20 = virtualinvoke r5.<org.apache.flink.configuration.FallbackKey: java.lang.String getKey()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r20);

     label3:
        goto label1;

     label4:
        $i0 = interfaceinvoke $r12.<java.util.List: int size()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l1);

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>(2L, $l3);

        $r15 = newarray (java.lang.String)[2];

        $r15[0] = "fallback1";

        $r15[1] = "fallback2";

        $r16 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher containsInAnyOrder(java.lang.Object[])>($r15);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r12, $r16);

        $r17 = newarray (java.lang.String)[2];

        $r17[0] = "deprecated1";

        $r17[1] = "deprecated2";

        $r18 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher containsInAnyOrder(java.lang.Object[])>($r17);

        staticinvoke <org.junit.Assert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($r13, $r18);

        return;
    }

    public void testDeprecationForDeprecatedKeys()
    {
        org.apache.flink.configuration.ConfigOptionTest r0;
        org.apache.flink.configuration.ConfigOption r3, $r9, $r10;
        java.lang.String[] $r4, $r11;
        java.util.HashSet $r5, $r13;
        java.util.List $r6;
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r7;
        java.lang.Integer $r8;
        boolean $z0;
        java.lang.Iterable $r12;

        r0 := @this: org.apache.flink.configuration.ConfigOptionTest;

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "deprecated1";

        $r4[1] = "deprecated2";

        $r5 = new java.util.HashSet;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>($r6);

        $r7 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("key");

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r9 = virtualinvoke $r7.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withDeprecatedKeys(java.lang.String[])>($r4);

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = "fallback1";

        r3 = virtualinvoke $r10.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withFallbackKeys(java.lang.String[])>($r11);

        $z0 = virtualinvoke r3.<org.apache.flink.configuration.ConfigOption: boolean hasDeprecatedKeys()>();

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r12 = virtualinvoke r3.<org.apache.flink.configuration.ConfigOption: java.lang.Iterable deprecatedKeys()>();

        $r13 = staticinvoke <org.apache.flink.shaded.guava18.com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Iterable)>($r12);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r13);

        return;
    }

    public void testNoDeprecationForFallbackKeysWithoutDeprecated()
    {
        org.apache.flink.configuration.ConfigOptionTest r0;
        org.apache.flink.configuration.ConfigOption r1, $r4;
        org.apache.flink.configuration.ConfigOptions$OptionBuilder $r2;
        java.lang.Integer $r3;
        java.lang.String[] $r5;
        boolean $z0;

        r0 := @this: org.apache.flink.configuration.ConfigOptionTest;

        $r2 = staticinvoke <org.apache.flink.configuration.ConfigOptions: org.apache.flink.configuration.ConfigOptions$OptionBuilder key(java.lang.String)>("key");

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r4 = virtualinvoke $r2.<org.apache.flink.configuration.ConfigOptions$OptionBuilder: org.apache.flink.configuration.ConfigOption defaultValue(java.lang.Object)>($r3);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "fallback1";

        r1 = virtualinvoke $r4.<org.apache.flink.configuration.ConfigOption: org.apache.flink.configuration.ConfigOption withFallbackKeys(java.lang.String[])>($r5);

        $z0 = virtualinvoke r1.<org.apache.flink.configuration.ConfigOption: boolean hasDeprecatedKeys()>();

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z0);

        return;
    }
}
