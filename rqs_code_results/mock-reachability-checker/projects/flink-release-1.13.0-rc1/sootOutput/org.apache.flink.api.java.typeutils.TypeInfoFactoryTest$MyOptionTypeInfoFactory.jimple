public class org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfoFactory extends org.apache.flink.api.common.typeinfo.TypeInfoFactory
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfoFactory r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfoFactory;

        specialinvoke r0.<org.apache.flink.api.common.typeinfo.TypeInfoFactory: void <init>()>();

        return;
    }

    public org.apache.flink.api.common.typeinfo.TypeInformation createTypeInfo(java.lang.reflect.Type, java.util.Map)
    {
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfoFactory r0;
        java.lang.reflect.Type r1;
        java.util.Map r2;
        org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo $r3;
        java.lang.Object $r4;
        org.apache.flink.api.common.typeinfo.TypeInformation $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfoFactory;

        r1 := @parameter0: java.lang.reflect.Type;

        r2 := @parameter1: java.util.Map;

        $r3 = new org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo;

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("T");

        $r5 = (org.apache.flink.api.common.typeinfo.TypeInformation) $r4;

        specialinvoke $r3.<org.apache.flink.api.java.typeutils.TypeInfoFactoryTest$MyOptionTypeInfo: void <init>(org.apache.flink.api.common.typeinfo.TypeInformation)>($r5);

        return $r3;
    }
}
