public class org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer extends com.esotericsoftware.kryo.Serializer implements java.io.Serializable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer;

        specialinvoke r0.<com.esotericsoftware.kryo.Serializer: void <init>()>();

        return;
    }

    public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer r0;
        com.esotericsoftware.kryo.Kryo r1;
        com.esotericsoftware.kryo.io.Output r2;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord r3;
        byte[] $r4, $r5;
        int $i0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer;

        r1 := @parameter0: com.esotericsoftware.kryo.Kryo;

        r2 := @parameter1: com.esotericsoftware.kryo.io.Output;

        r3 := @parameter2: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord;

        $r4 = staticinvoke <org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord: byte[] access$000(org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord)>(r3);

        $i0 = lengthof $r4;

        virtualinvoke r2.<com.esotericsoftware.kryo.io.Output: void writeInt(int)>($i0);

        $r5 = staticinvoke <org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord: byte[] access$000(org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord)>(r3);

        virtualinvoke r2.<com.esotericsoftware.kryo.io.Output: void write(byte[])>($r5);

        return;
    }

    public org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer r0;
        com.esotericsoftware.kryo.Kryo r1;
        com.esotericsoftware.kryo.io.Input r2;
        java.lang.Class r3;
        int i0;
        byte[] r4;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer;

        r1 := @parameter0: com.esotericsoftware.kryo.Kryo;

        r2 := @parameter1: com.esotericsoftware.kryo.io.Input;

        r3 := @parameter2: java.lang.Class;

        i0 = virtualinvoke r2.<com.esotericsoftware.kryo.io.Input: int readInt()>();

        r4 = virtualinvoke r2.<com.esotericsoftware.kryo.io.Input: byte[] readBytes(int)>(i0);

        $r5 = new org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord;

        specialinvoke $r5.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord: void <init>(byte[])>(r4);

        return $r5;
    }

    public volatile java.lang.Object read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer r0;
        com.esotericsoftware.kryo.Kryo r1;
        com.esotericsoftware.kryo.io.Input r2;
        java.lang.Class r3;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer;

        r1 := @parameter0: com.esotericsoftware.kryo.Kryo;

        r2 := @parameter1: com.esotericsoftware.kryo.io.Input;

        r3 := @parameter2: java.lang.Class;

        $r4 = virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>(r1, r2, r3);

        return $r4;
    }

    public volatile void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.lang.Object)
    {
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer r0;
        com.esotericsoftware.kryo.Kryo r1;
        com.esotericsoftware.kryo.io.Output r2;
        java.lang.Object r3;
        org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer;

        r1 := @parameter0: com.esotericsoftware.kryo.Kryo;

        r2 := @parameter1: com.esotericsoftware.kryo.io.Output;

        r3 := @parameter2: java.lang.Object;

        $r4 = (org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord) r3;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecord)>(r1, r2, $r4);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.runtime.kryo.KryoClearedBufferTest$TestRecordSerializer: long serialVersionUID> = 6971996565421454985L;

        return;
    }
}
