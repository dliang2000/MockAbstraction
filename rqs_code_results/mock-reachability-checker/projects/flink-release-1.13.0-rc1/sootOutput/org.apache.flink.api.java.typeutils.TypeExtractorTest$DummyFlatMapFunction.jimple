public class org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction extends org.apache.flink.api.common.functions.RichFlatMapFunction
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction r0;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction;

        specialinvoke r0.<org.apache.flink.api.common.functions.RichFlatMapFunction: void <init>()>();

        return;
    }

    public void flatMap(org.apache.flink.api.java.tuple.Tuple2, org.apache.flink.util.Collector) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction r0;
        org.apache.flink.api.java.tuple.Tuple2 r1;
        org.apache.flink.util.Collector r2;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction;

        r1 := @parameter0: org.apache.flink.api.java.tuple.Tuple2;

        r2 := @parameter1: org.apache.flink.util.Collector;

        return;
    }

    public volatile void flatMap(java.lang.Object, org.apache.flink.util.Collector) throws java.lang.Exception
    {
        org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction r0;
        java.lang.Object r1;
        org.apache.flink.util.Collector r2;
        org.apache.flink.api.java.tuple.Tuple2 $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.util.Collector;

        $r3 = (org.apache.flink.api.java.tuple.Tuple2) r1;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction: void flatMap(org.apache.flink.api.java.tuple.Tuple2,org.apache.flink.util.Collector)>($r3, r2);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.java.typeutils.TypeExtractorTest$DummyFlatMapFunction: long serialVersionUID> = 1L;

        return;
    }
}
