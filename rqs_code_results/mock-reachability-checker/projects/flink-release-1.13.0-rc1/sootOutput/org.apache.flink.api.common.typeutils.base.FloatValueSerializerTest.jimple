public class org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.FloatValueSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.FloatValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.FloatValueSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest;

        return 4;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest;

        return class "Lorg/apache/flink/types/FloatValue;";
    }

    protected org.apache.flink.types.FloatValue[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest r0;
        float f0, $f1, $f2;
        java.util.Random $r2;
        org.apache.flink.types.FloatValue[] $r3;
        org.apache.flink.types.FloatValue $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412341L);

        $f1 = virtualinvoke $r2.<java.util.Random: float nextFloat()>();

        f0 = $f1 * 3.4028235E38F;

        $r3 = newarray (org.apache.flink.types.FloatValue)[10];

        $r4 = new org.apache.flink.types.FloatValue;

        specialinvoke $r4.<org.apache.flink.types.FloatValue: void <init>(float)>(0.0F);

        $r3[0] = $r4;

        $r5 = new org.apache.flink.types.FloatValue;

        specialinvoke $r5.<org.apache.flink.types.FloatValue: void <init>(float)>(1.0F);

        $r3[1] = $r5;

        $r6 = new org.apache.flink.types.FloatValue;

        specialinvoke $r6.<org.apache.flink.types.FloatValue: void <init>(float)>(-1.0F);

        $r3[2] = $r6;

        $r7 = new org.apache.flink.types.FloatValue;

        specialinvoke $r7.<org.apache.flink.types.FloatValue: void <init>(float)>(3.4028235E38F);

        $r3[3] = $r7;

        $r8 = new org.apache.flink.types.FloatValue;

        specialinvoke $r8.<org.apache.flink.types.FloatValue: void <init>(float)>(1.4E-45F);

        $r3[4] = $r8;

        $r9 = new org.apache.flink.types.FloatValue;

        specialinvoke $r9.<org.apache.flink.types.FloatValue: void <init>(float)>(f0);

        $r3[5] = $r9;

        $r10 = new org.apache.flink.types.FloatValue;

        $f2 = neg f0;

        specialinvoke $r10.<org.apache.flink.types.FloatValue: void <init>(float)>($f2);

        $r3[6] = $r10;

        $r11 = new org.apache.flink.types.FloatValue;

        specialinvoke $r11.<org.apache.flink.types.FloatValue: void <init>(float)>(#NaNF);

        $r3[7] = $r11;

        $r12 = new org.apache.flink.types.FloatValue;

        specialinvoke $r12.<org.apache.flink.types.FloatValue: void <init>(float)>(#-InfinityF);

        $r3[8] = $r12;

        $r13 = new org.apache.flink.types.FloatValue;

        specialinvoke $r13.<org.apache.flink.types.FloatValue: void <init>(float)>(#InfinityF);

        $r3[9] = $r13;

        return $r3;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest r0;
        org.apache.flink.types.FloatValue[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.FloatValueSerializerTest: org.apache.flink.types.FloatValue[] getTestData()>();

        return $r1;
    }
}
