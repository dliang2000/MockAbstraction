public class org.apache.flink.util.PropertiesUtilTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.util.PropertiesUtilTest r0;

        r0 := @this: org.apache.flink.util.PropertiesUtilTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testFlatten()
    {
        org.apache.flink.util.PropertiesUtilTest r0;
        java.util.Properties r4, $r5, $r7, $r9;
        java.lang.Object $r11, $r12, $r13;

        r0 := @this: org.apache.flink.util.PropertiesUtilTest;

        $r5 = new java.util.Properties;

        specialinvoke $r5.<java.util.Properties: void <init>()>();

        virtualinvoke $r5.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("key1", "value1");

        $r7 = new java.util.Properties;

        specialinvoke $r7.<java.util.Properties: void <init>(java.util.Properties)>($r5);

        virtualinvoke $r7.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("key2", "value2");

        $r9 = new java.util.Properties;

        specialinvoke $r9.<java.util.Properties: void <init>(java.util.Properties)>($r7);

        virtualinvoke $r9.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("key3", "value3");

        r4 = staticinvoke <org.apache.flink.util.PropertiesUtil: java.util.Properties flatten(java.util.Properties)>($r9);

        $r11 = virtualinvoke r4.<java.util.Properties: java.lang.Object get(java.lang.Object)>("key1");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, "value1");

        $r12 = virtualinvoke r4.<java.util.Properties: java.lang.Object get(java.lang.Object)>("key2");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r12, "value2");

        $r13 = virtualinvoke r4.<java.util.Properties: java.lang.Object get(java.lang.Object)>("key3");

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r13, "value3");

        return;
    }
}
