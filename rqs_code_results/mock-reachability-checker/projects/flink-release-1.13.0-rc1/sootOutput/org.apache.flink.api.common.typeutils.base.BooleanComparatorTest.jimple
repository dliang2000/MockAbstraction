public class org.apache.flink.api.common.typeutils.base.BooleanComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.BooleanComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.BooleanComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.BooleanComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.BooleanComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BooleanComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.BooleanComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.BooleanSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.BooleanSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BooleanSerializer: void <init>()>();

        return $r1;
    }

    protected java.lang.Boolean[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.BooleanComparatorTest r0;
        java.lang.Boolean[] $r1;
        java.lang.Boolean $r2, $r3;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanComparatorTest;

        $r1 = newarray (java.lang.Boolean)[2];

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r1[1] = $r3;

        return $r1;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.BooleanComparatorTest r0;
        java.lang.Boolean[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BooleanComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BooleanComparatorTest: java.lang.Boolean[] getSortedTestData()>();

        return $r1;
    }
}
