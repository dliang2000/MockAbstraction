public class org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.ShortValueComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.ShortValueComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.ShortValueComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.ShortValueSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.ShortValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.ShortValueSerializer: void <init>()>();

        return $r1;
    }

    protected org.apache.flink.types.ShortValue[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest r0;
        java.util.Random $r2;
        int $i0, $i8, $i9;
        java.lang.Integer $r3, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.apache.flink.types.ShortValue[] $r4;
        org.apache.flink.types.ShortValue $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r18;
        short $s1, $s2, $s3, $s4, $s5, $s6, $s7, $s10, s11;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412338L);

        $i0 = virtualinvoke $r2.<java.util.Random: int nextInt()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        s11 = virtualinvoke $r3.<java.lang.Integer: short shortValue()>();

        if s11 >= 0 goto label1;

        $s10 = neg s11;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($s10);

        s11 = virtualinvoke $r19.<java.lang.Integer: short shortValue()>();

     label1:
        if s11 != 32767 goto label2;

        $i9 = s11 - 3;

        s11 = (short) $i9;

     label2:
        if s11 > 2 goto label3;

        $i8 = s11 + 3;

        s11 = (short) $i8;

     label3:
        $r4 = newarray (org.apache.flink.types.ShortValue)[8];

        $r5 = new org.apache.flink.types.ShortValue;

        specialinvoke $r5.<org.apache.flink.types.ShortValue: void <init>(short)>(-32768);

        $r4[0] = $r5;

        $r6 = new org.apache.flink.types.ShortValue;

        $s1 = neg s11;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($s1);

        $s2 = virtualinvoke $r7.<java.lang.Integer: short shortValue()>();

        specialinvoke $r6.<org.apache.flink.types.ShortValue: void <init>(short)>($s2);

        $r4[1] = $r6;

        $r8 = new org.apache.flink.types.ShortValue;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $s3 = virtualinvoke $r9.<java.lang.Integer: short shortValue()>();

        specialinvoke $r8.<org.apache.flink.types.ShortValue: void <init>(short)>($s3);

        $r4[2] = $r8;

        $r10 = new org.apache.flink.types.ShortValue;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $s4 = virtualinvoke $r11.<java.lang.Integer: short shortValue()>();

        specialinvoke $r10.<org.apache.flink.types.ShortValue: void <init>(short)>($s4);

        $r4[3] = $r10;

        $r12 = new org.apache.flink.types.ShortValue;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $s5 = virtualinvoke $r13.<java.lang.Integer: short shortValue()>();

        specialinvoke $r12.<org.apache.flink.types.ShortValue: void <init>(short)>($s5);

        $r4[4] = $r12;

        $r14 = new org.apache.flink.types.ShortValue;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $s6 = virtualinvoke $r15.<java.lang.Integer: short shortValue()>();

        specialinvoke $r14.<org.apache.flink.types.ShortValue: void <init>(short)>($s6);

        $r4[5] = $r14;

        $r16 = new org.apache.flink.types.ShortValue;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(s11);

        $s7 = virtualinvoke $r17.<java.lang.Integer: short shortValue()>();

        specialinvoke $r16.<org.apache.flink.types.ShortValue: void <init>(short)>($s7);

        $r4[6] = $r16;

        $r18 = new org.apache.flink.types.ShortValue;

        specialinvoke $r18.<org.apache.flink.types.ShortValue: void <init>(short)>(32767);

        $r4[7] = $r18;

        return $r4;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest r0;
        org.apache.flink.types.ShortValue[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.ShortValueComparatorTest: org.apache.flink.types.ShortValue[] getSortedTestData()>();

        return $r1;
    }
}
