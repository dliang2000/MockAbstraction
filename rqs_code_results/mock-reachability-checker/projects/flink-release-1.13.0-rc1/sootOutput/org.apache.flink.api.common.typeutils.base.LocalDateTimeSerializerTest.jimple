public class org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest r0;
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializer: void <init>()>();

        return $r1;
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest;

        return 13;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest;

        return class "Ljava/time/LocalDateTime;";
    }

    protected java.time.LocalDateTime[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest r0;
        java.time.LocalDateTime[] $r1;
        java.time.LocalDateTime $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest;

        $r1 = newarray (java.time.LocalDateTime)[7];

        $r2 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(1970, 1, 1, 0, 0, 0, 0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(1990, 10, 14, 2, 42, 25, 123000000);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(1990, 10, 14, 2, 42, 25, 123000001);

        $r1[2] = $r4;

        $r5 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(1990, 10, 14, 2, 42, 25, 123000002);

        $r1[3] = $r5;

        $r6 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(2013, 8, 12, 14, 15, 59, 478000000);

        $r1[4] = $r6;

        $r7 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(2013, 8, 12, 14, 15, 59, 479000000);

        $r1[5] = $r7;

        $r8 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime of(int,int,int,int,int,int,int)>(2040, 5, 12, 18, 0, 45, 999000000);

        $r1[6] = $r8;

        return $r1;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest r0;
        java.time.LocalDateTime[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.LocalDateTimeSerializerTest: java.time.LocalDateTime[] getTestData()>();

        return $r1;
    }
}
