class org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable extends java.lang.Object implements java.io.Closeable
{
    private final java.util.concurrent.CountDownLatch closeCalledLatch;
    private final java.util.concurrent.CountDownLatch blockCloseLatch;

    private void <init>()
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable r0;
        java.util.concurrent.CountDownLatch $r1, $r2;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable: java.util.concurrent.CountDownLatch closeCalledLatch> = $r1;

        $r2 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable: java.util.concurrent.CountDownLatch blockCloseLatch> = $r2;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable r0;
        java.util.concurrent.CountDownLatch $r2, $r3;
        java.lang.InterruptedException $r4;
        java.lang.Thread $r5;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable;

        $r2 = r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable: java.util.concurrent.CountDownLatch closeCalledLatch>;

        virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();

     label1:
        $r3 = r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable: java.util.concurrent.CountDownLatch blockCloseLatch>;

        virtualinvoke $r3.<java.util.concurrent.CountDownLatch: void await()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r5.<java.lang.Thread: void interrupt()>();

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void unblockClose()
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable r0;
        java.util.concurrent.CountDownLatch $r1;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable;

        $r1 = r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable: java.util.concurrent.CountDownLatch blockCloseLatch>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        return;
    }

    public void awaitClose(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        java.util.concurrent.CountDownLatch $r2;
        boolean $z0;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable: java.util.concurrent.CountDownLatch closeCalledLatch>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(l0, r1);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        return;
    }

    void <init>(org.apache.flink.core.fs.AbstractCloseableRegistryTest$1)
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable r0;
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$1 r1;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable;

        r1 := @parameter0: org.apache.flink.core.fs.AbstractCloseableRegistryTest$1;

        specialinvoke r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$BlockingTestCloseable: void <init>()>();

        return;
    }
}
