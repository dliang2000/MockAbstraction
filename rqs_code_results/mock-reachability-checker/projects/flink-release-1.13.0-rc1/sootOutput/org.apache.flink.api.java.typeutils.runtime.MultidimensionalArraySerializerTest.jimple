public class org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testStringArray()
    {
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest r0;
        org.apache.flink.api.common.typeinfo.TypeInformation r2;
        java.lang.String[][] $r4;
        java.lang.String[] $r5, $r6, $r7, $r8;
        org.apache.flink.api.common.typeutils.SerializerTestInstance $r9;
        org.apache.flink.api.common.ExecutionConfig $r10;
        org.apache.flink.api.common.typeutils.TypeSerializer $r11;
        java.lang.String[][][] $r12;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest;

        $r4 = newarray (java.lang.String[])[5];

        $r5 = newarray (java.lang.String)[2];

        $r5[0] = null;

        $r5[1] = "b";

        $r4[0] = $r5;

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "c";

        $r6[1] = "d";

        $r4[1] = $r6;

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "e";

        $r7[1] = "f";

        $r4[2] = $r7;

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "g";

        $r8[1] = "h";

        $r4[3] = $r8;

        $r4[4] = null;

        r2 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation getForClass(java.lang.Class)>(class "[[Ljava/lang/String;");

        $r9 = new org.apache.flink.api.common.typeutils.SerializerTestInstance;

        $r10 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r10.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r11 = virtualinvoke r2.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r10);

        $r12 = newarray (java.lang.String[][])[1];

        $r12[0] = $r4;

        specialinvoke $r9.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class,int,java.lang.Object[])>($r11, class "[[Ljava/lang/String;", -1, $r12);

        virtualinvoke $r9.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void testAll()>();

        return;
    }

    public void testPrimitiveArray()
    {
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest r0;
        org.apache.flink.api.common.typeinfo.TypeInformation r2;
        int[][] $r4;
        int[] $r5, $r6, $r7, $r8, $r9;
        org.apache.flink.api.common.typeutils.SerializerTestInstance $r10;
        org.apache.flink.api.common.ExecutionConfig $r11;
        org.apache.flink.api.common.typeutils.TypeSerializer $r12;
        int[][][] $r13;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest;

        $r4 = newarray (int[])[5];

        $r5 = newarray (int)[2];

        $r5[0] = 12;

        $r5[1] = 1;

        $r4[0] = $r5;

        $r6 = newarray (int)[2];

        $r6[0] = 48;

        $r6[1] = 42;

        $r4[1] = $r6;

        $r7 = newarray (int)[2];

        $r7[0] = 23;

        $r7[1] = 80;

        $r4[2] = $r7;

        $r8 = newarray (int)[2];

        $r8[0] = 484;

        $r8[1] = 849;

        $r4[3] = $r8;

        $r9 = newarray (int)[2];

        $r9[0] = 987;

        $r9[1] = 4;

        $r4[4] = $r9;

        r2 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation getForClass(java.lang.Class)>(class "[[I");

        $r10 = new org.apache.flink.api.common.typeutils.SerializerTestInstance;

        $r11 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r11.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r12 = virtualinvoke r2.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r11);

        $r13 = newarray (int[][])[1];

        $r13[0] = $r4;

        specialinvoke $r10.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class,int,java.lang.Object[])>($r12, class "[[I", -1, $r13);

        virtualinvoke $r10.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void testAll()>();

        return;
    }

    public void testObjectArrays()
    {
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest r0;
        org.apache.flink.api.common.typeinfo.TypeInformation r2, r5;
        java.lang.Integer[][] $r7;
        java.lang.Integer[] $r8, $r11;
        java.lang.Integer $r9, $r10, $r12;
        org.apache.flink.api.common.typeutils.SerializerTestInstance $r13, $r22;
        org.apache.flink.api.common.ExecutionConfig $r14, $r23;
        org.apache.flink.api.common.typeutils.TypeSerializer $r15, $r24;
        java.lang.Integer[][][] $r16;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo[][] $r17;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo[] $r18, $r21;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo $r19, $r20;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo[][][] $r25;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest;

        $r7 = newarray (java.lang.Integer[])[3];

        $r8 = newarray (java.lang.Integer)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r8[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r8[1] = $r10;

        $r7[0] = $r8;

        $r7[1] = null;

        $r11 = newarray (java.lang.Integer)[2];

        $r11[0] = null;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(42);

        $r11[1] = $r12;

        $r7[2] = $r11;

        r2 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation getForClass(java.lang.Class)>(class "[[Ljava/lang/Integer;");

        $r13 = new org.apache.flink.api.common.typeutils.SerializerTestInstance;

        $r14 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r14.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r15 = virtualinvoke r2.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r14);

        $r16 = newarray (java.lang.Integer[][])[1];

        $r16[0] = $r7;

        specialinvoke $r13.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class,int,java.lang.Object[])>($r15, class "[[Ljava/lang/Integer;", -1, $r16);

        virtualinvoke $r13.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void testAll()>();

        $r17 = newarray (org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo[])[3];

        $r18 = newarray (org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo)[2];

        $r19 = new org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo;

        specialinvoke $r19.<org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo: void <init>(java.lang.String,int)>(null, 42);

        $r18[0] = $r19;

        $r20 = new org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo;

        specialinvoke $r20.<org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo: void <init>(java.lang.String,int)>("test2", -1);

        $r18[1] = $r20;

        $r17[0] = $r18;

        $r21 = newarray (org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo)[2];

        $r21[0] = null;

        $r21[1] = null;

        $r17[1] = $r21;

        $r17[2] = null;

        r5 = staticinvoke <org.apache.flink.api.java.typeutils.TypeExtractor: org.apache.flink.api.common.typeinfo.TypeInformation getForClass(java.lang.Class)>(class "[[Lorg/apache/flink/api/java/typeutils/runtime/MultidimensionalArraySerializerTest$MyPojo;");

        $r22 = new org.apache.flink.api.common.typeutils.SerializerTestInstance;

        $r23 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r23.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r24 = virtualinvoke r5.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r23);

        $r25 = newarray (org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyPojo[][])[1];

        $r25[0] = $r17;

        specialinvoke $r22.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class,int,java.lang.Object[])>($r24, class "[[Lorg/apache/flink/api/java/typeutils/runtime/MultidimensionalArraySerializerTest$MyPojo;", -1, $r25);

        virtualinvoke $r22.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void testAll()>();

        return;
    }

    public void testGenericObjectArrays()
    {
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest r0;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo[][] r1, $r4;
        org.apache.flink.api.common.typeinfo.TypeInformation r2;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo[] $r5;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo $r6;
        java.lang.String[][] $r7;
        java.lang.String[] $r8, $r9;
        org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$1 $r10;
        org.apache.flink.api.common.typeutils.SerializerTestInstance $r11;
        org.apache.flink.api.common.ExecutionConfig $r12;
        org.apache.flink.api.common.typeutils.TypeSerializer $r13;
        java.lang.Object[] $r14;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest;

        $r4 = newarray (org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo[])[1];

        $r5 = newarray (org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo)[2];

        $r6 = new org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo;

        $r7 = newarray (java.lang.String[])[2];

        $r8 = newarray (java.lang.String)[2];

        $r8[0] = "a";

        $r8[1] = "b";

        $r7[0] = $r8;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "c";

        $r9[1] = "d";

        $r7[1] = $r9;

        specialinvoke $r6.<org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo: void <init>(java.lang.Object[][])>($r7);

        $r5[0] = $r6;

        $r5[1] = null;

        $r4[0] = $r5;

        r1 = (org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$MyGenericPojo[][]) $r4;

        $r10 = new org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$1;

        specialinvoke $r10.<org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest$1: void <init>(org.apache.flink.api.java.typeutils.runtime.MultidimensionalArraySerializerTest)>(r0);

        r2 = staticinvoke <org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeinfo.TypeInformation of(org.apache.flink.api.common.typeinfo.TypeHint)>($r10);

        $r11 = new org.apache.flink.api.common.typeutils.SerializerTestInstance;

        $r12 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r12.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r13 = virtualinvoke r2.<org.apache.flink.api.common.typeinfo.TypeInformation: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(org.apache.flink.api.common.ExecutionConfig)>($r12);

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r1;

        specialinvoke $r11.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void <init>(org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class,int,java.lang.Object[])>($r13, class "[[Lorg/apache/flink/api/java/typeutils/runtime/MultidimensionalArraySerializerTest$MyGenericPojo;", -1, $r14);

        virtualinvoke $r11.<org.apache.flink.api.common.typeutils.SerializerTestInstance: void testAll()>();

        return;
    }
}
