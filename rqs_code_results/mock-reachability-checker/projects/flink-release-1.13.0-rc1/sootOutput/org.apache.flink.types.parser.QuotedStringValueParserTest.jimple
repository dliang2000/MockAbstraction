public class org.apache.flink.types.parser.QuotedStringValueParserTest extends org.apache.flink.types.parser.ParserTestBase
{

    public void <init>()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        specialinvoke r0.<org.apache.flink.types.parser.ParserTestBase: void <init>()>();

        return;
    }

    public java.lang.String[] getValidTestValues()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        $r1 = newarray (java.lang.String)[12];

        $r1[0] = "\\\"Hello \\\"World\\\"";

        $r1[1] = "\"abcdefgh\"";

        $r1[2] = "\"i\"";

        $r1[3] = "\"jklmno\"";

        $r1[4] = "\"abc|de|fgh\"";

        $r1[5] = "\"abc&&&&def&&&&ghij\"";

        $r1[6] = "\"i\"";

        $r1[7] = "\"Hello9\"";

        $r1[8] = "abcdefgh";

        $r1[9] = "i";

        $r1[10] = "jklmno";

        $r1[11] = "Hello9";

        return $r1;
    }

    public org.apache.flink.types.StringValue[] getValidTestResults()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;
        org.apache.flink.types.StringValue[] $r1;
        org.apache.flink.types.StringValue $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        $r1 = newarray (org.apache.flink.types.StringValue)[12];

        $r2 = new org.apache.flink.types.StringValue;

        specialinvoke $r2.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("\\\"Hello \\\"World\\\"");

        $r1[0] = $r2;

        $r3 = new org.apache.flink.types.StringValue;

        specialinvoke $r3.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("abcdefgh");

        $r1[1] = $r3;

        $r4 = new org.apache.flink.types.StringValue;

        specialinvoke $r4.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("i");

        $r1[2] = $r4;

        $r5 = new org.apache.flink.types.StringValue;

        specialinvoke $r5.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("jklmno");

        $r1[3] = $r5;

        $r6 = new org.apache.flink.types.StringValue;

        specialinvoke $r6.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("abc|de|fgh");

        $r1[4] = $r6;

        $r7 = new org.apache.flink.types.StringValue;

        specialinvoke $r7.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("abc&&&&def&&&&ghij");

        $r1[5] = $r7;

        $r8 = new org.apache.flink.types.StringValue;

        specialinvoke $r8.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("i");

        $r1[6] = $r8;

        $r9 = new org.apache.flink.types.StringValue;

        specialinvoke $r9.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("Hello9");

        $r1[7] = $r9;

        $r10 = new org.apache.flink.types.StringValue;

        specialinvoke $r10.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("abcdefgh");

        $r1[8] = $r10;

        $r11 = new org.apache.flink.types.StringValue;

        specialinvoke $r11.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("i");

        $r1[9] = $r11;

        $r12 = new org.apache.flink.types.StringValue;

        specialinvoke $r12.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("jklmno");

        $r1[10] = $r12;

        $r13 = new org.apache.flink.types.StringValue;

        specialinvoke $r13.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("Hello9");

        $r1[11] = $r13;

        return $r1;
    }

    public java.lang.String[] getInvalidTestValues()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;
        java.lang.String[] $r1;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "\"abcd\"ef";

        $r1[1] = "\"abcdef";

        return $r1;
    }

    public boolean allowsEmptyField()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        return 1;
    }

    public org.apache.flink.types.parser.FieldParser getParser()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;
        org.apache.flink.types.parser.StringValueParser $r2;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        $r2 = new org.apache.flink.types.parser.StringValueParser;

        specialinvoke $r2.<org.apache.flink.types.parser.StringValueParser: void <init>()>();

        virtualinvoke $r2.<org.apache.flink.types.parser.StringValueParser: void enableQuotedStringParsing(byte)>(34);

        return $r2;
    }

    public java.lang.Class getTypeClass()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        return class "Lorg/apache/flink/types/StringValue;";
    }

    public volatile java.lang.Object[] getValidTestResults()
    {
        org.apache.flink.types.parser.QuotedStringValueParserTest r0;
        org.apache.flink.types.StringValue[] $r1;

        r0 := @this: org.apache.flink.types.parser.QuotedStringValueParserTest;

        $r1 = virtualinvoke r0.<org.apache.flink.types.parser.QuotedStringValueParserTest: org.apache.flink.types.StringValue[] getValidTestResults()>();

        return $r1;
    }
}
