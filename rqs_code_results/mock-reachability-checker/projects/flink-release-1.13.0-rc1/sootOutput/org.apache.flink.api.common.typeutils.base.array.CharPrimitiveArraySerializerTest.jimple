public class org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest extends org.apache.flink.api.common.typeutils.SerializerTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.SerializerTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest r0;
        org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializer: void <init>()>();

        return $r1;
    }

    protected java.lang.Class getTypeClass()
    {
        org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest;

        return class "[C";
    }

    protected int getLength()
    {
        org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest;

        return -1;
    }

    protected char[][] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest r0;
        char[][] $r1;
        char[] $r2, $r3, $r4;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest;

        $r1 = newarray (char[])[3];

        $r2 = newarray (char)[11];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 2;

        $r2[3] = 3;

        $r2[4] = 10;

        $r2[5] = 9;

        $r2[6] = 97;

        $r2[7] = 98;

        $r2[8] = 99;

        $r2[9] = 65535;

        $r2[10] = 0;

        $r1[0] = $r2;

        $r3 = newarray (char)[0];

        $r1[1] = $r3;

        $r4 = newarray (char)[7];

        $r4[0] = 100;

        $r4[1] = 200;

        $r4[2] = 315;

        $r4[3] = 0;

        $r4[4] = 17;

        $r4[5] = 0;

        $r4[6] = 0;

        $r1[2] = $r4;

        return $r1;
    }

    protected volatile java.lang.Object[] getTestData()
    {
        org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest r0;
        char[][] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.array.CharPrimitiveArraySerializerTest: char[][] getTestData()>();

        return $r1;
    }
}
