class org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable extends java.lang.Object implements java.io.Closeable
{
    private final java.util.concurrent.atomic.AtomicBoolean closed;

    private void <init>()
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();

        r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable: java.util.concurrent.atomic.AtomicBoolean closed> = $r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable;

        $r1 = r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable: java.util.concurrent.atomic.AtomicBoolean closed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        staticinvoke <org.junit.Assert: void assertTrue(java.lang.String,boolean)>("TestCloseable was already closed", $z0);

        return;
    }

    public boolean isClosed()
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable r0;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        boolean $z0;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable;

        $r1 = r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable: java.util.concurrent.atomic.AtomicBoolean closed>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    void <init>(org.apache.flink.core.fs.AbstractCloseableRegistryTest$1)
    {
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable r0;
        org.apache.flink.core.fs.AbstractCloseableRegistryTest$1 r1;

        r0 := @this: org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable;

        r1 := @parameter0: org.apache.flink.core.fs.AbstractCloseableRegistryTest$1;

        specialinvoke r0.<org.apache.flink.core.fs.AbstractCloseableRegistryTest$TestCloseable: void <init>()>();

        return;
    }
}
