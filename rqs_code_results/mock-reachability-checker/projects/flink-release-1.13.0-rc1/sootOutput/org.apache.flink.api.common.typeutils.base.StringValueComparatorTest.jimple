public class org.apache.flink.api.common.typeutils.base.StringValueComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.StringValueComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.StringValueComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.StringValueComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.StringValueComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.StringValueComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.StringValueComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.StringValueComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.StringValueComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.StringValueSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.StringValueComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.StringValueSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.StringValueSerializer: void <init>()>();

        return $r1;
    }

    protected org.apache.flink.types.StringValue[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.StringValueComparatorTest r0;
        org.apache.flink.types.StringValue[] $r1;
        org.apache.flink.types.StringValue $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: org.apache.flink.api.common.typeutils.base.StringValueComparatorTest;

        $r1 = newarray (org.apache.flink.types.StringValue)[8];

        $r2 = new org.apache.flink.types.StringValue;

        specialinvoke $r2.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("");

        $r1[0] = $r2;

        $r3 = new org.apache.flink.types.StringValue;

        specialinvoke $r3.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("Lorem Ipsum Dolor Omit Longer");

        $r1[1] = $r3;

        $r4 = new org.apache.flink.types.StringValue;

        specialinvoke $r4.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("aaaa");

        $r1[2] = $r4;

        $r5 = new org.apache.flink.types.StringValue;

        specialinvoke $r5.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("abcd");

        $r1[3] = $r5;

        $r6 = new org.apache.flink.types.StringValue;

        specialinvoke $r6.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("abce");

        $r1[4] = $r6;

        $r7 = new org.apache.flink.types.StringValue;

        specialinvoke $r7.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("abdd");

        $r1[5] = $r7;

        $r8 = new org.apache.flink.types.StringValue;

        specialinvoke $r8.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("accd");

        $r1[6] = $r8;

        $r9 = new org.apache.flink.types.StringValue;

        specialinvoke $r9.<org.apache.flink.types.StringValue: void <init>(java.lang.CharSequence)>("bbcd");

        $r1[7] = $r9;

        return $r1;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.StringValueComparatorTest r0;
        org.apache.flink.types.StringValue[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.StringValueComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.StringValueComparatorTest: org.apache.flink.types.StringValue[] getSortedTestData()>();

        return $r1;
    }
}
