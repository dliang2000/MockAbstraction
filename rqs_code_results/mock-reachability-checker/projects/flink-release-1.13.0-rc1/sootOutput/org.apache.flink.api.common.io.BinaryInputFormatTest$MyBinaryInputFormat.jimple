final class org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat extends org.apache.flink.api.common.io.BinaryInputFormat
{
    private static final long serialVersionUID;

    private void <init>()
    {
        org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat r0;

        r0 := @this: org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat;

        specialinvoke r0.<org.apache.flink.api.common.io.BinaryInputFormat: void <init>()>();

        return;
    }

    protected org.apache.flink.types.Record deserialize(org.apache.flink.types.Record, org.apache.flink.core.memory.DataInputView)
    {
        org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat r0;
        org.apache.flink.types.Record r1;
        org.apache.flink.core.memory.DataInputView r2;

        r0 := @this: org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat;

        r1 := @parameter0: org.apache.flink.types.Record;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        return r1;
    }

    public boolean supportsMultiPaths()
    {
        org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat r0;

        r0 := @this: org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat;

        return 1;
    }

    protected volatile java.lang.Object deserialize(java.lang.Object, org.apache.flink.core.memory.DataInputView) throws java.io.IOException
    {
        org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat r0;
        java.lang.Object r1;
        org.apache.flink.core.memory.DataInputView r2;
        org.apache.flink.types.Record $r3, $r4;

        r0 := @this: org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.flink.core.memory.DataInputView;

        $r3 = (org.apache.flink.types.Record) r1;

        $r4 = virtualinvoke r0.<org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat: org.apache.flink.types.Record deserialize(org.apache.flink.types.Record,org.apache.flink.core.memory.DataInputView)>($r3, r2);

        return $r4;
    }

    void <init>(org.apache.flink.api.common.io.BinaryInputFormatTest$1)
    {
        org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat r0;
        org.apache.flink.api.common.io.BinaryInputFormatTest$1 r1;

        r0 := @this: org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat;

        r1 := @parameter0: org.apache.flink.api.common.io.BinaryInputFormatTest$1;

        specialinvoke r0.<org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.flink.api.common.io.BinaryInputFormatTest$MyBinaryInputFormat: long serialVersionUID> = 1L;

        return;
    }
}
