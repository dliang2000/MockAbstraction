public class org.apache.flink.api.common.typeutils.base.InstantComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.InstantComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.InstantComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.InstantComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.InstantComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.InstantComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.InstantComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.InstantComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.InstantComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.InstantSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.InstantComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.InstantSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.InstantSerializer: void <init>()>();

        return $r1;
    }

    protected java.time.Instant[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.InstantComparatorTest r0;
        java.time.Instant[] $r1;
        java.time.Instant $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.flink.api.common.typeutils.base.InstantComparatorTest;

        $r1 = newarray (java.time.Instant)[9];

        $r2 = <java.time.Instant: java.time.Instant EPOCH>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>("1970-01-01T00:00:00.001Z");

        $r1[1] = $r3;

        $r4 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>("1990-10-14T02:42:25.123Z");

        $r1[2] = $r4;

        $r5 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>("1990-10-14T02:42:25.123000001Z");

        $r1[3] = $r5;

        $r6 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>("1990-10-14T02:42:25.123000002Z");

        $r1[4] = $r6;

        $r7 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>("2013-08-12T14:15:59.478Z");

        $r1[5] = $r7;

        $r8 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>("2013-08-12T14:15:59.479Z");

        $r1[6] = $r8;

        $r9 = staticinvoke <java.time.Instant: java.time.Instant parse(java.lang.CharSequence)>("2040-05-12T18:00:45.999Z");

        $r1[7] = $r9;

        $r10 = <java.time.Instant: java.time.Instant MAX>;

        $r1[8] = $r10;

        return $r1;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.InstantComparatorTest r0;
        java.time.Instant[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.InstantComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.InstantComparatorTest: java.time.Instant[] getSortedTestData()>();

        return $r1;
    }
}
