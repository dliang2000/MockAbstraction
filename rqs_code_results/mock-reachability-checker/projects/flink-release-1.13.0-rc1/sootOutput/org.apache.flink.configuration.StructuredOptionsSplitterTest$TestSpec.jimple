class org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec extends java.lang.Object
{
    private final java.lang.String string;
    private final char delimiter;
    private java.lang.String expectedException;
    private java.util.List expectedSplits;

    private void <init>(java.lang.String, char)
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.lang.String r1;
        char c0;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        r1 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.lang.String expectedException> = null;

        r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.util.List expectedSplits> = null;

        r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.lang.String string> = r1;

        r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: char delimiter> = c0;

        return;
    }

    public static org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec split(java.lang.String, char)
    {
        java.lang.String r0;
        char c0;
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec $r1;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $r1 = new org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        specialinvoke $r1.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: void <init>(java.lang.String,char)>(r0, c0);

        return $r1;
    }

    public transient org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec expect(java.lang.String[])
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.lang.String[] r1;
        java.util.List $r2;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        r1 := @parameter0: java.lang.String[];

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.util.List expectedSplits> = $r2;

        return r0;
    }

    public org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec expectException(java.lang.String)
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.lang.String r1;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.lang.String expectedException> = r1;

        return r0;
    }

    public java.lang.String getString()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.lang.String $r1;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        $r1 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.lang.String string>;

        return $r1;
    }

    public char getDelimiter()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        char $c0;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        $c0 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: char delimiter>;

        return $c0;
    }

    public java.util.Optional getExpectedException()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.lang.String $r1;
        java.util.Optional $r2;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        $r1 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.lang.String expectedException>;

        $r2 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($r1);

        return $r2;
    }

    public java.util.List getExpectedSplits()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.util.List $r1;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        $r1 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.util.List expectedSplits>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, $r9;
        char $c0;
        java.lang.Character $r3;
        java.util.Optional $r4, $r6;
        java.util.function.Function $r5;
        java.util.function.Supplier $r7;
        java.lang.Object $r8;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        $r1 = newarray (java.lang.Object)[3];

        $r2 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.lang.String string>;

        $r1[0] = $r2;

        $c0 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: char delimiter>;

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r1[1] = $r3;

        $r4 = virtualinvoke r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.util.Optional getExpectedException()>();

        $r5 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec$lambda_toString_0__6: java.util.function.Function bootstrap$()>();

        $r6 = virtualinvoke $r4.<java.util.Optional: java.util.Optional map(java.util.function.Function)>($r5);

        $r7 = staticinvoke <org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec$lambda_toString_1__7: java.util.function.Supplier bootstrap$(org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec)>(r0);

        $r8 = virtualinvoke $r6.<java.util.Optional: java.lang.Object orElseGet(java.util.function.Supplier)>($r7);

        $r1[2] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("str = [ %s ], del = \'%s\', expected = %s", $r1);

        return $r9;
    }

    public java.lang.String lambda$toString$1()
    {
        org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec r0;
        java.util.List $r1;
        java.util.stream.Stream $r2;
        java.util.stream.Collector $r3;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec;

        $r1 = r0.<org.apache.flink.configuration.StructuredOptionsSplitterTest$TestSpec: java.util.List expectedSplits>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.stream.Stream stream()>();

        $r3 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>("], [", "[", "]");

        $r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public static java.lang.String lambda$toString$0(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.lang.Object[] $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r0;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Exception(%s)", $r1);

        return $r2;
    }
}
