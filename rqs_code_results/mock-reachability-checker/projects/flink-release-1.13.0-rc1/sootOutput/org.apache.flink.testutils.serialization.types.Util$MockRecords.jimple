public abstract class org.apache.flink.testutils.serialization.types.Util$MockRecords extends java.lang.Object implements java.lang.Iterable
{
    private int numRecords;

    public void <init>(int)
    {
        org.apache.flink.testutils.serialization.types.Util$MockRecords r0;
        int i0;

        r0 := @this: org.apache.flink.testutils.serialization.types.Util$MockRecords;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.flink.testutils.serialization.types.Util$MockRecords: int numRecords> = i0;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.flink.testutils.serialization.types.Util$MockRecords r0;
        org.apache.flink.testutils.serialization.types.Util$MockRecords$1 $r1;

        r0 := @this: org.apache.flink.testutils.serialization.types.Util$MockRecords;

        $r1 = new org.apache.flink.testutils.serialization.types.Util$MockRecords$1;

        specialinvoke $r1.<org.apache.flink.testutils.serialization.types.Util$MockRecords$1: void <init>(org.apache.flink.testutils.serialization.types.Util$MockRecords)>(r0);

        return $r1;
    }

    protected abstract org.apache.flink.testutils.serialization.types.SerializationTestType getRecord();

    static int access$100(org.apache.flink.testutils.serialization.types.Util$MockRecords)
    {
        org.apache.flink.testutils.serialization.types.Util$MockRecords r0;
        int $i0;

        r0 := @parameter0: org.apache.flink.testutils.serialization.types.Util$MockRecords;

        $i0 = r0.<org.apache.flink.testutils.serialization.types.Util$MockRecords: int numRecords>;

        return $i0;
    }

    static int access$110(org.apache.flink.testutils.serialization.types.Util$MockRecords)
    {
        org.apache.flink.testutils.serialization.types.Util$MockRecords r0;
        int $i0, $i1;

        r0 := @parameter0: org.apache.flink.testutils.serialization.types.Util$MockRecords;

        $i0 = r0.<org.apache.flink.testutils.serialization.types.Util$MockRecords: int numRecords>;

        $i1 = $i0 - 1;

        r0.<org.apache.flink.testutils.serialization.types.Util$MockRecords: int numRecords> = $i1;

        return $i0;
    }
}
