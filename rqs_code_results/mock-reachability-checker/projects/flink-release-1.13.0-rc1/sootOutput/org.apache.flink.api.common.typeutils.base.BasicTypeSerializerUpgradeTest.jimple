public class org.apache.flink.api.common.typeutils.base.BasicTypeSerializerUpgradeTest extends org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase
{

    public void <init>(org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification)
    {
        org.apache.flink.api.common.typeutils.base.BasicTypeSerializerUpgradeTest r0;
        org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BasicTypeSerializerUpgradeTest;

        r1 := @parameter0: org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase: void <init>(org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification)>(r1);

        return;
    }

    public static java.util.Collection testSpecifications() throws java.lang.Exception
    {
        org.apache.flink.testutils.migration.MigrationVersion[] r1;
        int i0, i1;
        org.apache.flink.testutils.migration.MigrationVersion r2;
        java.util.ArrayList $r3;
        org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r1 = <org.apache.flink.api.common.typeutils.base.BasicTypeSerializerUpgradeTest: org.apache.flink.testutils.migration.MigrationVersion[] MIGRATION_VERSIONS>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        $r4 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r4.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("big-dec-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BigDecSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BigDecSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r5 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r5.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("big-int-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BigIntSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BigIntSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r6.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("boolean-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BooleanSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BooleanSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r7 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r7.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("boolean-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BooleanValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$BooleanValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r8 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r8.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("byte-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ByteSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ByteSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        $r9 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r9.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("byte-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ByteValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ByteValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $r10 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r10.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("char-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$CharSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$CharSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r11.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("char-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$CharValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$CharValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r12.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("date-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$DateSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$DateSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $r13 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r13.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("double-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$DoubleSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$DoubleSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        $r14 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r14.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("double-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$DoubleValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$DoubleValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        $r15 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r15.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("float-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$FloatSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$FloatSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r15);

        $r16 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r16.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("float-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$FloatValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$FloatValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        $r17 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r17.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("int-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$IntSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$IntSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        $r18 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r18.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("int-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$IntValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$IntValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r18);

        $r19 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r19.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("long-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$LongSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$LongSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r19);

        $r20 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r20.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("long-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$LongValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$LongValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        $r21 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r21.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("null-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$NullValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$NullValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        $r22 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r22.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("short-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ShortSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ShortSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        $r23 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r23.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("short-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ShortValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$ShortValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r23);

        $r24 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r24.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("sql-date-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$SqlDateSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$SqlDateSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r24);

        $r25 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r25.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("sql-time-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$SqlTimeSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$SqlTimeSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r25);

        $r26 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r26.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("sql-timestamp-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$SqlTimestampSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$SqlTimestampSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r26);

        $r27 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r27.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("string-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$StringSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$StringSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r27);

        $r28 = new org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification;

        specialinvoke $r28.<org.apache.flink.api.common.typeutils.TypeSerializerUpgradeTestBase$TestSpecification: void <init>(java.lang.String,org.apache.flink.testutils.migration.MigrationVersion,java.lang.Class,java.lang.Class)>("string-value-serializer", r2, class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$StringValueSerializerSetup;", class "Lorg/apache/flink/api/common/typeutils/base/BasicTypeSerializerUpgradeTestSpecifications$StringValueSerializerVerifier;");

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r28);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r3;
    }
}
