public class org.apache.flink.api.common.typeutils.base.DateComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.DateComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.DateComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.DateComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.DateComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.DateComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.DateComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.DateComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.DateComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.DateSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.DateComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.DateSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.DateSerializer: void <init>()>();

        return $r1;
    }

    protected java.util.Date[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.DateComparatorTest r0;
        java.util.Random $r2;
        byte $b0, $b1, $b2;
        java.util.Date[] $r3;
        java.util.Date $r4, $r5, $r6, $r7, $r8;
        long l3;

        r0 := @this: org.apache.flink.api.common.typeutils.base.DateComparatorTest;

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(874597969123412338L);

        l3 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        $b0 = l3 cmp 0L;

        if $b0 >= 0 goto label1;

        l3 = neg l3;

     label1:
        $b1 = l3 cmp 9223372036854775807L;

        if $b1 != 0 goto label2;

        l3 = l3 - 3L;

     label2:
        $b2 = l3 cmp 2L;

        if $b2 > 0 goto label3;

        l3 = l3 + 3L;

     label3:
        $r3 = newarray (java.util.Date)[5];

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>(long)>(0L);

        $r3[0] = $r4;

        $r5 = new java.util.Date;

        specialinvoke $r5.<java.util.Date: void <init>(long)>(1L);

        $r3[1] = $r5;

        $r6 = new java.util.Date;

        specialinvoke $r6.<java.util.Date: void <init>(long)>(2L);

        $r3[2] = $r6;

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>(long)>(l3);

        $r3[3] = $r7;

        $r8 = new java.util.Date;

        specialinvoke $r8.<java.util.Date: void <init>(long)>(9223372036854775807L);

        $r3[4] = $r8;

        return $r3;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.DateComparatorTest r0;
        java.util.Date[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.DateComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.DateComparatorTest: java.util.Date[] getSortedTestData()>();

        return $r1;
    }
}
