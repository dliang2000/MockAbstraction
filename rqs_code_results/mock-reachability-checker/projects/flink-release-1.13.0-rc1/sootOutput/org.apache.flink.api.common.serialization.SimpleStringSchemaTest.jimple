public class org.apache.flink.api.common.serialization.SimpleStringSchemaTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.serialization.SimpleStringSchemaTest r0;

        r0 := @this: org.apache.flink.api.common.serialization.SimpleStringSchemaTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testSerializationWithAnotherCharset()
    {
        org.apache.flink.api.common.serialization.SimpleStringSchemaTest r0;
        java.nio.charset.Charset r1;
        byte[] r3, $r6;
        java.lang.String $r4, $r8;
        org.apache.flink.api.common.serialization.SimpleStringSchema $r5, $r7;

        r0 := @this: org.apache.flink.api.common.serialization.SimpleStringSchemaTest;

        r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>;

        $r4 = "\u4e4b\u6383\u63cf\u53e4\u7c4d\u7248\u5be6\u4e43\u59da\u9f10\u7684";

        r3 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r1);

        $r5 = new org.apache.flink.api.common.serialization.SimpleStringSchema;

        specialinvoke $r5.<org.apache.flink.api.common.serialization.SimpleStringSchema: void <init>(java.nio.charset.Charset)>(r1);

        $r6 = virtualinvoke $r5.<org.apache.flink.api.common.serialization.SimpleStringSchema: byte[] serialize(java.lang.String)>("\u4e4b\u6383\u63cf\u53e4\u7c4d\u7248\u5be6\u4e43\u59da\u9f10\u7684");

        staticinvoke <org.junit.Assert: void assertArrayEquals(byte[],byte[])>(r3, $r6);

        $r7 = new org.apache.flink.api.common.serialization.SimpleStringSchema;

        specialinvoke $r7.<org.apache.flink.api.common.serialization.SimpleStringSchema: void <init>(java.nio.charset.Charset)>(r1);

        $r8 = virtualinvoke $r7.<org.apache.flink.api.common.serialization.SimpleStringSchema: java.lang.String deserialize(byte[])>(r3);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>("\u4e4b\u6383\u63cf\u53e4\u7c4d\u7248\u5be6\u4e43\u59da\u9f10\u7684", $r8);

        return;
    }

    public void testSerializability() throws java.lang.Exception
    {
        org.apache.flink.api.common.serialization.SimpleStringSchemaTest r0;
        org.apache.flink.api.common.serialization.SimpleStringSchema r2, $r3;
        java.nio.charset.Charset $r4, $r6, $r7;
        java.io.Serializable $r5;

        r0 := @this: org.apache.flink.api.common.serialization.SimpleStringSchemaTest;

        $r3 = new org.apache.flink.api.common.serialization.SimpleStringSchema;

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>;

        specialinvoke $r3.<org.apache.flink.api.common.serialization.SimpleStringSchema: void <init>(java.nio.charset.Charset)>($r4);

        $r5 = staticinvoke <org.apache.flink.core.testutils.CommonTestUtils: java.io.Serializable createCopySerializable(java.io.Serializable)>($r3);

        r2 = (org.apache.flink.api.common.serialization.SimpleStringSchema) $r5;

        $r6 = virtualinvoke $r3.<org.apache.flink.api.common.serialization.SimpleStringSchema: java.nio.charset.Charset getCharset()>();

        $r7 = virtualinvoke r2.<org.apache.flink.api.common.serialization.SimpleStringSchema: java.nio.charset.Charset getCharset()>();

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r6, $r7);

        return;
    }
}
