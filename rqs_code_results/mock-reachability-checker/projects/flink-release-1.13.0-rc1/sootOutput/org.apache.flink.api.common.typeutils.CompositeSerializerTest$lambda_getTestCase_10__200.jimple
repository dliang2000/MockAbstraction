public final class org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200 extends java.lang.Object implements java.util.function.Function
{
    int cap0;

    public static java.util.function.Function bootstrap$(int)
    {
        int $i0;
        org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200 $r0;

        $i0 := @parameter0: int;

        $r0 = new org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200;

        specialinvoke $r0.<org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200: void <init>(int)>($i0);

        return $r0;
    }

    public void <init>(int)
    {
        org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200 $r0;
        int $i0;

        $r0 := @this: org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200;

        $i0 := @parameter0: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200: int cap0> = $i0;

        return;
    }

    public java.lang.Object apply(java.lang.Object)
    {
        org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200 $r0;
        java.lang.Object $r1, $r3;
        org.apache.flink.api.java.tuple.Tuple2 $r2;
        int $i0;

        $r0 := @this: org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (org.apache.flink.api.java.tuple.Tuple2) $r1;

        $i0 = $r0.<org.apache.flink.api.common.typeutils.CompositeSerializerTest$lambda_getTestCase_10__200: int cap0>;

        $r3 = staticinvoke <org.apache.flink.api.common.typeutils.CompositeSerializerTest: java.lang.Object lambda$getTestCase$10(int,org.apache.flink.api.java.tuple.Tuple2)>($i0, $r2);

        return $r3;
    }
}
