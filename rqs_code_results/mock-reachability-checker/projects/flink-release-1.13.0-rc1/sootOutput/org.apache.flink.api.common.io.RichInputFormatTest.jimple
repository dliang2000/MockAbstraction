public class org.apache.flink.api.common.io.RichInputFormatTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.api.common.io.RichInputFormatTest r0;

        r0 := @this: org.apache.flink.api.common.io.RichInputFormatTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testCheckRuntimeContextAccess()
    {
        org.apache.flink.api.common.io.RichInputFormatTest r0;
        org.apache.flink.api.common.io.SerializedInputFormat $r3;
        org.apache.flink.api.common.TaskInfo $r4;
        org.apache.flink.api.common.functions.util.RuntimeUDFContext $r5;
        java.lang.Class $r6;
        java.lang.ClassLoader $r7;
        org.apache.flink.api.common.ExecutionConfig $r8;
        java.util.HashMap $r9, $r10;
        org.apache.flink.metrics.groups.UnregisteredMetricsGroup $r11;
        org.apache.flink.api.common.functions.RuntimeContext $r12, $r13;
        int $i0, $i2;
        long $l1, $l3;

        r0 := @this: org.apache.flink.api.common.io.RichInputFormatTest;

        $r3 = new org.apache.flink.api.common.io.SerializedInputFormat;

        specialinvoke $r3.<org.apache.flink.api.common.io.SerializedInputFormat: void <init>()>();

        $r4 = new org.apache.flink.api.common.TaskInfo;

        specialinvoke $r4.<org.apache.flink.api.common.TaskInfo: void <init>(java.lang.String,int,int,int,int)>("test name", 3, 1, 3, 0);

        $r5 = new org.apache.flink.api.common.functions.util.RuntimeUDFContext;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r8 = new org.apache.flink.api.common.ExecutionConfig;

        specialinvoke $r8.<org.apache.flink.api.common.ExecutionConfig: void <init>()>();

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        $r10 = new java.util.HashMap;

        specialinvoke $r10.<java.util.HashMap: void <init>()>();

        $r11 = new org.apache.flink.metrics.groups.UnregisteredMetricsGroup;

        specialinvoke $r11.<org.apache.flink.metrics.groups.UnregisteredMetricsGroup: void <init>()>();

        specialinvoke $r5.<org.apache.flink.api.common.functions.util.RuntimeUDFContext: void <init>(org.apache.flink.api.common.TaskInfo,java.lang.ClassLoader,org.apache.flink.api.common.ExecutionConfig,java.util.Map,java.util.Map,org.apache.flink.metrics.MetricGroup)>($r4, $r7, $r8, $r9, $r10, $r11);

        virtualinvoke $r3.<org.apache.flink.api.common.io.SerializedInputFormat: void setRuntimeContext(org.apache.flink.api.common.functions.RuntimeContext)>($r5);

        $r12 = virtualinvoke $r3.<org.apache.flink.api.common.io.SerializedInputFormat: org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()>();

        $i0 = interfaceinvoke $r12.<org.apache.flink.api.common.functions.RuntimeContext: int getIndexOfThisSubtask()>();

        $l1 = (long) $i0;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l1, 1L);

        $r13 = virtualinvoke $r3.<org.apache.flink.api.common.io.SerializedInputFormat: org.apache.flink.api.common.functions.RuntimeContext getRuntimeContext()>();

        $i2 = interfaceinvoke $r13.<org.apache.flink.api.common.functions.RuntimeContext: int getNumberOfParallelSubtasks()>();

        $l3 = (long) $i2;

        staticinvoke <org.junit.Assert: void assertEquals(long,long)>($l3, 3L);

        return;
    }
}
