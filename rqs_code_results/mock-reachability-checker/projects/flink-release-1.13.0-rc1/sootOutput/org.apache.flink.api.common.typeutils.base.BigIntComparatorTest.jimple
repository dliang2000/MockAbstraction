public class org.apache.flink.api.common.typeutils.base.BigIntComparatorTest extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeutils.base.BigIntComparatorTest r0;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BigIntComparatorTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.common.typeutils.base.BigIntComparatorTest r0;
        boolean z0;
        org.apache.flink.api.common.typeutils.base.BigIntComparator $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BigIntComparatorTest;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.common.typeutils.base.BigIntComparator;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BigIntComparator: void <init>(boolean)>(z0);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.common.typeutils.base.BigIntComparatorTest r0;
        org.apache.flink.api.common.typeutils.base.BigIntSerializer $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BigIntComparatorTest;

        $r1 = new org.apache.flink.api.common.typeutils.base.BigIntSerializer;

        specialinvoke $r1.<org.apache.flink.api.common.typeutils.base.BigIntSerializer: void <init>()>();

        return $r1;
    }

    protected java.math.BigInteger[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.BigIntComparatorTest r0;
        java.math.BigInteger[] $r1;
        java.math.BigInteger $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BigIntComparatorTest;

        $r1 = newarray (java.math.BigInteger)[14];

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>("-8745979691234123413478523984729447");

        $r1[0] = $r2;

        $r3 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-10000L);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(-1L);

        $r1[2] = $r4;

        $r5 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r1[3] = $r5;

        $r6 = <java.math.BigInteger: java.math.BigInteger ONE>;

        $r1[4] = $r6;

        $r7 = <java.math.BigInteger: java.math.BigInteger TEN>;

        $r1[5] = $r7;

        $r8 = new java.math.BigInteger;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String)>("127");

        $r1[6] = $r8;

        $r9 = new java.math.BigInteger;

        specialinvoke $r9.<java.math.BigInteger: void <init>(java.lang.String)>("128");

        $r1[7] = $r9;

        $r10 = new java.math.BigInteger;

        specialinvoke $r10.<java.math.BigInteger: void <init>(java.lang.String)>("129");

        $r1[8] = $r10;

        $r11 = new java.math.BigInteger;

        specialinvoke $r11.<java.math.BigInteger: void <init>(java.lang.String)>("130");

        $r1[9] = $r11;

        $r12 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483648L);

        $r1[10] = $r12;

        $r13 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147483649L);

        $r1[11] = $r13;

        $r14 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2147516416L);

        $r1[12] = $r14;

        $r15 = new java.math.BigInteger;

        specialinvoke $r15.<java.math.BigInteger: void <init>(java.lang.String)>("8745979691234123413478523984729447");

        $r1[13] = $r15;

        return $r1;
    }

    protected volatile java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.common.typeutils.base.BigIntComparatorTest r0;
        java.math.BigInteger[] $r1;

        r0 := @this: org.apache.flink.api.common.typeutils.base.BigIntComparatorTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeutils.base.BigIntComparatorTest: java.math.BigInteger[] getSortedTestData()>();

        return $r1;
    }
}
