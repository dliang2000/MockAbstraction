public class org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest extends org.apache.flink.api.common.typeutils.TypeInformationTestBase
{

    public void <init>()
    {
        org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest r0;

        r0 := @this: org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.TypeInformationTestBase: void <init>()>();

        return;
    }

    protected org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo[] $r1;
        org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo $r2, $r3, $r4;

        r0 := @this: org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest;

        $r1 = newarray (org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo)[3];

        $r2 = <org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo: org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo DATE>;

        $r1[0] = $r2;

        $r3 = <org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo: org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo TIME>;

        $r1[1] = $r3;

        $r4 = <org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo: org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo TIMESTAMP>;

        $r1[2] = $r4;

        return $r1;
    }

    protected volatile org.apache.flink.api.common.typeinfo.TypeInformation[] getTestData()
    {
        org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest r0;
        org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo[] $r1;

        r0 := @this: org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest;

        $r1 = virtualinvoke r0.<org.apache.flink.api.common.typeinfo.SqlTimeTypeInfoTest: org.apache.flink.api.common.typeinfo.SqlTimeTypeInfo[] getTestData()>();

        return $r1;
    }
}
