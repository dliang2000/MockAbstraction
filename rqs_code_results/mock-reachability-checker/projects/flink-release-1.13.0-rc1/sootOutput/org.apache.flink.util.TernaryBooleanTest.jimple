public class org.apache.flink.util.TernaryBooleanTest extends java.lang.Object
{

    public void <init>()
    {
        org.apache.flink.util.TernaryBooleanTest r0;

        r0 := @this: org.apache.flink.util.TernaryBooleanTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void testWithDefault()
    {
        org.apache.flink.util.TernaryBooleanTest r0;
        org.apache.flink.util.TernaryBoolean $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: org.apache.flink.util.TernaryBooleanTest;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $z0 = virtualinvoke $r1.<org.apache.flink.util.TernaryBoolean: boolean getOrDefault(boolean)>(1);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r2 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $z1 = virtualinvoke $r2.<org.apache.flink.util.TernaryBoolean: boolean getOrDefault(boolean)>(0);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r3 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $z2 = virtualinvoke $r3.<org.apache.flink.util.TernaryBoolean: boolean getOrDefault(boolean)>(1);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z2);

        $r4 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $z3 = virtualinvoke $r4.<org.apache.flink.util.TernaryBoolean: boolean getOrDefault(boolean)>(0);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z3);

        $r5 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        $z4 = virtualinvoke $r5.<org.apache.flink.util.TernaryBoolean: boolean getOrDefault(boolean)>(1);

        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z4);

        $r6 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        $z5 = virtualinvoke $r6.<org.apache.flink.util.TernaryBoolean: boolean getOrDefault(boolean)>(0);

        staticinvoke <org.junit.Assert: void assertFalse(boolean)>($z5);

        return;
    }

    public void testResolveUndefined()
    {
        org.apache.flink.util.TernaryBooleanTest r0;
        org.apache.flink.util.TernaryBoolean $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        r0 := @this: org.apache.flink.util.TernaryBooleanTest;

        $r2 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r3 = virtualinvoke $r1.<org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean resolveUndefined(boolean)>(1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r4 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r6 = virtualinvoke $r4.<org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean resolveUndefined(boolean)>(0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r8 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r7 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r9 = virtualinvoke $r7.<org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean resolveUndefined(boolean)>(1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r8, $r9);

        $r11 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r10 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r12 = virtualinvoke $r10.<org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean resolveUndefined(boolean)>(0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r11, $r12);

        $r14 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r13 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        $r15 = virtualinvoke $r13.<org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean resolveUndefined(boolean)>(1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r14, $r15);

        $r17 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r16 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        $r18 = virtualinvoke $r16.<org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean resolveUndefined(boolean)>(0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r17, $r18);

        return;
    }

    public void testToBoolean()
    {
        org.apache.flink.util.TernaryBooleanTest r0;
        org.apache.flink.util.TernaryBoolean $r1, $r4, $r7;
        java.lang.Boolean $r2, $r3, $r5, $r6, $r8;
        boolean $z0, $z1;

        r0 := @this: org.apache.flink.util.TernaryBooleanTest;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r3 = virtualinvoke $r1.<org.apache.flink.util.TernaryBoolean: java.lang.Boolean getAsBoolean()>();

        if $r2 != $r3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z0);

        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r4 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r6 = virtualinvoke $r4.<org.apache.flink.util.TernaryBoolean: java.lang.Boolean getAsBoolean()>();

        if $r5 != $r6 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <org.junit.Assert: void assertTrue(boolean)>($z1);

        $r7 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        $r8 = virtualinvoke $r7.<org.apache.flink.util.TernaryBoolean: java.lang.Boolean getAsBoolean()>();

        staticinvoke <org.junit.Assert: void assertNull(java.lang.Object)>($r8);

        return;
    }

    public void testFromBoolean()
    {
        org.apache.flink.util.TernaryBooleanTest r0;
        org.apache.flink.util.TernaryBoolean $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.flink.util.TernaryBooleanTest;

        $r1 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r2 = staticinvoke <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean fromBoolean(boolean)>(1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r3 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r4 = staticinvoke <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean fromBoolean(boolean)>(0);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r3, $r4);

        return;
    }

    public void testFromBoxedBoolean()
    {
        org.apache.flink.util.TernaryBooleanTest r0;
        java.lang.Boolean $r1, $r4;
        org.apache.flink.util.TernaryBoolean $r2, $r3, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.flink.util.TernaryBooleanTest;

        $r2 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean TRUE>;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r3 = staticinvoke <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean fromBoxedBoolean(java.lang.Boolean)>($r1);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r2, $r3);

        $r5 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean FALSE>;

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $r6 = staticinvoke <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean fromBoxedBoolean(java.lang.Boolean)>($r4);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r5, $r6);

        $r7 = <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean UNDEFINED>;

        $r8 = staticinvoke <org.apache.flink.util.TernaryBoolean: org.apache.flink.util.TernaryBoolean fromBoxedBoolean(java.lang.Boolean)>(null);

        staticinvoke <org.junit.Assert: void assertEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        return;
    }
}
