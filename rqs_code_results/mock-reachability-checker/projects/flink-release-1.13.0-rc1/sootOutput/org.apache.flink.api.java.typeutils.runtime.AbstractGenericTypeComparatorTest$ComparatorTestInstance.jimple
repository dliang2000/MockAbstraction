class org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance extends org.apache.flink.api.common.typeutils.ComparatorTestBase
{
    private final java.lang.Object[] testData;
    private final java.lang.Class type;
    final org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest this$0;

    public void <init>(org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest, java.lang.Object[])
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance r0;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest r1;
        java.lang.Object[] r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        java.lang.Object $r4;
        java.lang.Class $r5;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance;

        r1 := @parameter0: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest;

        r2 := @parameter1: java.lang.Object[];

        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest this$0> = r1;

        specialinvoke r0.<org.apache.flink.api.common.typeutils.ComparatorTestBase: void <init>()>();

        if r2 == null goto label1;

        $i0 = lengthof r2;

        if $i0 != 0 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: java.lang.Object[] testData> = r2;

        $r4 = r2[0];

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: java.lang.Class type> = $r5;

        return;
    }

    protected org.apache.flink.api.common.typeutils.TypeComparator createComparator(boolean)
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance r0;
        boolean z0;
        org.apache.flink.api.java.typeutils.runtime.GenericTypeComparator $r1;
        java.lang.Class $r2, $r5;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest $r3;
        org.apache.flink.api.common.typeutils.TypeSerializer $r4;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance;

        z0 := @parameter0: boolean;

        $r1 = new org.apache.flink.api.java.typeutils.runtime.GenericTypeComparator;

        $r3 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest this$0>;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: java.lang.Class type>;

        $r4 = virtualinvoke $r3.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(java.lang.Class)>($r2);

        $r5 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: java.lang.Class type>;

        specialinvoke $r1.<org.apache.flink.api.java.typeutils.runtime.GenericTypeComparator: void <init>(boolean,org.apache.flink.api.common.typeutils.TypeSerializer,java.lang.Class)>(z0, $r4, $r5);

        return $r1;
    }

    protected org.apache.flink.api.common.typeutils.TypeSerializer createSerializer()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance r0;
        java.lang.Class $r1;
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest $r2;
        org.apache.flink.api.common.typeutils.TypeSerializer $r3;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance;

        $r2 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest this$0>;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: java.lang.Class type>;

        $r3 = virtualinvoke $r2.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest: org.apache.flink.api.common.typeutils.TypeSerializer createSerializer(java.lang.Class)>($r1);

        return $r3;
    }

    protected java.lang.Object[] getSortedTestData()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance r0;
        java.lang.Object[] $r1;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance;

        $r1 = r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: java.lang.Object[] testData>;

        return $r1;
    }

    public void testAll()
    {
        org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance r0;

        r0 := @this: org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance;

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testDuplicate()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testEquality()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testEqualityWithReference()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testInequality()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testInequalityWithReference()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testNormalizedKeysEqualsFullLength()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testNormalizedKeysEqualsHalfLength()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testNormalizedKeysGreatSmallFullLength()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testNormalizedKeysGreatSmallAscDescHalfLength()>();

        virtualinvoke r0.<org.apache.flink.api.java.typeutils.runtime.AbstractGenericTypeComparatorTest$ComparatorTestInstance: void testNormalizedKeyReadWriter()>();

        return;
    }
}
