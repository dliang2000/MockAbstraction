<com.sun.codemodel.JNarrowedClass: com.sun.codemodel.JClass _extends()>/com.sun.codemodel.JClass.substituteParams/0	<com.sun.codemodel.JClass: com.sun.codemodel.JClass substituteParams(com.sun.codemodel.JTypeVar[],java.util.List)>	<com.sun.codemodel.JNarrowedClass: com.sun.codemodel.JClass _extends()>	168	<com.sun.codemodel.JNarrowedClass: com.sun.codemodel.JClass _extends()>/base#_166
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	43	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	43	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	46	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/field#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/2	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	48	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	49	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/3	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	52	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	53	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>/java.lang.String.charAt/0	<java.lang.String: char charAt(int)>	<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>	121	<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>/unformatted#_0
<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	39	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	39	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	42	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/field#_0
<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	44	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	45	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>	53	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/fileA#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	99	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack13
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.SchemaGenerator.schemaFromExample/0	<org.jsonschema2pojo.SchemaGenerator: com.fasterxml.jackson.databind.node.ObjectNode schemaFromExample(java.net.URL)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	79	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockSchemaGenerator#_78
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.SchemaGenerator.schemaFromExample/0	<org.jsonschema2pojo.SchemaGenerator: com.fasterxml.jackson.databind.node.ObjectNode schemaFromExample(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	108	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockSchemaGenerator#_107
<com.sun.codemodel.JMethod: boolean hasSignature(com.sun.codemodel.JType[])>/java.lang.Object.equals/0	<java.lang.Object: boolean equals(java.lang.Object)>	<com.sun.codemodel.JMethod: boolean hasSignature(com.sun.codemodel.JType[])>	375	<com.sun.codemodel.JMethod: boolean hasSignature(com.sun.codemodel.JType[])>/$stack9
<org.jsonschema2pojo.rules.PropertyRule: com.fasterxml.jackson.databind.JsonNode resolveRefs(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.SchemaStore.create/0	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.PropertyRule: com.fasterxml.jackson.databind.JsonNode resolveRefs(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema)>	194	<org.jsonschema2pojo.rules.PropertyRule: com.fasterxml.jackson.databind.JsonNode resolveRefs(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema)>/$stack7
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	93	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/schema#_91
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.rules.EnumRule.apply/0	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	99	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/enumRule#_96
<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/java.lang.Object.equals/0	<java.lang.Object: boolean equals(java.lang.Object)>	<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>	43	<org.hamcrest.core.IsEqual: boolean areEqual(java.lang.Object,java.lang.Object)>/actual#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	100	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack17
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	101	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack22
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	102	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	118	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack17
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	119	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack22
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	120	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	43	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	43	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	46	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/field#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/2	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	48	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	49	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/3	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	52	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	53	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	139	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	140	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack32
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	141	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack36
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	142	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack41
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	143	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack47
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	162	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack27
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	163	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack32
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	164	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack36
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	165	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack41
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	166	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack47
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	180	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	181	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack14
<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>	65	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/schema#_63
<org.jsonschema2pojo.util.NameHelper: java.lang.String getGetterName(java.lang.String,com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/java.lang.Object.equals/0	<java.lang.Object: boolean equals(java.lang.Object)>	<org.jsonschema2pojo.util.NameHelper: java.lang.String getGetterName(java.lang.String,com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	202	<org.jsonschema2pojo.util.NameHelper: java.lang.String getGetterName(java.lang.String,com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/type#_0
<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	41	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	42	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/field#_0
<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	43	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	46	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	47	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/field#_0
<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	48	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	100	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack17
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	101	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack22
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	102	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	118	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack17
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	119	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack22
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	120	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	139	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	140	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack32
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	141	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack36
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	142	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack41
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	143	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack47
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	162	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack27
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	163	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack32
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	164	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack36
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	165	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack41
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	166	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack47
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	180	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	181	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack14
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	103	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack16
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	104	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	105	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack26
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	122	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack16
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	123	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	124	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack26
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	144	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack25
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	145	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack30
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	146	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack34
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	147	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack39
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	148	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack44
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	149	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack50
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	164	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	165	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack14
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.getMethod/0	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JMethod getMethod(java.lang.String,com.sun.codemodel.JType[])>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	195	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/property#5#_194
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.getMethod/1	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JMethod getMethod(java.lang.String,com.sun.codemodel.JType[])>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	237	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#9#_236
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.getMethod/0	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JMethod getMethod(java.lang.String,com.sun.codemodel.JType[])>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	329	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#7#_328
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.getMethod/0	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JMethod getMethod(java.lang.String,com.sun.codemodel.JType[])>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	365	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#11#_364
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	39	<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/field#_0
<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/org.jsonschema2pojo.SchemaStore.create/0	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>	73	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/$stack17
<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema resolveSchemaRefsRecursive(org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.SchemaStore.create/0	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema resolveSchemaRefsRecursive(org.jsonschema2pojo.Schema)>	186	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema resolveSchemaRefsRecursive(org.jsonschema2pojo.Schema)>/$stack6
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.util.NameHelper.getClassName/0	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	65	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack9
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.util.NameHelper.replaceIllegalCharacters/0	<org.jsonschema2pojo.util.NameHelper: java.lang.String replaceIllegalCharacters(java.lang.String)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	66	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack16
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.util.NameHelper.normalizeName/0	<org.jsonschema2pojo.util.NameHelper: java.lang.String normalizeName(java.lang.String)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	67	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack21
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/org.jsonschema2pojo.rules.TypeRule.apply/0	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	80	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/$stack39
<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>	76	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/fileA#_0
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.get/0	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	105	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack26
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.get/1	<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	106	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack31
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	107	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack36
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	108	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack41
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	109	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack47
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/0	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	123	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack8
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.fasterxml.jackson.databind.JsonNode.has/1	<com.fasterxml.jackson.databind.JsonNode: boolean has(java.lang.String)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	124	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack14
<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Comparable)>/java.lang.Comparable.compareTo/0	<java.lang.Comparable: int compareTo(java.lang.Object)>	<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Comparable)>	33	<org.hamcrest.number.OrderingComparison: boolean matchesSafely(java.lang.Comparable)>/actual#_0
<org.hamcrest.number.OrderingComparison: void describeMismatchSafely(java.lang.Comparable,org.hamcrest.Description)>/java.lang.Comparable.compareTo/0	<java.lang.Comparable: int compareTo(java.lang.Object)>	<org.hamcrest.number.OrderingComparison: void describeMismatchSafely(java.lang.Comparable,org.hamcrest.Description)>	39	<org.hamcrest.number.OrderingComparison: void describeMismatchSafely(java.lang.Comparable,org.hamcrest.Description)>/actual#_0
<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.SchemaStore.create/0	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	69	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack24
<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	79	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/org.jsonschema2pojo.rules.FormatRule.apply/0	<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>	81	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/mockFormatRule#_80
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/org.jsonschema2pojo.rules.ArrayRule.apply/0	<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>	561	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/mockArrayRule#_560
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/org.jsonschema2pojo.rules.ObjectRule.apply/0	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>	579	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/mockObjectRule#_578
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithUniqueItemsProducesSet()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithUniqueItemsProducesSet()>	61	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithUniqueItemsProducesSet()>/schema#_60
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>	86	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/schema#_84
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	112	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/schema#_110
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/org.jsonschema2pojo.Schema.deriveChildSchema/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema deriveChildSchema(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>	139	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/schema#_137
<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>/org.jsonschema2pojo.SchemaGenerator.schemaFromExample/0	<org.jsonschema2pojo.SchemaGenerator: com.fasterxml.jackson.databind.node.ObjectNode schemaFromExample(java.net.URL)>	<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>	106	<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>/$stack9
<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>/org.jsonschema2pojo.SchemaGenerator.schemaFromExample/0	<org.jsonschema2pojo.SchemaGenerator: com.fasterxml.jackson.databind.node.ObjectNode schemaFromExample(com.fasterxml.jackson.databind.JsonNode)>	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>	131	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>/$stack23
<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.setJavaType/0	<org.jsonschema2pojo.Schema: void setJavaType(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	97	<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	105	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack35
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	106	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack41
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>	115	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>	116	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>	59	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/$stack24
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	89	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/$stack34
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	118	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/$stack37
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/org.jsonschema2pojo.rules.SchemaRule.apply/0	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>	139	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/$stack25
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.TypeRule.apply/0	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	73	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack42
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.setJavaTypeIfEmpty/0	<org.jsonschema2pojo.Schema: void setJavaTypeIfEmpty(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	94	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/schema#_91
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.rules.EnumRule.apply/1	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	103	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/$stack34
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.setJavaTypeIfEmpty/1	<org.jsonschema2pojo.Schema: void setJavaTypeIfEmpty(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	104	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/$stack38
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	108	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack50
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	109	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack56
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	110	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack61
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	126	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack50
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	127	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack56
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	128	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack61
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	149	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack70
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	150	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack76
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	151	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack82
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	172	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack74
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	173	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack80
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	174	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack86
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	187	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	188	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>	197	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>	198	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.setJavaTypeIfEmpty/0	<org.jsonschema2pojo.Schema: void setJavaTypeIfEmpty(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	110	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.RuleLogger.error/0	<org.jsonschema2pojo.RuleLogger: void error(java.lang.String,java.lang.Throwable)>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	118	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack88
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.setJavaTypeIfEmpty/1	<org.jsonschema2pojo.Schema: void setJavaTypeIfEmpty(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	122	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/org.jsonschema2pojo.RuleLogger.error/0	<org.jsonschema2pojo.RuleLogger: void error(java.lang.String)>	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>	244	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/logger#_240
<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/org.jsonschema2pojo.RuleLogger.error/1	<org.jsonschema2pojo.RuleLogger: void error(java.lang.String)>	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>	249	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/logger#_240
<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinitionWithJavaEnumsExtension(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/org.jsonschema2pojo.RuleLogger.error/0	<org.jsonschema2pojo.RuleLogger: void error(java.lang.String)>	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinitionWithJavaEnumsExtension(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>	321	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinitionWithJavaEnumsExtension(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/$stack37
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.setJavaTypeIfEmpty/0	<org.jsonschema2pojo.Schema: void setJavaTypeIfEmpty(com.sun.codemodel.JType)>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	102	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	108	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack50
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	109	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack56
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	110	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack61
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	126	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack50
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	127	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack56
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	128	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack61
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	149	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack70
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	150	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack76
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	151	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack82
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	172	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack74
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	173	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack80
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	174	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack86
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	187	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	188	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>	197	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>	198	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	111	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack49
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	112	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack55
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.annotate/2	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	113	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack60
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	114	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack65
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	130	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack49
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	131	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack55
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.annotate/2	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	132	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack60
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	133	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack65
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/2	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	155	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack73
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	156	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack79
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.annotate/3	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	157	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack85
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	158	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack91
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	171	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	172	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	173	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack48
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	182	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	183	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack21
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	184	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack28
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,java.lang.String)>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	185	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack33
<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>/org.jsonschema2pojo.RuleLogger.debug/0	<org.jsonschema2pojo.RuleLogger: void debug(java.lang.String)>	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>	154	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>/$stack19
<org.jsonschema2pojo.SourceSortOrderTest: void testTwoFilesAreCompared(java.util.Comparator)>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoFilesAreCompared(java.util.Comparator)>	56	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoFilesAreCompared(java.util.Comparator)>/$stack9
<org.jsonschema2pojo.SourceSortOrderTest: void testTwoDirectoriesAreCompared(java.util.Comparator)>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoDirectoriesAreCompared(java.util.Comparator)>	64	<org.jsonschema2pojo.SourceSortOrderTest: void testTwoDirectoriesAreCompared(java.util.Comparator)>/$stack9
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>	76	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/$stack18
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/java.io.File.compareTo/1	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>	77	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_FILES_FIRST()>/$stack24
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/java.io.File.compareTo/0	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>	89	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/$stack18
<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/java.io.File.compareTo/1	<java.io.File: int compareTo(java.io.File)>	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>	90	<org.jsonschema2pojo.SourceSortOrderTest: void filesBeforeDirectories_SUBDIRS_FIRST()>/$stack24
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JFieldVar.annotate/1	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	115	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack70
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	116	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack76
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JAnnotationUse.param/1	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	117	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack82
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	130	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack36
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	131	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack41
<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/com.sun.codemodel.JFieldVar.annotate/0	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>	140	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/$stack16
<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/com.sun.codemodel.JAnnotationUse.param/0	<com.sun.codemodel.JAnnotationUse: com.sun.codemodel.JAnnotationUse param(java.lang.String,int)>	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>	141	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/$stack21
<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>	86	<org.mockito.internal.MockitoCore: java.lang.Object verify(java.lang.Object,org.mockito.verification.VerificationMode)>/mock#_0
<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>	57	<com.fasterxml.jackson.databind.introspect.MemberKey: boolean equals(java.lang.Object)>/o#_0
<com.sun.codemodel.JNarrowedClass: boolean equals(java.lang.Object)>/com.sun.codemodel.JClass.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<com.sun.codemodel.JNarrowedClass: boolean equals(java.lang.Object)>	212	<com.sun.codemodel.JNarrowedClass: boolean equals(java.lang.Object)>/$stack4
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	42	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	62	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	62	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/$stack5
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JFieldVar.type/1	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	75	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JType.isArray/0	<com.sun.codemodel.JType: boolean isArray()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	75	<org.jsonschema2pojo.rules.MinItemsMaxItemsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/$stack18
<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.isGenerated/0	<org.jsonschema2pojo.Schema: boolean isGenerated()>	<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	80	<org.jsonschema2pojo.rules.ArrayRule: com.sun.codemodel.JClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getObjectRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getObjectRule()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	83	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack11
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	97	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack58
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/1	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	100	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack54
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/2	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	103	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack50
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getArrayRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getArrayRule()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	106	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack44
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getFormatRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getFormatRule()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	113	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack29
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getMediaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getMediaRule()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	115	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack21
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType unboxIfNecessary(com.sun.codemodel.JType,org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType unboxIfNecessary(com.sun.codemodel.JType,org.jsonschema2pojo.GenerationConfig)>	139	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType unboxIfNecessary(com.sun.codemodel.JType,org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getIntegerType(com.sun.codemodel.JCodeModel,com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUseBigIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigIntegers()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getIntegerType(com.sun.codemodel.JCodeModel,com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.GenerationConfig)>	151	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getIntegerType(com.sun.codemodel.JCodeModel,com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getIntegerType(com.sun.codemodel.JCodeModel,com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUseLongIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseLongIntegers()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getIntegerType(com.sun.codemodel.JCodeModel,com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.GenerationConfig)>	153	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getIntegerType(com.sun.codemodel.JCodeModel,com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getNumberType(com.sun.codemodel.JCodeModel,org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUseBigDecimals/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigDecimals()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getNumberType(com.sun.codemodel.JCodeModel,org.jsonschema2pojo.GenerationConfig)>	167	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getNumberType(com.sun.codemodel.JCodeModel,org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getNumberType(com.sun.codemodel.JCodeModel,org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getNumberType(com.sun.codemodel.JCodeModel,org.jsonschema2pojo.GenerationConfig)>	169	<org.jsonschema2pojo.rules.TypeRule: com.sun.codemodel.JType getNumberType(com.sun.codemodel.JCodeModel,org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeAdditionalProperties/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeAdditionalProperties()>	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	95	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack9
<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	118	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack19
<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isGenerateBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isGenerateBuilders()>	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	122	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack22
<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JFieldVar addAdditionalPropertiesField(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JFieldVar addAdditionalPropertiesField(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType)>	131	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JFieldVar addAdditionalPropertiesField(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType)>/propertyType#_0
<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JFieldVar addAdditionalPropertiesField(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType)>/com.sun.codemodel.JType.boxify/1	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JFieldVar addAdditionalPropertiesField(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType)>	134	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JFieldVar addAdditionalPropertiesField(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType)>/propertyType#_0
<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JMethod addBuilder(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType,com.sun.codemodel.JFieldVar)>/org.jsonschema2pojo.GenerationConfig.isUseInnerClassBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseInnerClassBuilders()>	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JMethod addBuilder(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType,com.sun.codemodel.JFieldVar)>	170	<org.jsonschema2pojo.rules.AdditionalPropertiesRule: com.sun.codemodel.JMethod addBuilder(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JType,com.sun.codemodel.JFieldVar)>/$stack6
<com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>	268	<com.fasterxml.jackson.core.io.SerializedString: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>	69	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/$stack5
<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/org.jsonschema2pojo.GenerationConfig.getFormatTypeMapping/0	<org.jsonschema2pojo.GenerationConfig: java.util.Map getFormatTypeMapping()>	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>	70	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void <init>(java.lang.Class,java.lang.Class)>/$stack11
<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void usePrimitivesWithCustomTypeMapping()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void usePrimitivesWithCustomTypeMapping()>	79	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void usePrimitivesWithCustomTypeMapping()>/result#_76
<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void usePrimitivesWithCustomTypeMapping()>/com.sun.codemodel.JType.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void usePrimitivesWithCustomTypeMapping()>	80	<org.jsonschema2pojo.rules.FormatRulePrimitivesTest: void usePrimitivesWithCustomTypeMapping()>/result#_76
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/java.lang.Character.charValue/0	<java.lang.Character: char charValue()>	<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>	36	<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/$stack19
<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>	50	<org.hamcrest.BaseDescription: org.hamcrest.Description appendValue(java.lang.Object)>/value#_0
<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>	65	<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>/value#_0
<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>/java.lang.Object.hashCode/0	<java.lang.Object: int hashCode()>	<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>	65	<org.hamcrest.BaseDescription: java.lang.String descriptionOf(java.lang.Object)>/value#_0
<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>/java.lang.String.length/0	<java.lang.String: int length()>	<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>	120	<org.hamcrest.BaseDescription: void toJavaSyntax(java.lang.String)>/unformatted#_0
<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	38	<org.jsonschema2pojo.rules.DigitsRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.DigitsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.DigitsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	53	<org.jsonschema2pojo.rules.DigitsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.jsonschema2pojo.rules.DigitsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.DigitsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	53	<org.jsonschema2pojo.rules.DigitsRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/$stack3
<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/0	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>	46	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/fileA#_0
<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/1	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>	46	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/fileB#_0
<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/2	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>	50	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/fileA#_0
<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/3	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>	50	<org.jsonschema2pojo.SourceSortOrder$2$1: int compare(java.io.File,java.io.File)>/fileB#_0
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	95	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack3
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	98	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack9
<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>	100	<org.jsonschema2pojo.rules.PatternRuleTest: void testRegex()>/$stack18
<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>	111	<org.jsonschema2pojo.rules.PatternRuleTest: void jsrDisable()>/$stack2
<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isConstructorsRequiredPropertiesOnly/0	<org.jsonschema2pojo.GenerationConfig: boolean isConstructorsRequiredPropertiesOnly()>	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	63	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/generationConfig#_61
<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeCopyConstructor/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeCopyConstructor()>	<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	103	<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/generationConfig#_102
<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeAllPropertiesConstructor/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeAllPropertiesConstructor()>	<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	104	<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/generationConfig#_102
<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeRequiredPropertiesConstructor/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeRequiredPropertiesConstructor()>	<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	105	<org.jsonschema2pojo.rules.ConstructorRule: void handleMultiChoiceConstructorConfiguration(com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/generationConfig#_102
<org.jsonschema2pojo.rules.ConstructorRule: void addFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/org.jsonschema2pojo.GenerationConfig.isGenerateBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isGenerateBuilders()>	<org.jsonschema2pojo.rules.ConstructorRule: void addFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>	149	<org.jsonschema2pojo.rules.ConstructorRule: void addFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/generationConfig#_143
<org.jsonschema2pojo.rules.ConstructorRule: void addFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/org.jsonschema2pojo.GenerationConfig.isUseInnerClassBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseInnerClassBuilders()>	<org.jsonschema2pojo.rules.ConstructorRule: void addFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>	149	<org.jsonschema2pojo.rules.ConstructorRule: void addFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/generationConfig#_143
<org.jsonschema2pojo.rules.ConstructorRule: void addCopyConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/org.jsonschema2pojo.GenerationConfig.isGenerateBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isGenerateBuilders()>	<org.jsonschema2pojo.rules.ConstructorRule: void addCopyConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>	164	<org.jsonschema2pojo.rules.ConstructorRule: void addCopyConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/generationConfig#_158
<org.jsonschema2pojo.rules.ConstructorRule: void addCopyConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/org.jsonschema2pojo.GenerationConfig.isUseInnerClassBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseInnerClassBuilders()>	<org.jsonschema2pojo.rules.ConstructorRule: void addCopyConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>	164	<org.jsonschema2pojo.rules.ConstructorRule: void addCopyConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/generationConfig#_158
<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/org.jsonschema2pojo.GenerationConfig.isIncludeConstructorPropertiesAnnotation/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeConstructorPropertiesAnnotation()>	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>	350	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/generationConfig#_346
<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/org.jsonschema2pojo.GenerationConfig.isIncludeConstructorPropertiesAnnotation/1	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeConstructorPropertiesAnnotation()>	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>	371	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/generationConfig#_346
<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/org.jsonschema2pojo.GenerationConfig.isIncludeConstructorPropertiesAnnotation/2	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeConstructorPropertiesAnnotation()>	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>	398	<org.jsonschema2pojo.rules.ConstructorRule: com.sun.codemodel.JMethod generateFieldsConstructor(com.sun.codemodel.JDefinedClass,java.util.Set,java.util.Set)>/generationConfig#_346
<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>	49	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/mockRuleFactory#_48
<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>	50	<org.jsonschema2pojo.SchemaMapperTest: void generateReadsSchemaAsObject()>/mockRuleFactory#_48
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.GenerationConfig.getSourceType/0	<org.jsonschema2pojo.GenerationConfig: org.jsonschema2pojo.SourceType getSourceType()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	76	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockGenerationConfig#_75
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	82	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockRuleFactory#_81
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>	83	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJsonWhenInJsonMode()>/mockRuleFactory#_81
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.GenerationConfig.getSourceType/0	<org.jsonschema2pojo.GenerationConfig: org.jsonschema2pojo.SourceType getSourceType()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	105	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockGenerationConfig#_104
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	111	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockRuleFactory#_110
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>	112	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromExampleJSONAsStringInput()>/mockRuleFactory#_110
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>	131	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/mockRuleFactory#_130
<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>	132	<org.jsonschema2pojo.SchemaMapperTest: void generateCreatesSchemaFromSchemaAsStringInput()>/mockRuleFactory#_130
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeGetters()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	73	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack20
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeSetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeSetters()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	74	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack23
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isGenerateBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isGenerateBuilders()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	99	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack30
<org.jsonschema2pojo.rules.PropertyRule: boolean hasEnumerated(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/org.jsonschema2pojo.Schema.getContent/0	<org.jsonschema2pojo.Schema: com.fasterxml.jackson.databind.JsonNode getContent()>	<org.jsonschema2pojo.rules.PropertyRule: boolean hasEnumerated(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	125	<org.jsonschema2pojo.rules.PropertyRule: boolean hasEnumerated(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/schema#_0
<org.jsonschema2pojo.rules.PropertyRule: com.fasterxml.jackson.databind.JsonNode resolveRefs(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.rules.PropertyRule: com.fasterxml.jackson.databind.JsonNode resolveRefs(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema)>	194	<org.jsonschema2pojo.rules.PropertyRule: com.fasterxml.jackson.databind.JsonNode resolveRefs(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema)>/$stack11
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JType getReturnType(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,boolean,boolean)>/org.jsonschema2pojo.GenerationConfig.isUseOptionalForGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseOptionalForGetters()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JType getReturnType(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,boolean,boolean)>	212	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JType getReturnType(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,boolean,boolean)>/$stack8
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JType getReturnType(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,boolean,boolean)>/com.sun.codemodel.JType.isReference/0	<com.sun.codemodel.JType: boolean isReference()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JType getReturnType(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,boolean,boolean)>	213	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JType getReturnType(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,boolean,boolean)>/$stack10
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addGetter(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode,boolean,boolean)>/org.jsonschema2pojo.GenerationConfig.isUseOptionalForGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseOptionalForGetters()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addGetter(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode,boolean,boolean)>	228	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addGetter(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode,boolean,boolean)>/$stack17
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addGetter(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode,boolean,boolean)>/com.sun.codemodel.JType.isReference/0	<com.sun.codemodel.JType: boolean isReference()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addGetter(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode,boolean,boolean)>	229	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addGetter(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode,boolean,boolean)>/$stack19
<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addBuilderMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/org.jsonschema2pojo.GenerationConfig.isUseInnerClassBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseInnerClassBuilders()>	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addBuilderMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>	250	<org.jsonschema2pojo.rules.PropertyRule: com.sun.codemodel.JMethod addBuilderMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/$stack7
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	61	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/mockGenerationConfig#_60
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.RuleFactory.getTypeRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTypeRule()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	64	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack24
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaStore/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.SchemaStore getSchemaStore()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	65	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack28
<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>	66	<org.jsonschema2pojo.rules.SchemaRuleTest: void refsToOtherSchemasAreLoaded()>/$stack33
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.Schema.getContent/0	<org.jsonschema2pojo.Schema: com.fasterxml.jackson.databind.JsonNode getContent()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	92	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/schema#_91
<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/org.jsonschema2pojo.rules.RuleFactory.getEnumRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getEnumRule()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>	97	<org.jsonschema2pojo.rules.SchemaRuleTest: void enumAsRootIsGeneratedCorrectly()>/$stack24
<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>	120	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/mockGenerationConfig#_119
<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/org.jsonschema2pojo.rules.RuleFactory.getSchemaStore/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.SchemaStore getSchemaStore()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>	122	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/$stack18
<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>	123	<org.jsonschema2pojo.rules.SchemaRuleTest: void existingTypeIsUsedWhenTypeIsAlreadyGenerated()>/$stack22
<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>	64	<org.hamcrest.core.IsEqual: boolean isArray(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>	69	<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/$stack17
<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr305Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr305Annotations()>	<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>	74	<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/$stack20
<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr305Annotations/1	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr305Annotations()>	<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>	79	<org.jsonschema2pojo.rules.RequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	97	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack3
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	99	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack11
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>	103	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMinLength()>/$stack33
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	115	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack3
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	117	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack11
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>	121	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxLength()>/$stack33
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	42	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	133	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack5
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	137	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack16
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	138	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/maxSubNode#_136
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>	144	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLength()>/$stack53
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	62	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	62	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/$stack5
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JFieldVar.type/1	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	75	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JType.isArray/0	<com.sun.codemodel.JType: boolean isArray()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	75	<org.jsonschema2pojo.rules.MinLengthMaxLengthRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/$stack18
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	156	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack5
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	160	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack16
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	161	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/maxSubNode#_159
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>	167	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack53
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	179	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>	182	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>	193	<org.jsonschema2pojo.rules.MinItemsMaxItemsRuleTest: void jsrDisable()>/$stack2
<org.hamcrest.core.IsInstanceOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.hamcrest.core.IsInstanceOf: boolean matches(java.lang.Object,org.hamcrest.Description)>	50	<org.hamcrest.core.IsInstanceOf: boolean matches(java.lang.Object,org.hamcrest.Description)>/item#_0
<org.jsonschema2pojo.rules.FormatRuleArraysTest: void <init>(java.lang.String,java.lang.Class)>/org.jsonschema2pojo.GenerationConfig.getFormatTypeMapping/0	<org.jsonschema2pojo.GenerationConfig: java.util.Map getFormatTypeMapping()>	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void <init>(java.lang.String,java.lang.Class)>	59	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void <init>(java.lang.String,java.lang.Class)>/$stack5
<org.jsonschema2pojo.rules.FormatRuleArraysTest: void useArraysWithCustomTypeMapping()>/com.sun.codemodel.JType.isArray/0	<com.sun.codemodel.JType: boolean isArray()>	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void useArraysWithCustomTypeMapping()>	67	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void useArraysWithCustomTypeMapping()>/result#_65
<org.jsonschema2pojo.rules.FormatRuleArraysTest: void useArraysWithCustomTypeMapping()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void useArraysWithCustomTypeMapping()>	71	<org.jsonschema2pojo.rules.FormatRuleArraysTest: void useArraysWithCustomTypeMapping()>/result#_65
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getTypeRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTypeRule()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	109	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack82
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getLogger/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.RuleLogger getLogger()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	118	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack87
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getTitleRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTitleRule()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	126	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack76
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getDescriptionRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getDescriptionRule()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	130	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack70
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getCommentRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getCommentRule()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	134	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack64
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getTypeRule/1	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTypeRule()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	148	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack49
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	153	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack23
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/1	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	153	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack41
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeGeneratedAnnotation/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeGeneratedAnnotation()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	153	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack42
<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getAnnotator/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.Annotator getAnnotator()>	<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	186	<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack26
<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getTitleRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTitleRule()>	<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	193	<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack41
<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getDescriptionRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getDescriptionRule()>	<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	198	<org.jsonschema2pojo.rules.EnumRule: void addEnumConstants(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack37
<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/org.jsonschema2pojo.rules.RuleFactory.getLogger/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.RuleLogger getLogger()>	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>	240	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinition(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/$stack12
<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinitionWithJavaEnumsExtension(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/org.jsonschema2pojo.rules.RuleFactory.getLogger/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.RuleLogger getLogger()>	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinitionWithJavaEnumsExtension(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>	321	<org.jsonschema2pojo.rules.EnumRule: org.jsonschema2pojo.model.EnumDefinition buildEnumDefinitionWithJavaEnumsExtension(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType)>/$stack36
<org.jsonschema2pojo.rules.EnumRule: void addFactoryMethod(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>/org.jsonschema2pojo.rules.RuleFactory.getAnnotator/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.Annotator getAnnotator()>	<org.jsonschema2pojo.rules.EnumRule: void addFactoryMethod(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>	409	<org.jsonschema2pojo.rules.EnumRule: void addFactoryMethod(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>/$stack31
<org.jsonschema2pojo.rules.EnumRule: void addFieldAccessors(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar)>/org.jsonschema2pojo.rules.RuleFactory.getAnnotator/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.Annotator getAnnotator()>	<org.jsonschema2pojo.rules.EnumRule: void addFieldAccessors(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar)>	418	<org.jsonschema2pojo.rules.EnumRule: void addFieldAccessors(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JFieldVar)>/$stack11
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JFieldVar addQuickLookupMap(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JFieldVar addQuickLookupMap(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>	425	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JFieldVar addQuickLookupMap(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>/backingType#_423
<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JFieldVar addQuickLookupMap(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.boxify/1	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JFieldVar addQuickLookupMap(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>	428	<org.jsonschema2pojo.rules.EnumRule: com.sun.codemodel.JFieldVar addQuickLookupMap(org.jsonschema2pojo.model.EnumDefinition,com.sun.codemodel.JDefinedClass)>/backingType#_423
<org.jsonschema2pojo.rules.EnumRule: boolean isString(com.sun.codemodel.JType)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.EnumRule: boolean isString(com.sun.codemodel.JType)>	454	<org.jsonschema2pojo.rules.EnumRule: boolean isString(com.sun.codemodel.JType)>/type#_0
<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>/org.jsonschema2pojo.rules.RuleFactory.getNameHelper/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.util.NameHelper getNameHelper()>	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>	458	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>/$stack9
<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>/org.jsonschema2pojo.rules.RuleFactory.getNameHelper/1	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.util.NameHelper getNameHelper()>	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>	459	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>/$stack12
<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>/org.jsonschema2pojo.rules.RuleFactory.getNameHelper/2	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.util.NameHelper getNameHelper()>	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>	460	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getEnumName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer)>/$stack16
<org.jsonschema2pojo.rules.EnumRule: java.lang.String getConstantName(java.lang.String,java.lang.String)>/org.jsonschema2pojo.rules.RuleFactory.getNameHelper/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.util.NameHelper getNameHelper()>	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getConstantName(java.lang.String,java.lang.String)>	497	<org.jsonschema2pojo.rules.EnumRule: java.lang.String getConstantName(java.lang.String,java.lang.String)>/$stack22
<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/org.jsonschema2pojo.GenerationConfig.isIncludeGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeGetters()>	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>	54	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/$stack2
<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/org.jsonschema2pojo.GenerationConfig.isUseOptionalForGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseOptionalForGetters()>	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>	55	<org.jsonschema2pojo.rules.PropertyRuleTest: void setup()>/$stack8
<org.jsonschema2pojo.rules.PropertyRuleTest: java.lang.String getGeneratedMethodTypeName(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.name/0	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.PropertyRuleTest: java.lang.String getGeneratedMethodTypeName(com.sun.codemodel.JDefinedClass)>	59	<org.jsonschema2pojo.rules.PropertyRuleTest: java.lang.String getGeneratedMethodTypeName(com.sun.codemodel.JDefinedClass)>/$stack4
<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/org.jsonschema2pojo.Schema.getContent/0	<org.jsonschema2pojo.Schema: com.fasterxml.jackson.databind.JsonNode getContent()>	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>	64	<org.jsonschema2pojo.rules.PropertyRuleTest: org.jsonschema2pojo.Schema getMockedSchema(com.fasterxml.jackson.databind.node.ObjectNode)>/schema#_63
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JType.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	89	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/superType#_88
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isGenerateBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isGenerateBuilders()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	117	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack21
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isUseInnerClassBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseInnerClassBuilders()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	117	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack87
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeGeneratedAnnotation/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeGeneratedAnnotation()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	135	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack38
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeToString/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeToString()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	138	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack41
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeHashcodeAndEquals/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeHashcodeAndEquals()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	142	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack44
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isParcelable/0	<org.jsonschema2pojo.GenerationConfig: boolean isParcelable()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	147	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack47
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeConstructors/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeConstructors()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	151	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack50
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isSerializable/0	<org.jsonschema2pojo.GenerationConfig: boolean isSerializable()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>	156	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage,org.jsonschema2pojo.Schema)>/$stack53
<org.jsonschema2pojo.rules.ObjectRule: void addParcelSupport(com.sun.codemodel.JDefinedClass)>/org.jsonschema2pojo.GenerationConfig.isIncludeConstructors/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeConstructors()>	<org.jsonschema2pojo.rules.ObjectRule: void addParcelSupport(com.sun.codemodel.JDefinedClass)>	172	<org.jsonschema2pojo.rules.ObjectRule: void addParcelSupport(com.sun.codemodel.JDefinedClass)>/$stack10
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JDefinedClass createClass(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/org.jsonschema2pojo.GenerationConfig.getClassNamePrefix/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getClassNamePrefix()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JDefinedClass createClass(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>	237	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JDefinedClass createClass(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/$stack41
<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JDefinedClass createClass(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/org.jsonschema2pojo.GenerationConfig.getClassNameSuffix/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getClassNameSuffix()>	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JDefinedClass createClass(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>	237	<org.jsonschema2pojo.rules.ObjectRule: com.sun.codemodel.JDefinedClass createClass(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/$stack47
<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/org.jsonschema2pojo.GenerationConfig.getToStringExcludes/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String[] getToStringExcludes()>	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>	266	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/$stack18
<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JClass.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>	285	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/$stack49
<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>	324	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/$stack96
<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.isArray/0	<com.sun.codemodel.JType: boolean isArray()>	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>	326	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/$stack98
<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.elementType/0	<com.sun.codemodel.JType: com.sun.codemodel.JType elementType()>	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>	328	<org.jsonschema2pojo.rules.ObjectRule: void addToString(com.sun.codemodel.JDefinedClass)>/$stack115
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	388	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack48
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.name/0	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	389	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack76
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.name/1	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	391	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack80
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.name/2	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	393	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack84
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.name/3	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	395	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack88
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.name/4	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	395	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack92
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.isArray/0	<com.sun.codemodel.JType: boolean isArray()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	405	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack50
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.elementType/0	<com.sun.codemodel.JType: com.sun.codemodel.JType elementType()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	406	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack62
<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JClass.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	419	<org.jsonschema2pojo.rules.ObjectRule: void addHashCode(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack26
<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JClass.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	474	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack36
<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	488	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack53
<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.name/0	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	489	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack78
<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.name/1	<com.sun.codemodel.JType: java.lang.String name()>	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	489	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack82
<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.isArray/0	<com.sun.codemodel.JType: boolean isArray()>	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	500	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack55
<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.elementType/0	<com.sun.codemodel.JType: com.sun.codemodel.JType elementType()>	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	501	<org.jsonschema2pojo.rules.ObjectRule: void addEquals(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack66
<com.fasterxml.jackson.databind.util.ClassUtil: boolean hasClass(java.lang.Object,java.lang.Class)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.util.ClassUtil: boolean hasClass(java.lang.Object,java.lang.Class)>	299	<com.fasterxml.jackson.databind.util.ClassUtil: boolean hasClass(java.lang.Object,java.lang.Class)>/inst#_0
<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.erasure/0	<com.sun.codemodel.JType: com.sun.codemodel.JType erasure()>	<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>	104	<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/$stack7
<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.owner/0	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>	104	<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/$stack9
<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.owner/1	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>	110	<org.jsonschema2pojo.Jackson2Annotator: void propertyField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/$stack22
<org.jsonschema2pojo.Jackson2Annotator: void dateField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.Jackson2Annotator: void dateField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	176	<org.jsonschema2pojo.Jackson2Annotator: void dateField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack12
<org.jsonschema2pojo.Jackson2Annotator: void timeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.Jackson2Annotator: void timeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	195	<org.jsonschema2pojo.Jackson2Annotator: void timeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack12
<org.jsonschema2pojo.Jackson2Annotator: void dateTimeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.Jackson2Annotator: void dateTimeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	215	<org.jsonschema2pojo.Jackson2Annotator: void dateTimeField(com.sun.codemodel.JFieldVar,com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/$stack14
<com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>	218	<com.fasterxml.jackson.databind.type.ArrayType: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.util.NameHelper: java.lang.String capitalizeTrailingWords(java.lang.String)>/org.jsonschema2pojo.GenerationConfig.getPropertyWordDelimiters/0	<org.jsonschema2pojo.GenerationConfig: char[] getPropertyWordDelimiters()>	<org.jsonschema2pojo.util.NameHelper: java.lang.String capitalizeTrailingWords(java.lang.String)>	62	<org.jsonschema2pojo.util.NameHelper: java.lang.String capitalizeTrailingWords(java.lang.String)>/$stack8
<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/org.jsonschema2pojo.GenerationConfig.isUseTitleAsClassname/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseTitleAsClassname()>	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>	182	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>/$stack5
<org.jsonschema2pojo.util.NameHelper: java.lang.String getGetterName(java.lang.String,com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.owner/0	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.util.NameHelper: java.lang.String getGetterName(java.lang.String,com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	202	<org.jsonschema2pojo.util.NameHelper: java.lang.String getGetterName(java.lang.String,com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/type#_0
<org.jsonschema2pojo.util.NameHelper: java.lang.String getBaseBuilderClassName(com.sun.codemodel.JClass)>/com.sun.codemodel.JClass.name/0	<com.sun.codemodel.JClass: java.lang.String name()>	<org.jsonschema2pojo.util.NameHelper: java.lang.String getBaseBuilderClassName(com.sun.codemodel.JClass)>	226	<org.jsonschema2pojo.util.NameHelper: java.lang.String getBaseBuilderClassName(com.sun.codemodel.JClass)>/outerClass#_0
<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/org.jsonschema2pojo.GenerationConfig.getClassNamePrefix/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getClassNamePrefix()>	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>	246	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/$stack10
<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/org.jsonschema2pojo.GenerationConfig.getClassNameSuffix/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getClassNameSuffix()>	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>	247	<org.jsonschema2pojo.util.NameHelper: java.lang.String getClassName(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JPackage)>/$stack12
<com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>	80	<com.fasterxml.jackson.databind.type.ClassKey: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava7(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getTargetVersion/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getTargetVersion()>	<org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava7(org.jsonschema2pojo.GenerationConfig)>	31	<org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava7(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava8(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getTargetVersion/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getTargetVersion()>	<org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava8(org.jsonschema2pojo.GenerationConfig)>	35	<org.jsonschema2pojo.util.LanguageFeatures: boolean canUseJava8(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock()>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock()>	85	<org.mockito.internal.util.DefaultMockingDetails: void assertGoodMock()>/$stack6
<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	39	<org.jsonschema2pojo.rules.MinimumMaximumRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.MinimumMaximumRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	58	<org.jsonschema2pojo.rules.MinimumMaximumRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.jsonschema2pojo.rules.MinimumMaximumRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.MinimumMaximumRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	58	<org.jsonschema2pojo.rules.MinimumMaximumRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/$stack3
<com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>	302	<com.fasterxml.jackson.databind.type.MapLikeType: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	97	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack3
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	99	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack11
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>	103	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMinLength()>/$stack33
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	115	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack3
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	117	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack11
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>	121	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxLength()>/$stack33
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	133	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack5
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	137	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack16
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	138	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/maxSubNode#_136
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>	144	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLength()>/$stack53
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	156	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack5
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	160	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack16
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	161	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/maxSubNode#_159
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>	167	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testMaxAndMinLengthGenericsOnType()>/$stack53
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	179	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>	182	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>	193	<org.jsonschema2pojo.rules.MinLengthMaxLengthRuleTest: void jsrDisable()>/$stack2
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	100	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack3
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	102	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack12
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>	106	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMinimum()>/$stack32
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	119	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack3
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	121	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack12
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>	125	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximum()>/$stack32
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	138	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack5
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	142	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack18
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.fasterxml.jackson.databind.JsonNode.asText/1	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	143	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/maxSubNode#_141
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>	150	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testMaximumAndMinimum()>/$stack56
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	163	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>	166	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>	178	<org.jsonschema2pojo.rules.MinimumMaximumRuleTest: void jsrDisable()>/$stack2
<com.sun.codemodel.JClass: com.sun.codemodel.JClass narrow(com.sun.codemodel.JType)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<com.sun.codemodel.JClass: com.sun.codemodel.JClass narrow(com.sun.codemodel.JType)>	284	<com.sun.codemodel.JClass: com.sun.codemodel.JClass narrow(com.sun.codemodel.JType)>/type#_0
<com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>	118	<com.fasterxml.jackson.databind.util.TypeKey: boolean equals(java.lang.Object)>/o#_0
<com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>	250	<com.fasterxml.jackson.databind.type.CollectionLikeType: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.MediaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JType.owner/0	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.MediaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>	73	<org.jsonschema2pojo.rules.MediaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>/baseType#_0
<org.jsonschema2pojo.util.ParcelableHelper: void addWriteToParcel(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.erasure/0	<com.sun.codemodel.JType: com.sun.codemodel.JType erasure()>	<org.jsonschema2pojo.util.ParcelableHelper: void addWriteToParcel(com.sun.codemodel.JDefinedClass)>	46	<org.jsonschema2pojo.util.ParcelableHelper: void addWriteToParcel(com.sun.codemodel.JDefinedClass)>/$stack22
<org.jsonschema2pojo.util.ParcelableHelper: void addConstructorFromParcel(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.erasure/0	<com.sun.codemodel.JType: com.sun.codemodel.JType erasure()>	<org.jsonschema2pojo.util.ParcelableHelper: void addConstructorFromParcel(com.sun.codemodel.JDefinedClass)>	81	<org.jsonschema2pojo.util.ParcelableHelper: void addConstructorFromParcel(com.sun.codemodel.JDefinedClass)>/$stack19
<org.jsonschema2pojo.util.ParcelableHelper: void addConstructorFromParcel(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JType.erasure/1	<com.sun.codemodel.JType: com.sun.codemodel.JType erasure()>	<org.jsonschema2pojo.util.ParcelableHelper: void addConstructorFromParcel(com.sun.codemodel.JDefinedClass)>	91	<org.jsonschema2pojo.util.ParcelableHelper: void addConstructorFromParcel(com.sun.codemodel.JDefinedClass)>/$stack29
<org.jsonschema2pojo.util.ParcelableHelper: boolean extendsParcelable(com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JClass._implements/0	<com.sun.codemodel.JClass: java.util.Iterator _implements()>	<org.jsonschema2pojo.util.ParcelableHelper: boolean extendsParcelable(com.sun.codemodel.JDefinedClass)>	114	<org.jsonschema2pojo.util.ParcelableHelper: boolean extendsParcelable(com.sun.codemodel.JDefinedClass)>/$stack12
<org.jsonschema2pojo.util.ParcelableHelper: java.lang.String getListType(com.sun.codemodel.JType)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.util.ParcelableHelper: java.lang.String getListType(com.sun.codemodel.JType)>	127	<org.jsonschema2pojo.util.ParcelableHelper: java.lang.String getListType(com.sun.codemodel.JType)>/jType#_0
<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>	11	<org.hamcrest.internal.ArrayIterator: void <init>(java.lang.Object)>/array#_0
<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>	61	<org.mockito.internal.util.MockUtil: org.mockito.invocation.MockHandler getMockHandler(java.lang.Object)>/mock#_0
<org.jsonschema2pojo.rules.FormatRuleTest: void applyGeneratesTypeFromFormatValue()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.FormatRuleTest: void applyGeneratesTypeFromFormatValue()>	81	<org.jsonschema2pojo.rules.FormatRuleTest: void applyGeneratesTypeFromFormatValue()>/result#_79
<org.jsonschema2pojo.rules.NotRequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.getContent/0	<org.jsonschema2pojo.Schema: com.fasterxml.jackson.databind.JsonNode getContent()>	<org.jsonschema2pojo.rules.NotRequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>	72	<org.jsonschema2pojo.rules.NotRequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.NotRequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr305Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr305Annotations()>	<org.jsonschema2pojo.rules.NotRequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>	83	<org.jsonschema2pojo.rules.NotRequiredRule: com.sun.codemodel.JDocCommentable apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDocCommentable,org.jsonschema2pojo.Schema)>/$stack12
<japa.parser.ast.visitor.EqualsVisitor: boolean nodeEquals(japa.parser.ast.Node,japa.parser.ast.Node)>/java.lang.Object.getClass/1	<java.lang.Object: java.lang.Class getClass()>	<japa.parser.ast.visitor.EqualsVisitor: boolean nodeEquals(japa.parser.ast.Node,japa.parser.ast.Node)>	158	<japa.parser.ast.visitor.EqualsVisitor: boolean nodeEquals(japa.parser.ast.Node,japa.parser.ast.Node)>/n2#_0
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node)>/japa.parser.ast.TypeParameter.getName/1	<japa.parser.ast.TypeParameter: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node)>	228	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node)>/n2#_226
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node)>/japa.parser.ast.TypeParameter.getTypeBound/1	<japa.parser.ast.TypeParameter: java.util.List getTypeBound()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node)>	232	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.TypeParameter,japa.parser.ast.Node)>/n2#_226
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.LineComment,japa.parser.ast.Node)>/japa.parser.ast.LineComment.getContent/1	<japa.parser.ast.Comment: java.lang.String getContent()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.LineComment,japa.parser.ast.Node)>	242	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.LineComment,japa.parser.ast.Node)>/n2#_240
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.BlockComment,japa.parser.ast.Node)>/japa.parser.ast.BlockComment.getContent/1	<japa.parser.ast.Comment: java.lang.String getContent()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.BlockComment,japa.parser.ast.Node)>	252	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.BlockComment,japa.parser.ast.Node)>/n2#_250
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.getModifiers/1	<japa.parser.ast.body.TypeDeclaration: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	264	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.isInterface/1	<japa.parser.ast.body.ClassOrInterfaceDeclaration: boolean isInterface()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	268	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.getName/1	<japa.parser.ast.body.TypeDeclaration: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	272	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	276	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.getTypeParameters/1	<japa.parser.ast.body.ClassOrInterfaceDeclaration: java.util.List getTypeParameters()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	280	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.getExtends/1	<japa.parser.ast.body.ClassOrInterfaceDeclaration: java.util.List getExtends()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	284	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.getImplements/1	<japa.parser.ast.body.ClassOrInterfaceDeclaration: java.util.List getImplements()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	288	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ClassOrInterfaceDeclaration.getMembers/1	<japa.parser.ast.body.TypeDeclaration: java.util.List getMembers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>	292	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ClassOrInterfaceDeclaration,japa.parser.ast.Node)>/n2#_260
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumDeclaration.getModifiers/1	<japa.parser.ast.body.TypeDeclaration: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>	304	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/n2#_300
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumDeclaration.getName/1	<japa.parser.ast.body.TypeDeclaration: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>	308	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/n2#_300
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>	312	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/n2#_300
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumDeclaration.getImplements/1	<japa.parser.ast.body.EnumDeclaration: java.util.List getImplements()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>	316	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/n2#_300
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumDeclaration.getEntries/1	<japa.parser.ast.body.EnumDeclaration: java.util.List getEntries()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>	320	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/n2#_300
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumDeclaration.getMembers/1	<japa.parser.ast.body.TypeDeclaration: java.util.List getMembers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>	324	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumDeclaration,japa.parser.ast.Node)>/n2#_300
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumConstantDeclaration.getName/1	<japa.parser.ast.body.EnumConstantDeclaration: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>	340	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/n2#_336
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumConstantDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>	344	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/n2#_336
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumConstantDeclaration.getArgs/1	<japa.parser.ast.body.EnumConstantDeclaration: java.util.List getArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>	348	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/n2#_336
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.EnumConstantDeclaration.getClassBody/1	<japa.parser.ast.body.EnumConstantDeclaration: java.util.List getClassBody()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>	352	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.EnumConstantDeclaration,japa.parser.ast.Node)>/n2#_336
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationDeclaration.getModifiers/1	<japa.parser.ast.body.TypeDeclaration: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>	364	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/n2#_360
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationDeclaration.getName/1	<japa.parser.ast.body.TypeDeclaration: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>	368	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/n2#_360
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>	372	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/n2#_360
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationDeclaration.getMembers/1	<japa.parser.ast.body.TypeDeclaration: java.util.List getMembers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>	376	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationDeclaration,japa.parser.ast.Node)>/n2#_360
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationMemberDeclaration.getModifiers/1	<japa.parser.ast.body.AnnotationMemberDeclaration: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>	388	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/n2#_384
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationMemberDeclaration.getName/1	<japa.parser.ast.body.AnnotationMemberDeclaration: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>	392	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/n2#_384
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationMemberDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>	396	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/n2#_384
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationMemberDeclaration.getDefaultValue/1	<japa.parser.ast.body.AnnotationMemberDeclaration: japa.parser.ast.expr.Expression getDefaultValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>	400	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/n2#_384
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.AnnotationMemberDeclaration.getType/1	<japa.parser.ast.body.AnnotationMemberDeclaration: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>	404	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.AnnotationMemberDeclaration,japa.parser.ast.Node)>/n2#_384
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.FieldDeclaration.getModifiers/1	<japa.parser.ast.body.FieldDeclaration: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>	416	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/n2#_412
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.FieldDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>	420	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/n2#_412
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.FieldDeclaration.getType/1	<japa.parser.ast.body.FieldDeclaration: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>	424	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/n2#_412
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.FieldDeclaration.getVariables/1	<japa.parser.ast.body.FieldDeclaration: java.util.List getVariables()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>	428	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.FieldDeclaration,japa.parser.ast.Node)>/n2#_412
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node)>/japa.parser.ast.body.VariableDeclarator.getId/1	<japa.parser.ast.body.VariableDeclarator: japa.parser.ast.body.VariableDeclaratorId getId()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node)>	438	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node)>/n2#_436
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node)>/japa.parser.ast.body.VariableDeclarator.getInit/1	<japa.parser.ast.body.VariableDeclarator: japa.parser.ast.expr.Expression getInit()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node)>	442	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclarator,japa.parser.ast.Node)>/n2#_436
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node)>/japa.parser.ast.body.VariableDeclaratorId.getArrayCount/1	<japa.parser.ast.body.VariableDeclaratorId: int getArrayCount()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node)>	452	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node)>/n2#_450
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node)>/japa.parser.ast.body.VariableDeclaratorId.getName/1	<japa.parser.ast.body.VariableDeclaratorId: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node)>	456	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.VariableDeclaratorId,japa.parser.ast.Node)>/n2#_450
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ConstructorDeclaration.getModifiers/1	<japa.parser.ast.body.ConstructorDeclaration: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>	468	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/n2#_464
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ConstructorDeclaration.getName/1	<japa.parser.ast.body.ConstructorDeclaration: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>	472	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/n2#_464
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ConstructorDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>	476	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/n2#_464
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ConstructorDeclaration.getBlock/1	<japa.parser.ast.body.ConstructorDeclaration: japa.parser.ast.stmt.BlockStmt getBlock()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>	480	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/n2#_464
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ConstructorDeclaration.getParameters/1	<japa.parser.ast.body.ConstructorDeclaration: java.util.List getParameters()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>	484	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/n2#_464
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ConstructorDeclaration.getThrows/1	<japa.parser.ast.body.ConstructorDeclaration: java.util.List getThrows()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>	488	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/n2#_464
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.ConstructorDeclaration.getTypeParameters/1	<japa.parser.ast.body.ConstructorDeclaration: java.util.List getTypeParameters()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>	492	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.ConstructorDeclaration,japa.parser.ast.Node)>/n2#_464
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getModifiers/1	<japa.parser.ast.body.MethodDeclaration: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	504	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getArrayCount/1	<japa.parser.ast.body.MethodDeclaration: int getArrayCount()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	508	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getName/1	<japa.parser.ast.body.MethodDeclaration: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	512	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getType/1	<japa.parser.ast.body.MethodDeclaration: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	516	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	520	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getBody/1	<japa.parser.ast.body.MethodDeclaration: japa.parser.ast.stmt.BlockStmt getBody()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	524	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getParameters/1	<japa.parser.ast.body.MethodDeclaration: java.util.List getParameters()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	528	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getThrows/1	<japa.parser.ast.body.MethodDeclaration: java.util.List getThrows()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	532	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.MethodDeclaration.getTypeParameters/1	<japa.parser.ast.body.MethodDeclaration: java.util.List getTypeParameters()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>	536	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MethodDeclaration,japa.parser.ast.Node)>/n2#_500
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.Parameter,japa.parser.ast.Node)>/japa.parser.ast.body.Parameter.getType/1	<japa.parser.ast.body.Parameter: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.Parameter,japa.parser.ast.Node)>	545	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.Parameter,japa.parser.ast.Node)>/n2#_544
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node)>/japa.parser.ast.body.MultiTypeParameter.getTypes/1	<japa.parser.ast.body.MultiTypeParameter: java.util.List getTypes()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node)>	553	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node)>/n2#_552
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node)>/japa.parser.ast.body.MultiTypeParameter.getTypes/3	<japa.parser.ast.body.MultiTypeParameter: java.util.List getTypes()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node)>	557	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.MultiTypeParameter,japa.parser.ast.Node)>/n2#_552
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>/japa.parser.ast.body.BaseParameter.getModifiers/1	<japa.parser.ast.body.BaseParameter: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>	569	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>/n2#_567
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>/japa.parser.ast.body.BaseParameter.getId/1	<japa.parser.ast.body.BaseParameter: japa.parser.ast.body.VariableDeclaratorId getId()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>	573	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>/n2#_567
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>/japa.parser.ast.body.BaseParameter.getAnnotations/1	<japa.parser.ast.body.BaseParameter: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>	577	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.BaseParameter,japa.parser.ast.Node)>/n2#_567
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.InitializerDeclaration.getBlock/1	<japa.parser.ast.body.InitializerDeclaration: japa.parser.ast.stmt.BlockStmt getBlock()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node)>	591	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node)>/n2#_589
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node)>/japa.parser.ast.body.InitializerDeclaration.getAnnotations/1	<japa.parser.ast.body.BodyDeclaration: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node)>	595	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.InitializerDeclaration,japa.parser.ast.Node)>/n2#_589
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.JavadocComment,japa.parser.ast.Node)>/japa.parser.ast.body.JavadocComment.getContent/1	<japa.parser.ast.Comment: java.lang.String getContent()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.JavadocComment,japa.parser.ast.Node)>	605	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.body.JavadocComment,japa.parser.ast.Node)>/n2#_603
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>/japa.parser.ast.type.ClassOrInterfaceType.getName/1	<japa.parser.ast.type.ClassOrInterfaceType: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>	615	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>/n2#_613
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>/japa.parser.ast.type.ClassOrInterfaceType.getScope/1	<japa.parser.ast.type.ClassOrInterfaceType: japa.parser.ast.type.ClassOrInterfaceType getScope()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>	619	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>/n2#_613
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>/japa.parser.ast.type.ClassOrInterfaceType.getTypeArgs/1	<japa.parser.ast.type.ClassOrInterfaceType: java.util.List getTypeArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>	623	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ClassOrInterfaceType,japa.parser.ast.Node)>/n2#_613
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.PrimitiveType,japa.parser.ast.Node)>/japa.parser.ast.type.PrimitiveType.getType/1	<japa.parser.ast.type.PrimitiveType: japa.parser.ast.type.PrimitiveType$Primitive getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.PrimitiveType,japa.parser.ast.Node)>	633	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.PrimitiveType,japa.parser.ast.Node)>/n2#_631
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node)>/japa.parser.ast.type.ReferenceType.getArrayCount/1	<japa.parser.ast.type.ReferenceType: int getArrayCount()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node)>	643	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node)>/n2#_641
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node)>/japa.parser.ast.type.ReferenceType.getType/1	<japa.parser.ast.type.ReferenceType: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node)>	647	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.ReferenceType,japa.parser.ast.Node)>/n2#_641
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node)>/japa.parser.ast.type.WildcardType.getExtends/1	<japa.parser.ast.type.WildcardType: japa.parser.ast.type.ReferenceType getExtends()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node)>	661	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node)>/n2#_659
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node)>/japa.parser.ast.type.WildcardType.getSuper/1	<japa.parser.ast.type.WildcardType: japa.parser.ast.type.ReferenceType getSuper()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node)>	665	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.type.WildcardType,japa.parser.ast.Node)>/n2#_659
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ArrayAccessExpr.getName/1	<japa.parser.ast.expr.ArrayAccessExpr: japa.parser.ast.expr.Expression getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node)>	675	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node)>/n2#_673
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ArrayAccessExpr.getIndex/1	<japa.parser.ast.expr.ArrayAccessExpr: japa.parser.ast.expr.Expression getIndex()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node)>	679	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayAccessExpr,japa.parser.ast.Node)>/n2#_673
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ArrayCreationExpr.getArrayCount/1	<japa.parser.ast.expr.ArrayCreationExpr: int getArrayCount()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>	689	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/n2#_687
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ArrayCreationExpr.getType/1	<japa.parser.ast.expr.ArrayCreationExpr: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>	693	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/n2#_687
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ArrayCreationExpr.getInitializer/1	<japa.parser.ast.expr.ArrayCreationExpr: japa.parser.ast.expr.ArrayInitializerExpr getInitializer()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>	697	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/n2#_687
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ArrayCreationExpr.getDimensions/1	<japa.parser.ast.expr.ArrayCreationExpr: java.util.List getDimensions()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>	701	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayCreationExpr,japa.parser.ast.Node)>/n2#_687
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayInitializerExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ArrayInitializerExpr.getValues/1	<japa.parser.ast.expr.ArrayInitializerExpr: java.util.List getValues()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayInitializerExpr,japa.parser.ast.Node)>	711	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ArrayInitializerExpr,japa.parser.ast.Node)>/n2#_709
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.AssignExpr.getOperator/1	<japa.parser.ast.expr.AssignExpr: japa.parser.ast.expr.AssignExpr$Operator getOperator()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>	721	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>/n2#_719
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.AssignExpr.getTarget/1	<japa.parser.ast.expr.AssignExpr: japa.parser.ast.expr.Expression getTarget()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>	725	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>/n2#_719
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.AssignExpr.getValue/1	<japa.parser.ast.expr.AssignExpr: japa.parser.ast.expr.Expression getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>	729	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.AssignExpr,japa.parser.ast.Node)>/n2#_719
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.BinaryExpr.getOperator/1	<japa.parser.ast.expr.BinaryExpr: japa.parser.ast.expr.BinaryExpr$Operator getOperator()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>	739	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>/n2#_737
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.BinaryExpr.getLeft/1	<japa.parser.ast.expr.BinaryExpr: japa.parser.ast.expr.Expression getLeft()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>	743	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>/n2#_737
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.BinaryExpr.getRight/1	<japa.parser.ast.expr.BinaryExpr: japa.parser.ast.expr.Expression getRight()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>	747	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BinaryExpr,japa.parser.ast.Node)>/n2#_737
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.CastExpr.getType/1	<japa.parser.ast.expr.CastExpr: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node)>	757	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node)>/n2#_755
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.CastExpr.getExpr/1	<japa.parser.ast.expr.CastExpr: japa.parser.ast.expr.Expression getExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node)>	761	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CastExpr,japa.parser.ast.Node)>/n2#_755
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ClassExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ClassExpr.getType/1	<japa.parser.ast.expr.ClassExpr: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ClassExpr,japa.parser.ast.Node)>	771	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ClassExpr,japa.parser.ast.Node)>/n2#_769
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ConditionalExpr.getCondition/1	<japa.parser.ast.expr.ConditionalExpr: japa.parser.ast.expr.Expression getCondition()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>	781	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>/n2#_779
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ConditionalExpr.getThenExpr/1	<japa.parser.ast.expr.ConditionalExpr: japa.parser.ast.expr.Expression getThenExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>	785	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>/n2#_779
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ConditionalExpr.getElseExpr/1	<japa.parser.ast.expr.ConditionalExpr: japa.parser.ast.expr.Expression getElseExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>	789	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ConditionalExpr,japa.parser.ast.Node)>/n2#_779
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.EnclosedExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.EnclosedExpr.getInner/1	<japa.parser.ast.expr.EnclosedExpr: japa.parser.ast.expr.Expression getInner()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.EnclosedExpr,japa.parser.ast.Node)>	799	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.EnclosedExpr,japa.parser.ast.Node)>/n2#_797
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.FieldAccessExpr.getScope/1	<japa.parser.ast.expr.FieldAccessExpr: japa.parser.ast.expr.Expression getScope()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>	809	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>/n2#_807
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.FieldAccessExpr.getField/1	<japa.parser.ast.expr.FieldAccessExpr: java.lang.String getField()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>	813	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>/n2#_807
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.FieldAccessExpr.getTypeArgs/1	<japa.parser.ast.expr.FieldAccessExpr: java.util.List getTypeArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>	817	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.FieldAccessExpr,japa.parser.ast.Node)>/n2#_807
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.InstanceOfExpr.getExpr/1	<japa.parser.ast.expr.InstanceOfExpr: japa.parser.ast.expr.Expression getExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node)>	827	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node)>/n2#_825
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.InstanceOfExpr.getType/1	<japa.parser.ast.expr.InstanceOfExpr: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node)>	831	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.InstanceOfExpr,japa.parser.ast.Node)>/n2#_825
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.StringLiteralExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.StringLiteralExpr.getValue/1	<japa.parser.ast.expr.StringLiteralExpr: java.lang.String getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.StringLiteralExpr,japa.parser.ast.Node)>	841	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.StringLiteralExpr,japa.parser.ast.Node)>/n2#_839
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.IntegerLiteralExpr.getValue/1	<japa.parser.ast.expr.StringLiteralExpr: java.lang.String getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralExpr,japa.parser.ast.Node)>	851	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralExpr,japa.parser.ast.Node)>/n2#_849
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.LongLiteralExpr.getValue/1	<japa.parser.ast.expr.StringLiteralExpr: java.lang.String getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralExpr,japa.parser.ast.Node)>	861	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralExpr,japa.parser.ast.Node)>/n2#_859
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralMinValueExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.IntegerLiteralMinValueExpr.getValue/1	<japa.parser.ast.expr.StringLiteralExpr: java.lang.String getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralMinValueExpr,japa.parser.ast.Node)>	871	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.IntegerLiteralMinValueExpr,japa.parser.ast.Node)>/n2#_869
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralMinValueExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.LongLiteralMinValueExpr.getValue/1	<japa.parser.ast.expr.StringLiteralExpr: java.lang.String getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralMinValueExpr,japa.parser.ast.Node)>	881	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.LongLiteralMinValueExpr,japa.parser.ast.Node)>/n2#_879
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CharLiteralExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.CharLiteralExpr.getValue/1	<japa.parser.ast.expr.StringLiteralExpr: java.lang.String getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CharLiteralExpr,japa.parser.ast.Node)>	891	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.CharLiteralExpr,japa.parser.ast.Node)>/n2#_889
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.DoubleLiteralExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.DoubleLiteralExpr.getValue/1	<japa.parser.ast.expr.StringLiteralExpr: java.lang.String getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.DoubleLiteralExpr,japa.parser.ast.Node)>	901	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.DoubleLiteralExpr,japa.parser.ast.Node)>/n2#_899
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BooleanLiteralExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.BooleanLiteralExpr.getValue/1	<japa.parser.ast.expr.BooleanLiteralExpr: boolean getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BooleanLiteralExpr,japa.parser.ast.Node)>	911	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.BooleanLiteralExpr,japa.parser.ast.Node)>/n2#_909
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.MethodCallExpr.getScope/1	<japa.parser.ast.expr.MethodCallExpr: japa.parser.ast.expr.Expression getScope()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>	925	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/n2#_923
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.MethodCallExpr.getName/1	<japa.parser.ast.expr.MethodCallExpr: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>	929	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/n2#_923
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.MethodCallExpr.getArgs/1	<japa.parser.ast.expr.MethodCallExpr: java.util.List getArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>	933	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/n2#_923
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.MethodCallExpr.getTypeArgs/1	<japa.parser.ast.expr.MethodCallExpr: java.util.List getTypeArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>	937	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MethodCallExpr,japa.parser.ast.Node)>/n2#_923
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NameExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.NameExpr.getName/1	<japa.parser.ast.expr.NameExpr: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NameExpr,japa.parser.ast.Node)>	947	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NameExpr,japa.parser.ast.Node)>/n2#_945
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ObjectCreationExpr.getScope/1	<japa.parser.ast.expr.ObjectCreationExpr: japa.parser.ast.expr.Expression getScope()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>	957	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/n2#_955
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ObjectCreationExpr.getType/1	<japa.parser.ast.expr.ObjectCreationExpr: japa.parser.ast.type.ClassOrInterfaceType getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>	961	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/n2#_955
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ObjectCreationExpr.getAnonymousClassBody/1	<japa.parser.ast.expr.ObjectCreationExpr: java.util.List getAnonymousClassBody()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>	965	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/n2#_955
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ObjectCreationExpr.getArgs/1	<japa.parser.ast.expr.ObjectCreationExpr: java.util.List getArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>	969	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/n2#_955
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ObjectCreationExpr.getTypeArgs/1	<japa.parser.ast.expr.ObjectCreationExpr: java.util.List getTypeArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>	973	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ObjectCreationExpr,japa.parser.ast.Node)>/n2#_955
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.QualifiedNameExpr.getQualifier/1	<japa.parser.ast.expr.QualifiedNameExpr: japa.parser.ast.expr.NameExpr getQualifier()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node)>	983	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node)>/n2#_981
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.QualifiedNameExpr.getName/1	<japa.parser.ast.expr.NameExpr: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node)>	987	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.QualifiedNameExpr,japa.parser.ast.Node)>/n2#_981
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ThisExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.ThisExpr.getClassExpr/1	<japa.parser.ast.expr.ThisExpr: japa.parser.ast.expr.Expression getClassExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ThisExpr,japa.parser.ast.Node)>	997	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.ThisExpr,japa.parser.ast.Node)>/n2#_995
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SuperExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.SuperExpr.getClassExpr/1	<japa.parser.ast.expr.SuperExpr: japa.parser.ast.expr.Expression getClassExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SuperExpr,japa.parser.ast.Node)>	1007	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SuperExpr,japa.parser.ast.Node)>/n2#_1005
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.UnaryExpr.getOperator/1	<japa.parser.ast.expr.UnaryExpr: japa.parser.ast.expr.UnaryExpr$Operator getOperator()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node)>	1017	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node)>/n2#_1015
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.UnaryExpr.getExpr/1	<japa.parser.ast.expr.UnaryExpr: japa.parser.ast.expr.Expression getExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node)>	1021	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.UnaryExpr,japa.parser.ast.Node)>/n2#_1015
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.VariableDeclarationExpr.getModifiers/1	<japa.parser.ast.expr.VariableDeclarationExpr: int getModifiers()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>	1031	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/n2#_1029
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.VariableDeclarationExpr.getAnnotations/1	<japa.parser.ast.expr.VariableDeclarationExpr: java.util.List getAnnotations()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>	1035	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/n2#_1029
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.VariableDeclarationExpr.getType/1	<japa.parser.ast.expr.VariableDeclarationExpr: japa.parser.ast.type.Type getType()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>	1039	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/n2#_1029
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.VariableDeclarationExpr.getVars/1	<japa.parser.ast.expr.VariableDeclarationExpr: java.util.List getVars()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>	1043	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.VariableDeclarationExpr,japa.parser.ast.Node)>/n2#_1029
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MarkerAnnotationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.MarkerAnnotationExpr.getName/1	<japa.parser.ast.expr.AnnotationExpr: japa.parser.ast.expr.NameExpr getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MarkerAnnotationExpr,japa.parser.ast.Node)>	1053	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MarkerAnnotationExpr,japa.parser.ast.Node)>/n2#_1051
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.SingleMemberAnnotationExpr.getName/1	<japa.parser.ast.expr.AnnotationExpr: japa.parser.ast.expr.NameExpr getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node)>	1063	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node)>/n2#_1061
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.SingleMemberAnnotationExpr.getMemberValue/1	<japa.parser.ast.expr.SingleMemberAnnotationExpr: japa.parser.ast.expr.Expression getMemberValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node)>	1067	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.SingleMemberAnnotationExpr,japa.parser.ast.Node)>/n2#_1061
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.NormalAnnotationExpr.getName/1	<japa.parser.ast.expr.AnnotationExpr: japa.parser.ast.expr.NameExpr getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node)>	1077	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node)>/n2#_1075
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node)>/japa.parser.ast.expr.NormalAnnotationExpr.getPairs/1	<japa.parser.ast.expr.NormalAnnotationExpr: java.util.List getPairs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node)>	1081	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.NormalAnnotationExpr,japa.parser.ast.Node)>/n2#_1075
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node)>/japa.parser.ast.expr.MemberValuePair.getName/1	<japa.parser.ast.expr.MemberValuePair: java.lang.String getName()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node)>	1091	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node)>/n2#_1089
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node)>/japa.parser.ast.expr.MemberValuePair.getValue/1	<japa.parser.ast.expr.MemberValuePair: japa.parser.ast.expr.Expression getValue()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node)>	1095	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.expr.MemberValuePair,japa.parser.ast.Node)>/n2#_1089
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ExplicitConstructorInvocationStmt.getExpr/1	<japa.parser.ast.stmt.ExplicitConstructorInvocationStmt: japa.parser.ast.expr.Expression getExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>	1105	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>/n2#_1103
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ExplicitConstructorInvocationStmt.getArgs/1	<japa.parser.ast.stmt.ExplicitConstructorInvocationStmt: java.util.List getArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>	1109	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>/n2#_1103
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ExplicitConstructorInvocationStmt.getTypeArgs/1	<japa.parser.ast.stmt.ExplicitConstructorInvocationStmt: java.util.List getTypeArgs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>	1113	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExplicitConstructorInvocationStmt,japa.parser.ast.Node)>/n2#_1103
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TypeDeclarationStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.TypeDeclarationStmt.getTypeDeclaration/1	<japa.parser.ast.stmt.TypeDeclarationStmt: japa.parser.ast.body.TypeDeclaration getTypeDeclaration()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TypeDeclarationStmt,japa.parser.ast.Node)>	1123	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TypeDeclarationStmt,japa.parser.ast.Node)>/n2#_1121
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.AssertStmt.getCheck/1	<japa.parser.ast.stmt.AssertStmt: japa.parser.ast.expr.Expression getCheck()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node)>	1133	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node)>/n2#_1131
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.AssertStmt.getMessage/1	<japa.parser.ast.stmt.AssertStmt: japa.parser.ast.expr.Expression getMessage()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node)>	1137	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.AssertStmt,japa.parser.ast.Node)>/n2#_1131
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BlockStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.BlockStmt.getStmts/1	<japa.parser.ast.stmt.BlockStmt: java.util.List getStmts()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BlockStmt,japa.parser.ast.Node)>	1147	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BlockStmt,japa.parser.ast.Node)>/n2#_1145
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.LabeledStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.LabeledStmt.getStmt/1	<japa.parser.ast.stmt.LabeledStmt: japa.parser.ast.stmt.Statement getStmt()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.LabeledStmt,japa.parser.ast.Node)>	1157	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.LabeledStmt,japa.parser.ast.Node)>/n2#_1155
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExpressionStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ExpressionStmt.getExpression/1	<japa.parser.ast.stmt.ExpressionStmt: japa.parser.ast.expr.Expression getExpression()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExpressionStmt,japa.parser.ast.Node)>	1171	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ExpressionStmt,japa.parser.ast.Node)>/n2#_1169
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.SwitchStmt.getSelector/1	<japa.parser.ast.stmt.SwitchStmt: japa.parser.ast.expr.Expression getSelector()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node)>	1181	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node)>/n2#_1179
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.SwitchStmt.getEntries/1	<japa.parser.ast.stmt.SwitchStmt: java.util.List getEntries()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node)>	1185	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchStmt,japa.parser.ast.Node)>/n2#_1179
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.SwitchEntryStmt.getLabel/1	<japa.parser.ast.stmt.SwitchEntryStmt: japa.parser.ast.expr.Expression getLabel()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node)>	1195	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node)>/n2#_1193
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.SwitchEntryStmt.getStmts/1	<japa.parser.ast.stmt.SwitchEntryStmt: java.util.List getStmts()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node)>	1199	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SwitchEntryStmt,japa.parser.ast.Node)>/n2#_1193
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BreakStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.BreakStmt.getId/1	<japa.parser.ast.stmt.BreakStmt: java.lang.String getId()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BreakStmt,japa.parser.ast.Node)>	1209	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.BreakStmt,japa.parser.ast.Node)>/n2#_1207
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ReturnStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ReturnStmt.getExpr/1	<japa.parser.ast.stmt.ReturnStmt: japa.parser.ast.expr.Expression getExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ReturnStmt,japa.parser.ast.Node)>	1219	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ReturnStmt,japa.parser.ast.Node)>/n2#_1217
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.IfStmt.getCondition/1	<japa.parser.ast.stmt.IfStmt: japa.parser.ast.expr.Expression getCondition()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>	1229	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>/n2#_1227
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.IfStmt.getThenStmt/1	<japa.parser.ast.stmt.IfStmt: japa.parser.ast.stmt.Statement getThenStmt()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>	1233	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>/n2#_1227
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.IfStmt.getElseStmt/1	<japa.parser.ast.stmt.IfStmt: japa.parser.ast.stmt.Statement getElseStmt()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>	1237	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.IfStmt,japa.parser.ast.Node)>/n2#_1227
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.WhileStmt.getCondition/1	<japa.parser.ast.stmt.WhileStmt: japa.parser.ast.expr.Expression getCondition()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node)>	1247	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node)>/n2#_1245
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.WhileStmt.getBody/1	<japa.parser.ast.stmt.WhileStmt: japa.parser.ast.stmt.Statement getBody()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node)>	1251	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.WhileStmt,japa.parser.ast.Node)>/n2#_1245
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ContinueStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ContinueStmt.getId/1	<japa.parser.ast.stmt.ContinueStmt: java.lang.String getId()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ContinueStmt,japa.parser.ast.Node)>	1261	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ContinueStmt,japa.parser.ast.Node)>/n2#_1259
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.DoStmt.getBody/1	<japa.parser.ast.stmt.DoStmt: japa.parser.ast.stmt.Statement getBody()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node)>	1271	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node)>/n2#_1269
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.DoStmt.getCondition/1	<japa.parser.ast.stmt.DoStmt: japa.parser.ast.expr.Expression getCondition()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node)>	1275	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.DoStmt,japa.parser.ast.Node)>/n2#_1269
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ForeachStmt.getVariable/1	<japa.parser.ast.stmt.ForeachStmt: japa.parser.ast.expr.VariableDeclarationExpr getVariable()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>	1285	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>/n2#_1283
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ForeachStmt.getIterable/1	<japa.parser.ast.stmt.ForeachStmt: japa.parser.ast.expr.Expression getIterable()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>	1289	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>/n2#_1283
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ForeachStmt.getBody/1	<japa.parser.ast.stmt.ForeachStmt: japa.parser.ast.stmt.Statement getBody()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>	1293	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForeachStmt,japa.parser.ast.Node)>/n2#_1283
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ForStmt.getInit/1	<japa.parser.ast.stmt.ForStmt: java.util.List getInit()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>	1303	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/n2#_1301
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ForStmt.getCompare/1	<japa.parser.ast.stmt.ForStmt: japa.parser.ast.expr.Expression getCompare()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>	1307	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/n2#_1301
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ForStmt.getUpdate/1	<japa.parser.ast.stmt.ForStmt: java.util.List getUpdate()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>	1311	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/n2#_1301
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ForStmt.getBody/1	<japa.parser.ast.stmt.ForStmt: japa.parser.ast.stmt.Statement getBody()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>	1315	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ForStmt,japa.parser.ast.Node)>/n2#_1301
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ThrowStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.ThrowStmt.getExpr/1	<japa.parser.ast.stmt.ThrowStmt: japa.parser.ast.expr.Expression getExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ThrowStmt,japa.parser.ast.Node)>	1325	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.ThrowStmt,japa.parser.ast.Node)>/n2#_1323
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.SynchronizedStmt.getExpr/1	<japa.parser.ast.stmt.SynchronizedStmt: japa.parser.ast.expr.Expression getExpr()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node)>	1335	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node)>/n2#_1333
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.SynchronizedStmt.getBlock/1	<japa.parser.ast.stmt.SynchronizedStmt: japa.parser.ast.stmt.BlockStmt getBlock()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node)>	1339	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.SynchronizedStmt,japa.parser.ast.Node)>/n2#_1333
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.TryStmt.getTryBlock/1	<japa.parser.ast.stmt.TryStmt: japa.parser.ast.stmt.BlockStmt getTryBlock()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>	1349	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>/n2#_1347
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.TryStmt.getCatchs/1	<japa.parser.ast.stmt.TryStmt: java.util.List getCatchs()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>	1353	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>/n2#_1347
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>/japa.parser.ast.stmt.TryStmt.getFinallyBlock/1	<japa.parser.ast.stmt.TryStmt: japa.parser.ast.stmt.BlockStmt getFinallyBlock()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>	1357	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.TryStmt,japa.parser.ast.Node)>/n2#_1347
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node)>/japa.parser.ast.stmt.CatchClause.getExcept/1	<japa.parser.ast.stmt.CatchClause: japa.parser.ast.body.MultiTypeParameter getExcept()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node)>	1367	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node)>/n2#_1365
<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node)>/japa.parser.ast.stmt.CatchClause.getCatchBlock/1	<japa.parser.ast.stmt.CatchClause: japa.parser.ast.stmt.BlockStmt getCatchBlock()>	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node)>	1371	<japa.parser.ast.visitor.EqualsVisitor: java.lang.Boolean visit(japa.parser.ast.stmt.CatchClause,japa.parser.ast.Node)>/n2#_1365
<org.jsonschema2pojo.util.SerializableHelper: void processMethodCollectionForSerializableSupport(java.util.Iterator,java.io.DataOutputStream)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.util.SerializableHelper: void processMethodCollectionForSerializableSupport(java.util.Iterator,java.io.DataOutputStream)>	88	<org.jsonschema2pojo.util.SerializableHelper: void processMethodCollectionForSerializableSupport(java.util.Iterator,java.io.DataOutputStream)>/$stack25
<org.jsonschema2pojo.util.SerializableHelper: void processMethodCollectionForSerializableSupport(java.util.Iterator,java.io.DataOutputStream)>/com.sun.codemodel.JType.fullName/1	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.util.SerializableHelper: void processMethodCollectionForSerializableSupport(java.util.Iterator,java.io.DataOutputStream)>	91	<org.jsonschema2pojo.util.SerializableHelper: void processMethodCollectionForSerializableSupport(java.util.Iterator,java.io.DataOutputStream)>/$stack22
<org.jsonschema2pojo.util.SerializableHelper: void processDefinedClassForSerializableSupport(com.sun.codemodel.JDefinedClass,java.io.DataOutputStream)>/com.sun.codemodel.JClass.fullName/1	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.util.SerializableHelper: void processDefinedClassForSerializableSupport(com.sun.codemodel.JDefinedClass,java.io.DataOutputStream)>	140	<org.jsonschema2pojo.util.SerializableHelper: void processDefinedClassForSerializableSupport(com.sun.codemodel.JDefinedClass,java.io.DataOutputStream)>/$stack34
<org.jsonschema2pojo.util.SerializableHelper: void processFieldVarForSerializableSupport(com.sun.codemodel.JFieldVar,java.io.DataOutputStream)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.util.SerializableHelper: void processFieldVarForSerializableSupport(com.sun.codemodel.JFieldVar,java.io.DataOutputStream)>	152	<org.jsonschema2pojo.util.SerializableHelper: void processFieldVarForSerializableSupport(com.sun.codemodel.JFieldVar,java.io.DataOutputStream)>/type#_151
<org.jsonschema2pojo.util.LanguageFeaturesTest: org.jsonschema2pojo.GenerationConfig mockConfig(java.lang.String)>/org.jsonschema2pojo.GenerationConfig.getTargetVersion/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getTargetVersion()>	<org.jsonschema2pojo.util.LanguageFeaturesTest: org.jsonschema2pojo.GenerationConfig mockConfig(java.lang.String)>	91	<org.jsonschema2pojo.util.LanguageFeaturesTest: org.jsonschema2pojo.GenerationConfig mockConfig(java.lang.String)>/config#_90
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeDynamicAccessors/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeDynamicAccessors()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	96	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack10
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeDynamicSetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeDynamicSetters()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	97	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack13
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeDynamicGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeDynamicGetters()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	98	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack39
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeDynamicBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeDynamicBuilders()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	99	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack46
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeGetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeGetters()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	103	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack16
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeSetters/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeSetters()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	104	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack19
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isGenerateBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isGenerateBuilders()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	105	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack22
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/2	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	196	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/property#5#_194
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/3	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	196	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/property#5#_194
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/2	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	238	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#9#_236
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/3	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	238	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalGetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#9#_236
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicSetMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod)>/com.sun.codemodel.JClass.getTypeParameters/0	<com.sun.codemodel.JClass: java.util.List getTypeParameters()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicSetMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod)>	268	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicSetMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod)>/$stack28
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicWithMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod)>/com.sun.codemodel.JClass.getTypeParameters/0	<com.sun.codemodel.JClass: java.util.List getTypeParameters()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicWithMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod)>	295	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addPublicWithMethod(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JMethod)>/$stack26
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/1	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	330	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#7#_328
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/2	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	330	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava7(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#7#_328
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/1	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	366	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#11#_364
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JDefinedClass.owner/2	<com.sun.codemodel.JClass: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>	366	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JMethod addInternalSetMethodJava6(com.sun.codemodel.JDefinedClass,com.fasterxml.jackson.databind.JsonNode)>/propertyName#11#_364
<org.jsonschema2pojo.rules.DynamicPropertiesRule: void addSetProperty(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JBlock,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: void addSetProperty(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JBlock,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar,com.fasterxml.jackson.databind.JsonNode)>	392	<org.jsonschema2pojo.rules.DynamicPropertiesRule: void addSetProperty(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JBlock,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar,com.fasterxml.jackson.databind.JsonNode)>/propertyType#_0
<org.jsonschema2pojo.rules.DynamicPropertiesRule: void addSetProperty(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JBlock,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.boxify/1	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: void addSetProperty(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JBlock,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar,com.fasterxml.jackson.databind.JsonNode)>	394	<org.jsonschema2pojo.rules.DynamicPropertiesRule: void addSetProperty(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JBlock,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar,com.fasterxml.jackson.databind.JsonNode)>/propertyType#_0
<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JInvocation illegalArgumentInvocation(com.sun.codemodel.JDefinedClass,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JInvocation illegalArgumentInvocation(com.sun.codemodel.JDefinedClass,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar)>	406	<org.jsonschema2pojo.rules.DynamicPropertiesRule: com.sun.codemodel.JInvocation illegalArgumentInvocation(com.sun.codemodel.JDefinedClass,java.lang.String,com.sun.codemodel.JType,com.sun.codemodel.JVar)>/propertyType#_0
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	38	<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.fasterxml.jackson.databind.JsonNode.asText/0	<com.fasterxml.jackson.databind.JsonNode: java.lang.String asText()>	<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	40	<org.jsonschema2pojo.rules.PatternRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/node#_0
<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	48	<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/field#_0
<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>	48	<org.jsonschema2pojo.rules.PatternRule: boolean isApplicableType(com.sun.codemodel.JFieldVar)>/$stack3
<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>	67	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/schema#_0
<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/org.jsonschema2pojo.Schema.getId/1	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>	70	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/schema#_0
<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>	73	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema getSuperSchema(com.fasterxml.jackson.databind.JsonNode,org.jsonschema2pojo.Schema,boolean)>/$stack19
<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass getBaseBuilderClass(com.sun.codemodel.JClass)>/com.sun.codemodel.JClass._package/0	<com.sun.codemodel.JClass: com.sun.codemodel.JPackage _package()>	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass getBaseBuilderClass(com.sun.codemodel.JClass)>	118	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass getBaseBuilderClass(com.sun.codemodel.JClass)>/target#_0
<org.jsonschema2pojo.util.ReflectionHelper: boolean isFinal(com.sun.codemodel.JType)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.util.ReflectionHelper: boolean isFinal(com.sun.codemodel.JType)>	124	<org.jsonschema2pojo.util.ReflectionHelper: boolean isFinal(com.sun.codemodel.JType)>/superType#_0
<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>/com.sun.codemodel.JType.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>	141	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>/type#_0
<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>/com.sun.codemodel.JType.boxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JClass boxify()>	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>	144	<org.jsonschema2pojo.util.ReflectionHelper: com.sun.codemodel.JDefinedClass definedClassOrNullFromType(com.sun.codemodel.JType)>/type#_0
<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema resolveSchemaRefsRecursive(org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema resolveSchemaRefsRecursive(org.jsonschema2pojo.Schema)>	186	<org.jsonschema2pojo.util.ReflectionHelper: org.jsonschema2pojo.Schema resolveSchemaRefsRecursive(org.jsonschema2pojo.Schema)>/$stack10
<org.jsonschema2pojo.rules.ValidRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.ValidRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	37	<org.jsonschema2pojo.rules.ValidRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack7
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getNameHelper/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.util.NameHelper getNameHelper()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	55	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack1
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getLogger/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.RuleLogger getLogger()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	56	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack6
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getAnnotator/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.Annotator getAnnotator()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	57	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack11
<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getTypeRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTypeRule()>	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>	58	<org.jsonschema2pojo.rules.EnumRuleTest: void wireUpConfig()>/$stack16
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	86	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/result1#_83
<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/com.sun.codemodel.JType.fullName/1	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>	87	<org.jsonschema2pojo.rules.EnumRuleTest: void applyGeneratesUniqueEnumNamesForMultipleEnumNodesWithSameName()>/result2#_84
<org.jsonschema2pojo.SourceSortOrderTest: java.io.File mockFile(boolean)>/java.io.File.isDirectory/0	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrderTest: java.io.File mockFile(boolean)>	103	<org.jsonschema2pojo.SourceSortOrderTest: java.io.File mockFile(boolean)>/mockFile#_102
<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>/com.sun.codemodel.JType.owner/0	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>	188	<com.sun.codemodel.JVar: com.sun.codemodel.JAnnotationUse annotate(java.lang.Class)>/$stack2
<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>	129	<com.fasterxml.jackson.databind.type.ResolvedRecursiveType: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.util.NameHelperTest: org.jsonschema2pojo.util.NameHelper helper(boolean)>/org.jsonschema2pojo.GenerationConfig.isUseTitleAsClassname/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseTitleAsClassname()>	<org.jsonschema2pojo.util.NameHelperTest: org.jsonschema2pojo.util.NameHelper helper(boolean)>	76	<org.jsonschema2pojo.util.NameHelperTest: org.jsonschema2pojo.util.NameHelper helper(boolean)>/config#_75
<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JDefinedClass _extends(com.sun.codemodel.JClass)>/com.sun.codemodel.JClass.isInterface/0	<com.sun.codemodel.JClass: boolean isInterface()>	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JDefinedClass _extends(com.sun.codemodel.JClass)>	264	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JDefinedClass _extends(com.sun.codemodel.JClass)>/superClass#_0
<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JDefinedClass _extends(com.sun.codemodel.JClass)>/com.sun.codemodel.JClass.outer/0	<com.sun.codemodel.JClass: com.sun.codemodel.JClass outer()>	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JDefinedClass _extends(com.sun.codemodel.JClass)>	270	<com.sun.codemodel.JDefinedClass: com.sun.codemodel.JDefinedClass _extends(com.sun.codemodel.JClass)>/superClass#_0
<org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>/java.lang.Object.getClass/1	<java.lang.Object: java.lang.Class getClass()>	<org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>	312	<org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)>/o#_0
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/java.util.Map$Entry.getKey/0	<java.util.Map$Entry: java.lang.Object getKey()>	<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>	48	<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/that#_47
<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/java.util.Map$Entry.getValue/0	<java.util.Map$Entry: java.lang.Object getValue()>	<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>	48	<com.google.common.collect.AbstractMapEntry: boolean equals(java.lang.Object)>/that#_47
<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/0	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>	69	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/fileA#_0
<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/1	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>	69	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/fileB#_0
<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/2	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>	73	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/fileA#_0
<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/java.io.File.isDirectory/3	<java.io.File: boolean isDirectory()>	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>	73	<org.jsonschema2pojo.SourceSortOrder$3$1: int compare(java.io.File,java.io.File)>/fileB#_0
<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/org.jsonschema2pojo.GenerationConfig.getPropertyWordDelimiters/0	<org.jsonschema2pojo.GenerationConfig: char[] getPropertyWordDelimiters()>	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>	94	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/config#_93
<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>	98	<org.jsonschema2pojo.rules.RequiredArrayRuleTest: void setupRuleFactoryToIncludeJsr303()>/config#_93
<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isGenerateBuilders/0	<org.jsonschema2pojo.GenerationConfig: boolean isGenerateBuilders()>	<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	73	<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack11
<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JClass.name/0	<com.sun.codemodel.JClass: java.lang.String name()>	<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	73	<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack15
<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JClass.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	74	<org.jsonschema2pojo.rules.PropertiesRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack23
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	99	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack4
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.asInt/0	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	103	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack14
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.fasterxml.jackson.databind.JsonNode.asInt/1	<com.fasterxml.jackson.databind.JsonNode: int asInt()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	104	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack20
<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>	110	<org.jsonschema2pojo.rules.DigitsRuleTest: void testHasIntegerAndFractionalDigits()>/$stack53
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	122	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack2
<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/com.sun.codemodel.JFieldVar.type/0	<com.sun.codemodel.JVar: com.sun.codemodel.JType type()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>	125	<org.jsonschema2pojo.rules.DigitsRuleTest: void testNotUsed()>/$stack20
<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>	136	<org.jsonschema2pojo.rules.DigitsRuleTest: void jsrDisable()>/$stack2
<com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>	37	<com.fasterxml.jackson.databind.jsontype.NamedType: boolean equals(java.lang.Object)>/o#_0
<com.github.tomakehurst.wiremock.admin.RequestSpec: boolean equals(java.lang.Object)>/java.lang.Object.getClass/1	<java.lang.Object: java.lang.Class getClass()>	<com.github.tomakehurst.wiremock.admin.RequestSpec: boolean equals(java.lang.Object)>	63	<com.github.tomakehurst.wiremock.admin.RequestSpec: boolean equals(java.lang.Object)>/o#_0
<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>	226	<com.fasterxml.jackson.databind.PropertyName: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JType.owner/0	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>	99	<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>/baseType#_0
<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>	100	<org.jsonschema2pojo.rules.FormatRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JType,org.jsonschema2pojo.Schema)>/$stack13
<org.jsonschema2pojo.rules.FormatRule: java.util.Map getFormatTypeMapping(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getFormatTypeMapping/0	<org.jsonschema2pojo.GenerationConfig: java.util.Map getFormatTypeMapping()>	<org.jsonschema2pojo.rules.FormatRule: java.util.Map getFormatTypeMapping(org.jsonschema2pojo.GenerationConfig)>	131	<org.jsonschema2pojo.rules.FormatRule: java.util.Map getFormatTypeMapping(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getDateTimeType/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getDateTimeType()>	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>	143	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUseJodaDates/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaDates()>	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>	147	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateTimeType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getDateType/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getDateType()>	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>	151	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUseJodaLocalDates/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaLocalDates()>	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>	155	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getDateType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getTimeType/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getTimeType()>	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>	159	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.isUseJodaLocalTimes/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaLocalTimes()>	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>	163	<org.jsonschema2pojo.rules.FormatRule: java.lang.Class getTimeType(org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	117	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/parent#_0
<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/org.jsonschema2pojo.Schema.getId/1	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	117	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/parent#_0
<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/org.jsonschema2pojo.Schema.getGrandParent/0	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema getGrandParent()>	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	129	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/parent#_0
<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/org.jsonschema2pojo.Schema.getGrandParent/1	<org.jsonschema2pojo.Schema: org.jsonschema2pojo.Schema getGrandParent()>	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>	130	<org.jsonschema2pojo.SchemaStore: org.jsonschema2pojo.Schema create(org.jsonschema2pojo.Schema,java.lang.String,java.lang.String)>/parent#_0
<org.jsonschema2pojo.SchemaStore: boolean selfReferenceWithoutParentFile(org.jsonschema2pojo.Schema,java.lang.String)>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.SchemaStore: boolean selfReferenceWithoutParentFile(org.jsonschema2pojo.Schema,java.lang.String)>	140	<org.jsonschema2pojo.SchemaStore: boolean selfReferenceWithoutParentFile(org.jsonschema2pojo.Schema,java.lang.String)>/parent#_0
<org.jsonschema2pojo.SchemaStore: boolean selfReferenceWithoutParentFile(org.jsonschema2pojo.Schema,java.lang.String)>/org.jsonschema2pojo.Schema.getId/1	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.SchemaStore: boolean selfReferenceWithoutParentFile(org.jsonschema2pojo.Schema,java.lang.String)>	140	<org.jsonschema2pojo.SchemaStore: boolean selfReferenceWithoutParentFile(org.jsonschema2pojo.Schema,java.lang.String)>/parent#_0
<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>/com.fasterxml.jackson.core.JsonLocation.getByteOffset/1	<com.fasterxml.jackson.core.JsonLocation: long getByteOffset()>	<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>	151	<com.fasterxml.jackson.core.JsonLocation: boolean equals(java.lang.Object)>/otherLoc#_142
<org.jsonschema2pojo.Jsonschema2Pojo: java.lang.String getNodeName(java.lang.String,org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getFileExtensions/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String[] getFileExtensions()>	<org.jsonschema2pojo.Jsonschema2Pojo: java.lang.String getNodeName(java.lang.String,org.jsonschema2pojo.GenerationConfig)>	172	<org.jsonschema2pojo.Jsonschema2Pojo: java.lang.String getNodeName(java.lang.String,org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.Jsonschema2Pojo: java.lang.String getNodeName(java.lang.String,org.jsonschema2pojo.GenerationConfig)>/org.jsonschema2pojo.GenerationConfig.getFileExtensions/1	<org.jsonschema2pojo.GenerationConfig: java.lang.String[] getFileExtensions()>	<org.jsonschema2pojo.Jsonschema2Pojo: java.lang.String getNodeName(java.lang.String,org.jsonschema2pojo.GenerationConfig)>	172	<org.jsonschema2pojo.Jsonschema2Pojo: java.lang.String getNodeName(java.lang.String,org.jsonschema2pojo.GenerationConfig)>/config#_0
<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getSchemaStore/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.SchemaStore getSchemaStore()>	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	69	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack23
<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	69	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack27
<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.getRefFragmentPathDelimiters/0	<org.jsonschema2pojo.GenerationConfig: java.lang.String getRefFragmentPathDelimiters()>	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	69	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack28
<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getEnumRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getEnumRule()>	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	83	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack14
<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.rules.RuleFactory.getTypeRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getTypeRule()>	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>	85	<org.jsonschema2pojo.rules.SchemaRule: com.sun.codemodel.JType apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JClassContainer,org.jsonschema2pojo.Schema)>/$stack10
<org.jsonschema2pojo.rules.SchemaRule: java.lang.String nameFromRef(java.lang.String)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.SchemaRule: java.lang.String nameFromRef(java.lang.String)>	100	<org.jsonschema2pojo.rules.SchemaRule: java.lang.String nameFromRef(java.lang.String)>/$stack11
<org.jsonschema2pojo.rules.TypeRuleTest: void wireUpConfig()>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.rules.TypeRuleTest: void wireUpConfig()>	52	<org.jsonschema2pojo.rules.TypeRuleTest: void wireUpConfig()>/$stack1
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesString()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesString()>	65	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesString()>/result#_63
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/org.jsonschema2pojo.rules.RuleFactory.getFormatRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getFormatRule()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>	82	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesDate()>/$stack32
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesInteger()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesInteger()>	99	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesInteger()>/result#_97
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>	110	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>	114	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerPrimitive()>/result#_112
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>	126	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>	130	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeIntegerPrimitive()>/result#_128
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>/org.jsonschema2pojo.GenerationConfig.isUseBigIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigIntegers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>	141	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>	145	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigInteger()>/result#_143
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/org.jsonschema2pojo.GenerationConfig.isUseBigIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigIntegers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>	157	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/org.jsonschema2pojo.GenerationConfig.isUseLongIntegers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseLongIntegers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>	158	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/$stack18
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>	162	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigIntegerOverridingLong()>/result#_160
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>/org.jsonschema2pojo.GenerationConfig.isUseBigDecimals/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigDecimals()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>	173	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>	177	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimal()>/result#_175
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>	189	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/org.jsonschema2pojo.GenerationConfig.isUseBigDecimals/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseBigDecimals()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>	190	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/$stack18
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>	194	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBigDecimalOverridingDouble()>/result#_192
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>	207	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>	211	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeInteger()>/result#_209
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>	223	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>	227	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitive()>/result#_225
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>	239	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>	243	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLong()>/result#_241
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>	255	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>	259	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumGreaterThanIntegerMax()>/result#_257
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>	271	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>	275	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumGreaterThanIntegerMax()>/result#_273
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>	287	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>	291	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMaximumLessThanIntegerMin()>/result#_289
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>	303	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>	307	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMaximumLessThanIntegerMin()>/result#_305
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>	319	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>	323	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumLessThanIntegerMin()>/result#_321
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>	335	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>	339	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumLessThanIntegerMin()>/result#_337
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>	351	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>	355	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongPrimitiveWhenMinimumGreaterThanIntegerMax()>/result#_353
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>	367	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>	371	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeLongWhenMinimumGreaterThanIntegerMax()>/result#_369
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeBigInteger()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeBigInteger()>	385	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesIntegerUsingJavaTypeBigInteger()>/result#_383
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>	396	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>	400	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumber()>/result#_398
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>	411	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>	412	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/$stack18
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>	416	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberPrimitive()>/result#_414
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>	428	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>	432	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloatPrimitive()>/result#_430
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>	444	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>	448	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeFloat()>/result#_446
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>	460	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>	464	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDoublePrimitive()>/result#_462
<com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>	314	<com.fasterxml.jackson.databind.type.SimpleType: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>	476	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>/$stack13
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>	480	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeDouble()>/result#_478
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeBigDecimal()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeBigDecimal()>	494	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNumberUsingJavaTypeBigDecimal()>/result#_492
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBoolean()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBoolean()>	507	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBoolean()>/result#_505
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>	518	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>/$stack12
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>	522	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesBooleanPrimitive()>/result#_520
<com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>	272	<com.fasterxml.jackson.databind.type.ReferenceType: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesAnyAsObject()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesAnyAsObject()>	535	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesAnyAsObject()>/result#_533
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNullAsObject()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNullAsObject()>	548	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesNullAsObject()>/result#_546
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/org.jsonschema2pojo.rules.RuleFactory.getArrayRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getArrayRule()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>	562	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesArray()>/$stack19
<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/org.jsonschema2pojo.rules.RuleFactory.getObjectRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getObjectRule()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>	580	<org.jsonschema2pojo.rules.TypeRuleTest: void applyGeneratesCustomObject()>/$stack19
<org.jsonschema2pojo.rules.TypeRuleTest: void applyChoosesObjectOnUnrecognizedType()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyChoosesObjectOnUnrecognizedType()>	597	<org.jsonschema2pojo.rules.TypeRuleTest: void applyChoosesObjectOnUnrecognizedType()>/result#_595
<org.jsonschema2pojo.rules.TypeRuleTest: void applyDefaultsToTypeAnyObject()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.TypeRuleTest: void applyDefaultsToTypeAnyObject()>	610	<org.jsonschema2pojo.rules.TypeRuleTest: void applyDefaultsToTypeAnyObject()>/result#_608
<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.Schema.getContent/0	<org.jsonschema2pojo.Schema: com.fasterxml.jackson.databind.JsonNode getContent()>	<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	56	<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/schema#_0
<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr303Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr303Annotations()>	<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	79	<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack28
<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/org.jsonschema2pojo.GenerationConfig.isIncludeJsr305Annotations/0	<org.jsonschema2pojo.GenerationConfig: boolean isIncludeJsr305Annotations()>	<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	83	<org.jsonschema2pojo.rules.RequiredArrayRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/$stack31
<org.jsonschema2pojo.rules.BuilderRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JClass.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.BuilderRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	73	<org.jsonschema2pojo.rules.BuilderRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/builderClassName#5#_72
<org.jsonschema2pojo.rules.BuilderRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JClass.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.BuilderRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>	73	<org.jsonschema2pojo.rules.BuilderRule: com.sun.codemodel.JDefinedClass apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JDefinedClass,org.jsonschema2pojo.Schema)>/builderClassName#5#_72
<org.jsonschema2pojo.rules.BuilderRule: void generateNoArgsBaseBuilderConstructor(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JClass.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.BuilderRule: void generateNoArgsBaseBuilderConstructor(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass)>	146	<org.jsonschema2pojo.rules.BuilderRule: void generateNoArgsBaseBuilderConstructor(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass)>/parentClass#_145
<org.jsonschema2pojo.rules.BuilderRule: void generateNoArgsBaseBuilderConstructor(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass)>/com.sun.codemodel.JClass.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.BuilderRule: void generateNoArgsBaseBuilderConstructor(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass)>	146	<org.jsonschema2pojo.rules.BuilderRule: void generateNoArgsBaseBuilderConstructor(com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass,com.sun.codemodel.JDefinedClass)>/parentClass#_145
<org.hamcrest.collection.IsCollectionWithSize: java.lang.Integer featureValueOf(java.util.Collection)>/java.util.Collection.size/0	<java.util.Collection: int size()>	<org.hamcrest.collection.IsCollectionWithSize: java.lang.Integer featureValueOf(java.util.Collection)>	21	<org.hamcrest.collection.IsCollectionWithSize: java.lang.Integer featureValueOf(java.util.Collection)>/actual#_0
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>	85	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/schema#_84
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>	87	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayWithNonUniqueItemsProducesList()>/$stack30
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	111	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/schema#_110
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.GenerationConfig.isUsePrimitives/0	<org.jsonschema2pojo.GenerationConfig: boolean isUsePrimitives()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	113	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/$stack30
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/org.jsonschema2pojo.GenerationConfig.isUseDoubleNumbers/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseDoubleNumbers()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>	114	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayOfPrimitivesProducesCollectionOfWrapperTypes()>/$stack36
<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/org.jsonschema2pojo.Schema.getId/0	<org.jsonschema2pojo.Schema: java.net.URI getId()>	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>	138	<org.jsonschema2pojo.rules.ArrayRuleTest: void arrayDefaultsToNonUnique()>/schema#_137
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	88	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack8
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/com.sun.codemodel.JType.isPrimitive/0	<com.sun.codemodel.JType: boolean isPrimitive()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>	90	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JFieldVar apply(java.lang.String,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode,com.sun.codemodel.JFieldVar,org.jsonschema2pojo.Schema)>/$stack33
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultValue(com.sun.codemodel.JType,java.lang.String)>/com.sun.codemodel.JType.unboxify/0	<com.sun.codemodel.JType: com.sun.codemodel.JType unboxify()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultValue(com.sun.codemodel.JType,java.lang.String)>	114	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultValue(com.sun.codemodel.JType,java.lang.String)>/fieldType#_0
<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.net.URL)>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.net.URL)>	92	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.net.URL)>/$stack9
<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>	98	<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>/$stack3
<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/1	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>	108	<org.jsonschema2pojo.SchemaMapper: com.fasterxml.jackson.databind.node.ObjectNode readSchema(java.net.URL)>/$stack19
<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String,java.net.URI)>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String,java.net.URI)>	120	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String,java.net.URI)>/$stack11
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JClass.getTypeParameters/0	<com.sun.codemodel.JClass: java.util.List getTypeParameters()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	187	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/$stack9
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.owner/0	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	189	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/fieldType#_0
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.owner/1	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	195	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/fieldType#_0
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/org.jsonschema2pojo.GenerationConfig.isInitializeCollections/0	<org.jsonschema2pojo.GenerationConfig: boolean isInitializeCollections()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	194	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultList(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/$stack18
<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>/org.jsonschema2pojo.rules.RuleFactory.getGenerationConfig/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.GenerationConfig getGenerationConfig()>	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>	129	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>/$stack9
<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>/org.jsonschema2pojo.rules.RuleFactory.getSchemaRule/0	<org.jsonschema2pojo.rules.RuleFactory: org.jsonschema2pojo.rules.Rule getSchemaRule()>	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>	136	<org.jsonschema2pojo.SchemaMapper: com.sun.codemodel.JType generate(com.sun.codemodel.JCodeModel,java.lang.String,java.lang.String,java.lang.String)>/$stack15
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JClass.getTypeParameters/0	<com.sun.codemodel.JClass: java.util.List getTypeParameters()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	226	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/$stack9
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.owner/0	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	228	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/fieldType#_0
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/com.sun.codemodel.JType.owner/1	<com.sun.codemodel.JType: com.sun.codemodel.JCodeModel owner()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	234	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/fieldType#_0
<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/org.jsonschema2pojo.GenerationConfig.isInitializeCollections/0	<org.jsonschema2pojo.GenerationConfig: boolean isInitializeCollections()>	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>	233	<org.jsonschema2pojo.rules.DefaultRule: com.sun.codemodel.JExpression getDefaultSet(com.sun.codemodel.JType,com.fasterxml.jackson.databind.JsonNode)>/$stack18
<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>	173	<com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey: boolean equals(java.lang.Object)>/o#_0
<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/org.jsonschema2pojo.GenerationConfig.isUseJodaLocalTimes/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaLocalTimes()>	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>	66	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/$stack1
<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/org.jsonschema2pojo.GenerationConfig.isUseJodaLocalDates/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaLocalDates()>	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>	67	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/$stack7
<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/org.jsonschema2pojo.GenerationConfig.isUseJodaDates/0	<org.jsonschema2pojo.GenerationConfig: boolean isUseJodaDates()>	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>	68	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void setupConfig()>/$stack13
<org.jsonschema2pojo.rules.FormatRuleJodaTest: void applyGeneratesTypeFromFormatValue()>/com.sun.codemodel.JType.fullName/0	<com.sun.codemodel.JType: java.lang.String fullName()>	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void applyGeneratesTypeFromFormatValue()>	78	<org.jsonschema2pojo.rules.FormatRuleJodaTest: void applyGeneratesTypeFromFormatValue()>/result#_76
<com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>	452	<com.fasterxml.jackson.databind.type.TypeBindings$AsKey: boolean equals(java.lang.Object)>/o#_0
<org.hamcrest.TypeSafeMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/java.lang.Object.getClass/0	<java.lang.Object: java.lang.Class getClass()>	<org.hamcrest.TypeSafeMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>	76	<org.hamcrest.TypeSafeMatcher: void describeMismatch(java.lang.Object,org.hamcrest.Description)>/item#_0
